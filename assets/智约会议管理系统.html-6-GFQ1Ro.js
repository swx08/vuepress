import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as c,c as l,b as n,d as s,e as t,a as p}from"./app-DCsLG_oX.js";const i={},u=p(`<h1 id="智约会议管理系统" tabindex="-1"><a class="header-anchor" href="#智约会议管理系统"><span>智约会议管理系统</span></a></h1><h2 id="后台" tabindex="-1"><a class="header-anchor" href="#后台"><span>后台</span></a></h2><h3 id="项目搭建" tabindex="-1"><a class="header-anchor" href="#项目搭建"><span>项目搭建</span></a></h3><h4 id="_1、导入依赖" tabindex="-1"><a class="header-anchor" href="#_1、导入依赖"><span>1、导入依赖</span></a></h4><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token operator">&lt;</span>project xmlns<span class="token operator">=</span><span class="token string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> xmlns<span class="token operator">:</span>xsi<span class="token operator">=</span><span class="token string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span>
  xsi<span class="token operator">:</span>schemaLocation<span class="token operator">=</span><span class="token string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span><span class="token operator">&gt;</span>
  <span class="token generics"><span class="token punctuation">&lt;</span>modelVersion<span class="token punctuation">&gt;</span></span><span class="token number">4.0</span><span class="token number">.0</span><span class="token operator">&lt;</span><span class="token operator">/</span>modelVersion<span class="token operator">&gt;</span>

  <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>com<span class="token punctuation">.</span>sixkey<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>
  <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>meet<span class="token operator">-</span>booking<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>
  <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">&gt;</span></span><span class="token number">1.0</span><span class="token operator">-</span><span class="token constant">SNAPSHOT</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span>
  <span class="token generics"><span class="token punctuation">&lt;</span>packaging<span class="token punctuation">&gt;</span></span>jar<span class="token operator">&lt;</span><span class="token operator">/</span>packaging<span class="token operator">&gt;</span>

  <span class="token generics"><span class="token punctuation">&lt;</span>parent<span class="token punctuation">&gt;</span></span>
    <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>
    <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>spring<span class="token operator">-</span>boot<span class="token operator">-</span>starter<span class="token operator">-</span>parent<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>
    <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">&gt;</span></span><span class="token number">2.7</span><span class="token number">.5</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>parent<span class="token operator">&gt;</span>

  <span class="token generics"><span class="token punctuation">&lt;</span>properties<span class="token punctuation">&gt;</span></span>
    <span class="token generics"><span class="token punctuation">&lt;</span>project<span class="token punctuation">.</span>build<span class="token punctuation">.</span>sourceEncoding<span class="token punctuation">&gt;</span></span><span class="token constant">UTF</span><span class="token operator">-</span><span class="token number">8</span><span class="token operator">&lt;</span><span class="token operator">/</span>project<span class="token punctuation">.</span>build<span class="token punctuation">.</span>sourceEncoding<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>properties<span class="token operator">&gt;</span>

  <span class="token generics"><span class="token punctuation">&lt;</span>dependencies<span class="token punctuation">&gt;</span></span>
    <span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span>
      <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>
      <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>spring<span class="token operator">-</span>boot<span class="token operator">-</span>starter<span class="token operator">-</span>validation<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>
    <span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span>
      <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>
      <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>spring<span class="token operator">-</span>boot<span class="token operator">-</span>starter<span class="token operator">-</span>web<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>
    <span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span>
      <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>
      <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>spring<span class="token operator">-</span>boot<span class="token operator">-</span>starter<span class="token operator">-</span>test<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>
      <span class="token generics"><span class="token punctuation">&lt;</span>scope<span class="token punctuation">&gt;</span></span>test<span class="token operator">&lt;</span><span class="token operator">/</span>scope<span class="token operator">&gt;</span>
      <span class="token generics"><span class="token punctuation">&lt;</span>exclusions<span class="token punctuation">&gt;</span></span>
        <span class="token generics"><span class="token punctuation">&lt;</span>exclusion<span class="token punctuation">&gt;</span></span>
          <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>vintage<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>
          <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>junit<span class="token operator">-</span>vintage<span class="token operator">-</span>engine<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>exclusion<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>exclusions<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>
    <span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span>
      <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>junit<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>
      <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>junit<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>
      <span class="token generics"><span class="token punctuation">&lt;</span>scope<span class="token punctuation">&gt;</span></span>test<span class="token operator">&lt;</span><span class="token operator">/</span>scope<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>mysql数据库驱动依赖<span class="token operator">--</span><span class="token operator">&gt;</span>
    <span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span>
      <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>mysql<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>
      <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>mysql<span class="token operator">-</span>connector<span class="token operator">-</span>java<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>druid连接池<span class="token operator">--</span><span class="token operator">&gt;</span>
    <span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span>
      <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>com<span class="token punctuation">.</span>alibaba<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>
      <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>druid<span class="token operator">-</span>spring<span class="token operator">-</span>boot<span class="token operator">-</span>starter<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>
      <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">&gt;</span></span><span class="token number">1.1</span><span class="token number">.22</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>mybatis<span class="token operator">-</span>plus依赖，已经包括了mybatis的依赖了<span class="token operator">--</span><span class="token operator">&gt;</span>
    <span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span>
      <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>com<span class="token punctuation">.</span>baomidou<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>
      <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>mybatis<span class="token operator">-</span>plus<span class="token operator">-</span>boot<span class="token operator">-</span>starter<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>
      <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">&gt;</span></span><span class="token number">3.3</span><span class="token number">.1</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>mybatis<span class="token operator">-</span>plus的模板引擎依赖，使用mybatis<span class="token operator">-</span>plus必须要加这个依赖<span class="token operator">--</span><span class="token operator">&gt;</span>
    <span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span>
      <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>velocity<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>
      <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>velocity<span class="token operator">-</span>engine<span class="token operator">-</span>core<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>
      <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">&gt;</span></span><span class="token number">2.0</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 引入lombok <span class="token operator">--</span><span class="token operator">&gt;</span>
    <span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span>
      <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>org<span class="token punctuation">.</span>projectlombok<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>
      <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>lombok<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>
      <span class="token generics"><span class="token punctuation">&lt;</span>optional<span class="token punctuation">&gt;</span></span><span class="token boolean">true</span><span class="token operator">&lt;</span><span class="token operator">/</span>optional<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 引入springAop <span class="token operator">--</span><span class="token operator">&gt;</span>
    <span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span>
      <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>
      <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>spring<span class="token operator">-</span>boot<span class="token operator">-</span>starter<span class="token operator">-</span>aop<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 引入fastjson <span class="token operator">--</span><span class="token operator">&gt;</span>
    <span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span>
      <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>com<span class="token punctuation">.</span>alibaba<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>
      <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>fastjson<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>
      <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">&gt;</span></span><span class="token number">2.0</span><span class="token number">.7</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>dependencies<span class="token operator">&gt;</span>

  <span class="token generics"><span class="token punctuation">&lt;</span>build<span class="token punctuation">&gt;</span></span>
    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 注：maven默认是不编译，因此加上如下resources才会生产对应的xml文件 目的：解决mybatis映射关系不对应问题  start <span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span> <span class="token operator">--</span><span class="token operator">&gt;</span>
    <span class="token generics"><span class="token punctuation">&lt;</span>resources<span class="token punctuation">&gt;</span></span>
      <span class="token generics"><span class="token punctuation">&lt;</span>resource<span class="token punctuation">&gt;</span></span>
        <span class="token generics"><span class="token punctuation">&lt;</span>directory<span class="token punctuation">&gt;</span></span>src<span class="token operator">/</span>main<span class="token operator">/</span>java<span class="token operator">&lt;</span><span class="token operator">/</span>directory<span class="token operator">&gt;</span>
        <span class="token generics"><span class="token punctuation">&lt;</span>includes<span class="token punctuation">&gt;</span></span>
          <span class="token generics"><span class="token punctuation">&lt;</span>include<span class="token punctuation">&gt;</span></span><span class="token operator">*</span><span class="token operator">*</span><span class="token comment">/*.xml&lt;/include&gt;
        &lt;/includes&gt;
        &lt;filtering&gt;false&lt;/filtering&gt;
      &lt;/resource&gt;
      &lt;resource&gt;
        &lt;directory&gt;src/main/resources&lt;/directory&gt;
      &lt;/resource&gt;
    &lt;/resources&gt;
    &lt;testResources&gt;
      &lt;testResource&gt;
        &lt;directory&gt;src/main/java&lt;/directory&gt;
        &lt;includes&gt;
          &lt;include&gt;**/</span><span class="token operator">*</span><span class="token punctuation">.</span>xml<span class="token operator">&lt;</span><span class="token operator">/</span>include<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>includes<span class="token operator">&gt;</span>
        <span class="token generics"><span class="token punctuation">&lt;</span>filtering<span class="token punctuation">&gt;</span></span><span class="token boolean">false</span><span class="token operator">&lt;</span><span class="token operator">/</span>filtering<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>testResource<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>testResources<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 注：maven默认是不编译，因此加上如下resources才会生产对应的xml文件 目的：解决mybatis映射关系不对应问题  end <span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span> <span class="token operator">--</span><span class="token operator">&gt;</span>

    <span class="token generics"><span class="token punctuation">&lt;</span>plugins<span class="token punctuation">&gt;</span></span>
      <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> maven打包插件 <span class="token operator">-&gt;</span> 将整个工程打成一个 fatjar <span class="token operator">--</span><span class="token operator">&gt;</span>
      <span class="token generics"><span class="token punctuation">&lt;</span>plugin<span class="token punctuation">&gt;</span></span>
        <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>
        <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>spring<span class="token operator">-</span>boot<span class="token operator">-</span>maven<span class="token operator">-</span>plugin<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 作用<span class="token operator">:</span>项目打成jar，同时把本地jar包也引入进去 <span class="token operator">--</span><span class="token operator">&gt;</span>
        <span class="token generics"><span class="token punctuation">&lt;</span>configuration<span class="token punctuation">&gt;</span></span>
          <span class="token generics"><span class="token punctuation">&lt;</span>includeSystemScope<span class="token punctuation">&gt;</span></span><span class="token boolean">true</span><span class="token operator">&lt;</span><span class="token operator">/</span>includeSystemScope<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>configuration<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>plugin<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>添加配置跳过测试<span class="token operator">--</span><span class="token operator">&gt;</span>
      <span class="token generics"><span class="token punctuation">&lt;</span>plugin<span class="token punctuation">&gt;</span></span>
        <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>maven<span class="token punctuation">.</span>plugins<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>
        <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>maven<span class="token operator">-</span>surefire<span class="token operator">-</span>plugin<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>
        <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">&gt;</span></span><span class="token number">2.22</span><span class="token number">.1</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span>
        <span class="token generics"><span class="token punctuation">&lt;</span>configuration<span class="token punctuation">&gt;</span></span>
          <span class="token generics"><span class="token punctuation">&lt;</span>skipTests<span class="token punctuation">&gt;</span></span><span class="token boolean">true</span><span class="token operator">&lt;</span><span class="token operator">/</span>skipTests<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>configuration<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>plugin<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>plugins<span class="token operator">&gt;</span>

    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 固定<span class="token class-name">Jar</span>包名字 <span class="token operator">--</span><span class="token operator">&gt;</span>
    <span class="token generics"><span class="token punctuation">&lt;</span>finalName<span class="token punctuation">&gt;</span></span>meet<span class="token operator">-</span>booking<span class="token operator">&lt;</span><span class="token operator">/</span>finalName<span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>build<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>project<span class="token operator">&gt;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2、配置文件" tabindex="-1"><a class="header-anchor" href="#_2、配置文件"><span>2、配置文件</span></a></h4><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">server</span><span class="token punctuation">:</span>
  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8600</span>
<span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">servlet</span><span class="token punctuation">:</span>
    <span class="token key atrule">multipart</span><span class="token punctuation">:</span>
      <span class="token key atrule">max-file-size</span><span class="token punctuation">:</span> 100MB
      <span class="token key atrule">max-request-size</span><span class="token punctuation">:</span> 100MB
  <span class="token key atrule">application</span><span class="token punctuation">:</span>
    <span class="token key atrule">name</span><span class="token punctuation">:</span> meetBook
  <span class="token key atrule">datasource</span><span class="token punctuation">:</span>
    <span class="token key atrule">url</span><span class="token punctuation">:</span> jdbc<span class="token punctuation">:</span>mysql<span class="token punctuation">:</span>//localhost<span class="token punctuation">:</span>3306/数据库名<span class="token punctuation">?</span>characterEncoding=UTF<span class="token punctuation">-</span>8<span class="token important">&amp;useUnicode=true&amp;useSSL=false&amp;serverTimezone=Asia/Shanghai&amp;tinyInt1isBit=false</span>
    <span class="token key atrule">driver-class-name</span><span class="token punctuation">:</span> com.mysql.cj.jdbc.Driver
    <span class="token key atrule">username</span><span class="token punctuation">:</span> root
    <span class="token key atrule">password</span><span class="token punctuation">:</span> 数据库密码
    <span class="token key atrule">type</span><span class="token punctuation">:</span> com.alibaba.druid.pool.DruidDataSource
    <span class="token key atrule">initial-size</span><span class="token punctuation">:</span> <span class="token number">10</span>
    <span class="token key atrule">max-active</span><span class="token punctuation">:</span> <span class="token number">150</span>
    <span class="token key atrule">min-idle</span><span class="token punctuation">:</span> <span class="token number">10</span>
    <span class="token key atrule">max-wait</span><span class="token punctuation">:</span> <span class="token number">5000</span>
    <span class="token key atrule">pool-prepared-statements</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
    <span class="token key atrule">validation-query</span><span class="token punctuation">:</span> SELECT 1
    <span class="token key atrule">validation-query-timeout</span><span class="token punctuation">:</span> <span class="token number">500</span>
    <span class="token key atrule">test-on-borrow</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
    <span class="token key atrule">test-on-return</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
    <span class="token key atrule">test-while-idle</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token key atrule">time-between-eviction-runs-millis</span><span class="token punctuation">:</span> <span class="token number">60000</span>
    <span class="token key atrule">min-evictable-idle-time-millis</span><span class="token punctuation">:</span> <span class="token number">30000</span>
    <span class="token key atrule">filters</span><span class="token punctuation">:</span> stat<span class="token punctuation">,</span>wall<span class="token punctuation">,</span>log4j
    <span class="token key atrule">connectionProperties</span><span class="token punctuation">:</span> druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

<span class="token comment">#==============================IP限流次数和时间配置==============================</span>
<span class="token key atrule">IpLimit</span><span class="token punctuation">:</span>
  <span class="token comment">#请求次数</span>
  <span class="token key atrule">count</span><span class="token punctuation">:</span> <span class="token number">10</span>
  <span class="token comment">#请求时间</span>
  <span class="token key atrule">time</span><span class="token punctuation">:</span> <span class="token number">10</span>

<span class="token comment">#==============================mybatis-plus配置==============================</span>
<span class="token key atrule">mybatis-plus</span><span class="token punctuation">:</span>
  <span class="token key atrule">mapper-locations</span><span class="token punctuation">:</span> classpath<span class="token punctuation">:</span>/mapper/<span class="token important">*Mapper.xml</span>
  <span class="token comment">#实体扫描，多个package用逗号或者分号分隔</span>
  <span class="token key atrule">typeAliasesPackage</span><span class="token punctuation">:</span> com.sixkey.entity
  <span class="token key atrule">global-config</span><span class="token punctuation">:</span>
    <span class="token comment"># 数据库相关配置</span>
    <span class="token key atrule">db-config</span><span class="token punctuation">:</span>
      <span class="token comment">#主键类型  AUTO:&quot;数据库ID自增&quot;, INPUT:&quot;用户输入ID&quot;,ID_WORKER:&quot;全局唯一ID (数字类型唯一ID)&quot;, UUID:&quot;全局唯一ID UUID&quot;;</span>
      <span class="token key atrule">id-type</span><span class="token punctuation">:</span> AUTO
      <span class="token comment">#字段策略 IGNORED:&quot;忽略判断&quot;,NOT_NULL:&quot;非 NULL 判断&quot;),NOT_EMPTY:&quot;非空判断&quot;</span>
      <span class="token key atrule">field-strategy</span><span class="token punctuation">:</span> not_empty
      <span class="token comment">#驼峰下划线转换</span>
      <span class="token key atrule">column-underline</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
      <span class="token key atrule">db-type</span><span class="token punctuation">:</span> mysql
      <span class="token key atrule">logic-delete-field</span><span class="token punctuation">:</span> is_delete <span class="token comment"># 全局逻辑删除的实体字段名(since 3.3.0,配置后可以忽略不配置步骤2)</span>
      <span class="token key atrule">logic-delete-value</span><span class="token punctuation">:</span> <span class="token number">1</span> <span class="token comment"># 逻辑已删除值(默认为 1)</span>
      <span class="token key atrule">logic-not-delete-value</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token comment"># 逻辑未删除值(默认为 0)</span>
    <span class="token comment">#刷新mapper 调试神器</span>
    <span class="token key atrule">refresh</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
  <span class="token comment"># 原生配置</span>
  <span class="token key atrule">configuration</span><span class="token punctuation">:</span>
    <span class="token key atrule">map-underscore-to-camel-case</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token key atrule">cache-enabled</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="主要模块" tabindex="-1"><a class="header-anchor" href="#主要模块"><span>主要模块</span></a></h3><ul><li>用户管理</li><li>公告管理</li><li>日志管理</li><li>会议室管理</li><li>预约管理</li></ul><h3 id="功能模块" tabindex="-1"><a class="header-anchor" href="#功能模块"><span>功能模块：</span></a></h3><h4 id="用户管理" tabindex="-1"><a class="header-anchor" href="#用户管理"><span>用户管理</span></a></h4><h5 id="_1、新增用户出现报错" tabindex="-1"><a class="header-anchor" href="#_1、新增用户出现报错"><span>1、新增用户出现报错</span></a></h5><p>请求体返回时一直报错？原因是响应体属性无get方法</p><blockquote><p>报错：Resolved [org.springframework.web.HttpMediaTypeNotAcceptableException: Could not find acceptable representation</p></blockquote><figure><img src="https://pic.imgdb.cn/item/65141a56c458853aef4ccc15.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h5 id="_2、特坑" tabindex="-1"><a class="header-anchor" href="#_2、特坑"><span>2、特坑</span></a></h5><p><mark>进行用户数据分页请求时，后端数据一直没返回，但是用apifox测试时数据是完全返回的，浪费了我一个小时排坑</mark></p><p><strong>错误原因：原本apifox请求时的路径为：http://localhost:8600/user/list/1/10?name=&amp;phone=&amp;status= ，但是前端一直请求的路径为http://localhost:8600/user/list/1/10，本来我就想着先不带user的几个参数，恰好坑就在这里。必须要带上user的参数name=&amp;phone=&amp;status=，即使是空</strong></p><p><strong>解决：参数全部带齐：http://localhost:8600/user/list/1/10?name=&amp;phone=&amp;status=</strong></p><h5 id="_3、前端捕获后端异常和超时异常" tabindex="-1"><a class="header-anchor" href="#_3、前端捕获后端异常和超时异常"><span>3、前端捕获后端异常和超时异常</span></a></h5><p><strong><mark>后端返回的异常前端一直无法正常捕获，最后给前端全局响应补上了一下代码</mark></strong></p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// request 拦截器</span>
request<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>
  <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> res <span class="token operator">=</span> response<span class="token punctuation">.</span>data
    <span class="token keyword">const</span> code <span class="token operator">=</span> res<span class="token punctuation">.</span>code
    <span class="token keyword">if</span> <span class="token punctuation">(</span>code <span class="token operator">===</span> <span class="token number">403</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">ElMessage</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">showClose</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token literal-property property">message</span><span class="token operator">:</span> res<span class="token punctuation">.</span>message<span class="token punctuation">,</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> res<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> code <span class="token operator">=</span> error<span class="token punctuation">.</span>code<span class="token punctuation">;</span>
    <span class="token keyword">let</span> message <span class="token operator">=</span> error<span class="token punctuation">.</span>message<span class="token punctuation">;</span>
    <span class="token comment">//网络超时异常处理</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>code <span class="token operator">===</span> <span class="token string">&#39;ECONNABORTED&#39;</span> <span class="token operator">||</span> message <span class="token operator">===</span>   <span class="token string">&quot;timeout of 10000ms exceeded&quot;</span> <span class="token operator">||</span>  message<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&quot;timeout&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  
      <span class="token function">ElMessage</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">showClose</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;请求超时，执行失败！&#39;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="日志管理" tabindex="-1"><a class="header-anchor" href="#日志管理"><span>日志管理</span></a></h4><h4 id="公告管理" tabindex="-1"><a class="header-anchor" href="#公告管理"><span>公告管理</span></a></h4><h4 id="预约管理" tabindex="-1"><a class="header-anchor" href="#预约管理"><span>预约管理</span></a></h4><h5 id="_1、特坑" tabindex="-1"><a class="header-anchor" href="#_1、特坑"><span>1、特坑：</span></a></h5><p><mark>新增会议室时一直报错，原来是数据库字段用了describe，这是mysql的关键字需要注意</mark></p><h5 id="_2、使用定时任务修改会议主题" tabindex="-1"><a class="header-anchor" href="#_2、使用定时任务修改会议主题"><span>2、使用定时任务修改会议主题</span></a></h5><blockquote><p><strong>核心代码</strong></p></blockquote><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>sixkey<span class="token punctuation">.</span>task</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * ClassName: UpdateMeetStatus
 * Package: com.sixkey.task
 * Description:
 *
 * @Author: @weixueshi
 * @Create: 2023/10/11 - 12:48
 * @Version: v1.0
 */</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>conditions<span class="token punctuation">.</span>query<span class="token punctuation">.</span></span><span class="token class-name">QueryWrapper</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sixkey<span class="token punctuation">.</span>constant<span class="token punctuation">.</span></span><span class="token class-name">CommonConstant</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sixkey<span class="token punctuation">.</span>entity<span class="token punctuation">.</span></span><span class="token class-name">Reservation</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sixkey<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">IReservationService</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sixkey<span class="token punctuation">.</span>utils<span class="token punctuation">.</span></span><span class="token class-name">JodaTimeUtils</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>sixkey<span class="token punctuation">.</span>utils<span class="token punctuation">.</span></span><span class="token class-name">TimeStringUtils</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">RequiredArgsConstructor</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span><span class="token class-name">Slf4j</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>joda<span class="token punctuation">.</span>time<span class="token punctuation">.</span></span><span class="token class-name">LocalDateTime</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>joda<span class="token punctuation">.</span>time<span class="token punctuation">.</span>format<span class="token punctuation">.</span></span><span class="token class-name">DateTimeFormat</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>scheduling<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Scheduled</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Component</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * 修改会议状态的定时任务
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@Component</span>
<span class="token annotation punctuation">@RequiredArgsConstructor</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UpdateMeetStatusTask</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">IReservationService</span> reservationService<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 每分钟执行一次定时任务
     */</span>
    <span class="token annotation punctuation">@Scheduled</span><span class="token punctuation">(</span>cron <span class="token operator">=</span> <span class="token string">&quot;0 */1 * * * ?&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token class-name">UpdateMeetStatusTaskExecute</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;修改会议状态定时任务开始..........&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//把已结束的会议排除</span>
        <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Reservation</span><span class="token punctuation">&gt;</span></span> wrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Reservation</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;status&quot;</span><span class="token punctuation">,</span> <span class="token class-name">CommonConstant</span><span class="token punctuation">.</span><span class="token constant">RESERVATION_STATUS_1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">or</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;status&quot;</span><span class="token punctuation">,</span> <span class="token class-name">CommonConstant</span><span class="token punctuation">.</span><span class="token constant">RESERVATION_STATUS_2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Reservation</span><span class="token punctuation">&gt;</span></span> reservationList <span class="token operator">=</span> reservationService<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
        reservationList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>item <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token comment">//获取经处理过的字符串时间格式</span>
            <span class="token class-name">String</span> beginTime <span class="token operator">=</span> <span class="token class-name">TimeStringUtils</span><span class="token punctuation">.</span><span class="token function">getBeginTime</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span><span class="token function">getBeginTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span> endTime <span class="token operator">=</span> <span class="token class-name">TimeStringUtils</span><span class="token punctuation">.</span><span class="token function">getEndTime</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span><span class="token function">getBeginTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//将字符串转为LocalDateTime</span>
            <span class="token class-name">LocalDateTime</span> beginLocalDateTime <span class="token operator">=</span> <span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>beginTime<span class="token punctuation">,</span> <span class="token class-name">DateTimeFormat</span><span class="token punctuation">.</span><span class="token function">forPattern</span><span class="token punctuation">(</span><span class="token string">&quot;yyyy-MM-dd HH:mm&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">LocalDateTime</span> endLocalDateTime <span class="token operator">=</span> <span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>endTime<span class="token punctuation">,</span> <span class="token class-name">DateTimeFormat</span><span class="token punctuation">.</span><span class="token function">forPattern</span><span class="token punctuation">(</span><span class="token string">&quot;yyyy-MM-dd HH:mm&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">if</span><span class="token punctuation">(</span>endLocalDateTime<span class="token punctuation">.</span><span class="token function">isBefore</span><span class="token punctuation">(</span><span class="token class-name">JodaTimeUtils</span><span class="token punctuation">.</span><span class="token function">getCurrentDateTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token comment">//如果当前时间在会议结束时间后</span>
                <span class="token comment">//将会议状态修改为已结束</span>
                item<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span><span class="token class-name">CommonConstant</span><span class="token punctuation">.</span><span class="token constant">RESERVATION_STATUS_3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                reservationService<span class="token punctuation">.</span><span class="token function">updateById</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>beginLocalDateTime<span class="token punctuation">.</span><span class="token function">isBefore</span><span class="token punctuation">(</span><span class="token class-name">JodaTimeUtils</span><span class="token punctuation">.</span><span class="token function">getCurrentDateTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">//如果当前时间在会议开始时间后</span>
                <span class="token comment">//将会议状态修改为进行中</span>
                item<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span><span class="token class-name">CommonConstant</span><span class="token punctuation">.</span><span class="token constant">RESERVATION_STATUS_2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                reservationService<span class="token punctuation">.</span><span class="token function">updateById</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="rabbitmq异步通信" tabindex="-1"><a class="header-anchor" href="#rabbitmq异步通信"><span>rabbitMQ异步通信</span></a></h4>`,31),r={href:"http://www.sixkey-world.top/articleInfo?articleId=14",target:"_blank",rel:"noopener noreferrer"},k=p(`<p><strong>注意：一定要开放15672和5672端口，不然无法访问</strong></p><p><strong>集成到项目中</strong></p><blockquote><p><strong>导入依赖</strong></p></blockquote><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span><span class="token class-name">RabbitMQ</span>依赖<span class="token operator">--</span><span class="token operator">&gt;</span>
    <span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span>
      <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>
      <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>spring<span class="token operator">-</span>boot<span class="token operator">-</span>starter<span class="token operator">-</span>amqp<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>yml配置文件</strong></p></blockquote><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">rabbitmq</span><span class="token punctuation">:</span>
    <span class="token key atrule">host</span><span class="token punctuation">:</span> 82.157.234.124
    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">5672</span>
    <span class="token key atrule">username</span><span class="token punctuation">:</span> admin
    <span class="token key atrule">password</span><span class="token punctuation">:</span> <span class="token number">123</span>
    <span class="token key atrule">addresses</span><span class="token punctuation">:</span> 82.157.234.124
    <span class="token key atrule">publisher-confirm-type</span><span class="token punctuation">:</span> CORRELATED  <span class="token comment">#发布确认模式，消息是否被成功发送到交换机</span>
    <span class="token key atrule">publisher-returns</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token key atrule">listener</span><span class="token punctuation">:</span>
      <span class="token key atrule">simple</span><span class="token punctuation">:</span>
        <span class="token key atrule">prefetch</span><span class="token punctuation">:</span> <span class="token number">1</span>
        <span class="token key atrule">concurrency</span><span class="token punctuation">:</span> <span class="token number">3</span>
        <span class="token key atrule">acknowledge-mode</span><span class="token punctuation">:</span> manual   <span class="token comment">#消费端手动确认</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>MQ配置类</strong></p></blockquote><ul><li>消息转换器</li></ul><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * MQ消息转换器 可以让MQ传对象之类
 */</span>
<span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RabbitMQConfig</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">MessageConverter</span> <span class="token function">messageConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Jackson2JsonMessageConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>消息确认方法</li></ul><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Component</span>
<span class="token annotation punctuation">@RequiredArgsConstructor</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MQProducerAckConfig</span> <span class="token keyword">implements</span> <span class="token class-name">RabbitTemplate<span class="token punctuation">.</span>ConfirmCallback</span><span class="token punctuation">,</span><span class="token class-name">RabbitTemplate<span class="token punctuation">.</span>ReturnCallback</span> <span class="token punctuation">{</span>
    <span class="token comment">//  我们发送消息使用的是 private RabbitTemplate rabbitTemplate; 对象</span>
    <span class="token comment">//  如果不做设置的话 当前的rabbitTemplate 与当前的配置类没有任何关系！</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">RabbitTemplate</span> rabbitTemplate<span class="token punctuation">;</span>

    <span class="token comment">//  设置 表示修饰一个非静态的void方法，在服务器加载Servlet的时候运行。并且只执行一次！</span>
    <span class="token annotation punctuation">@PostConstruct</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        rabbitTemplate<span class="token punctuation">.</span><span class="token function">setReturnCallback</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        rabbitTemplate<span class="token punctuation">.</span><span class="token function">setConfirmCallback</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 消息接收成功会走此方法
     * 表示消息是否正确发送到了交换机上
     * <span class="token keyword">@param</span> <span class="token parameter">correlationData</span>   消息的载体
     * <span class="token keyword">@param</span> <span class="token parameter">ack</span>   判断是否发送到交换机上
     * <span class="token keyword">@param</span> <span class="token parameter">cause</span> 原因
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">confirm</span><span class="token punctuation">(</span><span class="token class-name">CorrelationData</span> correlationData<span class="token punctuation">,</span> <span class="token keyword">boolean</span> ack<span class="token punctuation">,</span> <span class="token class-name">String</span> cause<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>ack<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;消息发送成功！&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;消息发送失败！&quot;</span><span class="token operator">+</span>cause<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 消息如果没有正确发送到队列中，则会走这个方法！如果消息被正常处理，则这个方法不会走！
     * <span class="token keyword">@param</span> <span class="token parameter">message</span>
     * <span class="token keyword">@param</span> <span class="token parameter">replyCode</span>
     * <span class="token keyword">@param</span> <span class="token parameter">replyText</span>
     * <span class="token keyword">@param</span> <span class="token parameter">exchange</span>
     * <span class="token keyword">@param</span> <span class="token parameter">routingKey</span>
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">returnedMessage</span><span class="token punctuation">(</span><span class="token class-name">Message</span> message<span class="token punctuation">,</span> <span class="token keyword">int</span> replyCode<span class="token punctuation">,</span> <span class="token class-name">String</span> replyText<span class="token punctuation">,</span> <span class="token class-name">String</span> exchange<span class="token punctuation">,</span> <span class="token class-name">String</span> routingKey<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;消息主体: &quot;</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>message<span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;应答码: &quot;</span> <span class="token operator">+</span> replyCode<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;描述：&quot;</span> <span class="token operator">+</span> replyText<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;消息使用的交换器 exchange : &quot;</span> <span class="token operator">+</span> exchange<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;消息使用的路由键 routing : &quot;</span> <span class="token operator">+</span> routingKey<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>MQ需要的交换机，队列，路由key常量定义</li></ul><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RabbitMQConstant</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**短信队列*/</span>
    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token constant">QUEUE_MEET_ROOM</span><span class="token operator">=</span><span class="token string">&quot;meet_room&quot;</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**通道*/</span>
    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token constant">EXCHANGE_MEET_ROOM</span><span class="token operator">=</span><span class="token string">&quot;meet_room.direct&quot;</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**key*/</span>
    <span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token constant">ROUTING_MEET_ROOM</span><span class="token operator">=</span><span class="token string">&quot;meet_room&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>MQ消息发送消息服务封装</strong></p></blockquote><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 封装MQ发送消息方法
 */</span>
<span class="token annotation punctuation">@Service</span>
<span class="token annotation punctuation">@RequiredArgsConstructor</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RabbitService</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">RabbitTemplate</span> rabbitTemplate<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     *
     * <span class="token keyword">@param</span> <span class="token parameter">exchange</span> 交换机
     * <span class="token keyword">@param</span> <span class="token parameter">routingKey</span> 路由
     * <span class="token keyword">@param</span> <span class="token parameter">message</span> 消息
     * <span class="token keyword">@return</span>
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">sendMessage</span><span class="token punctuation">(</span><span class="token class-name">String</span> exchange<span class="token punctuation">,</span> <span class="token class-name">String</span> routingKey<span class="token punctuation">,</span> <span class="token class-name">Object</span> message<span class="token punctuation">)</span><span class="token punctuation">{</span>
        rabbitTemplate<span class="token punctuation">.</span><span class="token function">convertAndSend</span><span class="token punctuation">(</span>exchange<span class="token punctuation">,</span>routingKey<span class="token punctuation">,</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>MQ异步发送消息</strong></p></blockquote><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@Component</span>
<span class="token annotation punctuation">@RequiredArgsConstructor</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UpdateMeetStatusTask</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">RabbitService</span> rabbitService<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token class-name">UpdateMeetStatusTaskExecute</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//当会议结束后通过rabbitMQ去修改会议所使用的会议室状态为未预约</span>
                log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;MQ发送消息：{}&quot;</span><span class="token punctuation">,</span>item<span class="token punctuation">.</span><span class="token function">getRoomName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> rabbitService<span class="token punctuation">.</span><span class="token function">sendMessage</span><span class="token punctuation">(</span><span class="token class-name">RabbitMQConstant</span><span class="token punctuation">.</span><span class="token constant">EXCHANGE_MEET_ROOM</span><span class="token punctuation">,</span><span class="token class-name">RabbitMQConstant</span><span class="token punctuation">.</span><span class="token constant">ROUTING_MEET_ROOM</span><span class="token punctuation">,</span>item<span class="token punctuation">.</span><span class="token function">getRoomName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>MQ接收消息</strong></p></blockquote><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 接收MQ发送过来的消息
 */</span>
<span class="token annotation punctuation">@Component</span>
<span class="token annotation punctuation">@RequiredArgsConstructor</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RabbitReceiver</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">IRoomService</span> roomService<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 接收消息会议结束信息同时修改会议室状态为未预约
     * <span class="token keyword">@param</span>
     * <span class="token keyword">@param</span> <span class="token parameter">message</span>
     * <span class="token keyword">@param</span> <span class="token parameter">channel</span>
     * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">IOException</span></span>
     */</span>
    <span class="token annotation punctuation">@RabbitListener</span><span class="token punctuation">(</span>bindings <span class="token operator">=</span> <span class="token annotation punctuation">@QueueBinding</span><span class="token punctuation">(</span>
            value <span class="token operator">=</span> <span class="token annotation punctuation">@Queue</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token class-name">RabbitMQConstant</span><span class="token punctuation">.</span><span class="token constant">QUEUE_MEET_ROOM</span><span class="token punctuation">,</span>durable <span class="token operator">=</span> <span class="token string">&quot;true&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            exchange <span class="token operator">=</span> <span class="token annotation punctuation">@Exchange</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token class-name">RabbitMQConstant</span><span class="token punctuation">.</span><span class="token constant">EXCHANGE_MEET_ROOM</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            key <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token class-name">RabbitMQConstant</span><span class="token punctuation">.</span><span class="token constant">ROUTING_MEET_ROOM</span><span class="token punctuation">}</span>
    <span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">updateRoomStatus</span><span class="token punctuation">(</span><span class="token class-name">String</span> roomName<span class="token punctuation">,</span> <span class="token class-name">Message</span> message<span class="token punctuation">,</span> <span class="token class-name">Channel</span> channel<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">null</span> <span class="token operator">!=</span> roomName<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Room</span><span class="token punctuation">&gt;</span></span> wrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Room</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> roomName<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Room</span> room <span class="token operator">=</span> roomService<span class="token punctuation">.</span><span class="token function">getOne</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
            room<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span><span class="token class-name">CommonConstant</span><span class="token punctuation">.</span><span class="token constant">ROOM_STATUS_NOT_RESERVATION</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            roomService<span class="token punctuation">.</span><span class="token function">updateById</span><span class="token punctuation">(</span>room<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//手动确认消息</span>
        channel<span class="token punctuation">.</span><span class="token function">basicAck</span><span class="token punctuation">(</span>message<span class="token punctuation">.</span><span class="token function">getMessageProperties</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDeliveryTag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><mark>注意</mark>：<strong>MQ发送和接收消息时交换机和路由key值是一样的</strong></p><h4 id="异步发送短信" tabindex="-1"><a class="header-anchor" href="#异步发送短信"><span>异步发送短信</span></a></h4><blockquote><p><strong>1、在异步方法上添加异步注解</strong></p><p><strong>2、自定义线程池</strong></p><p><strong>3、启动类开启异步注解</strong></p></blockquote><ul><li>在异步方法上添加异步注解</li></ul><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 异步发送会议通知消息
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@Service</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AsyncServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">IAsyncService</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * 发送短信
     * <span class="token keyword">@param</span>
     * <span class="token keyword">@param</span>
     */</span>
    <span class="token annotation punctuation">@Async</span><span class="token punctuation">(</span><span class="token string">&quot;asyncExecutor&quot;</span><span class="token punctuation">)</span> <span class="token comment">//指定自定义的线程池</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sendSuccessMessage</span><span class="token punctuation">(</span><span class="token class-name">String</span> participants<span class="token punctuation">,</span><span class="token class-name">String</span> phone<span class="token punctuation">,</span><span class="token class-name">String</span> time<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">//将参会人号码提取出来依次发送信息</span>
            <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> split <span class="token operator">=</span> participants<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> split<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">DefaultProfile</span> profile <span class="token operator">=</span> <span class="token class-name">DefaultProfile</span><span class="token punctuation">.</span><span class="token function">getProfile</span><span class="token punctuation">(</span><span class="token string">&quot;cn-hangzhou&quot;</span><span class="token punctuation">,</span> <span class="token class-name">SendSmsConstant</span><span class="token punctuation">.</span><span class="token constant">ACCESS_KEY_ID</span><span class="token punctuation">,</span> <span class="token class-name">SendSmsConstant</span><span class="token punctuation">.</span><span class="token constant">ACCESS_KEY_SECRET</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">IAcsClient</span> client <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultAcsClient</span><span class="token punctuation">(</span>profile<span class="token punctuation">)</span><span class="token punctuation">;</span>

                <span class="token class-name">SendSmsRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SendSmsRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                request<span class="token punctuation">.</span><span class="token function">setSysRegionId</span><span class="token punctuation">(</span><span class="token string">&quot;cn-hangzhou&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                request<span class="token punctuation">.</span><span class="token function">setPhoneNumbers</span><span class="token punctuation">(</span>split<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token doc-comment comment">/**
                 * 签名
                 */</span>
                request<span class="token punctuation">.</span><span class="token function">setSignName</span><span class="token punctuation">(</span><span class="token string">&quot;文学博客&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token doc-comment comment">/**
                 * 模板
                 */</span>
                request<span class="token punctuation">.</span><span class="token function">setTemplateCode</span><span class="token punctuation">(</span><span class="token string">&quot;SMS_463677677&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                request<span class="token punctuation">.</span><span class="token function">setTemplateParam</span><span class="token punctuation">(</span><span class="token string">&quot;{\\&quot;phone\\&quot;:\\&quot;&quot;</span><span class="token operator">+</span>phone<span class="token operator">+</span><span class="token string">&quot;\\&quot;,\\&quot;time\\&quot;:\\&quot;&quot;</span><span class="token operator">+</span>time<span class="token operator">+</span><span class="token string">&quot;\\&quot;}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                client<span class="token punctuation">.</span><span class="token function">getAcsResponse</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>
                log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;短信发送成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ServerException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ClientException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>自定义线程池</li></ul><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 线程池配置
 */</span>
<span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PoolConfig</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">ThreadPoolExecutor</span> <span class="token function">asyncExecutor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">ThreadPoolExecutor</span> threadPoolExecutor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span>
                <span class="token number">10</span><span class="token punctuation">,</span>
                <span class="token number">10</span><span class="token punctuation">,</span>
                <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token class-name">LinkedBlockingDeque</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">defaultThreadFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor<span class="token punctuation">.</span>AbortPolicy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> threadPoolExecutor<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>启动类开启异步注解</li></ul><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@SpringBootApplication</span>
<span class="token comment">//开启异步任务</span>
<span class="token annotation punctuation">@EnableAsync</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MeetApplication</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args <span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">UnknownHostException</span> <span class="token punctuation">{</span>
        <span class="token class-name">ConfigurableApplicationContext</span> application <span class="token operator">=</span> <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">MeetApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Environment</span> env <span class="token operator">=</span> application<span class="token punctuation">.</span><span class="token function">getEnvironment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> ip <span class="token operator">=</span> <span class="token class-name">InetAddress</span><span class="token punctuation">.</span><span class="token function">getLocalHost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getHostAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> port <span class="token operator">=</span> env<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">&quot;server.port&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\\n----------------------------------------------------------\\n\\t&quot;</span> <span class="token operator">+</span>
                <span class="token string">&quot;会议室预约管理系统启动成功，并正在运行:\\n\\t&quot;</span> <span class="token operator">+</span>
                <span class="token string">&quot;Local: \\t\\thttp://localhost:&quot;</span> <span class="token operator">+</span> port <span class="token operator">+</span> <span class="token string">&quot;/\\n\\t&quot;</span> <span class="token operator">+</span>
                <span class="token string">&quot;External: \\thttp://&quot;</span> <span class="token operator">+</span> ip <span class="token operator">+</span> <span class="token string">&quot;:&quot;</span> <span class="token operator">+</span> port <span class="token operator">+</span> <span class="token string">&quot;/\\n\\t&quot;</span> <span class="token operator">+</span>
                <span class="token string">&quot;----------------------------------------------------------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="定时修改任务" tabindex="-1"><a class="header-anchor" href="#定时修改任务"><span>定时修改任务</span></a></h4><blockquote><p><strong>1、定时任务方法上添加注解</strong></p><p><strong>2、启动类添加定时注解</strong></p></blockquote><ul><li>定时任务方法上添加注解</li></ul><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>sixkey<span class="token punctuation">.</span>task</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * ClassName: UpdateMeetStatus
 * Package: com.sixkey.task
 * Description:
 *
 * @Author: @weixueshi
 * @Create: 2023/10/11 - 12:48
 * @Version: v1.0
 */</span>

<span class="token doc-comment comment">/**
 * 修改会议状态的定时任务
 */</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@Component</span>
<span class="token annotation punctuation">@RequiredArgsConstructor</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UpdateMeetStatusTask</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">IReservationService</span> reservationService<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">RabbitService</span> rabbitService<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 每分钟执行一次定时任务
     */</span>
    <span class="token comment">//定时任务注解</span>
    <span class="token annotation punctuation">@Scheduled</span><span class="token punctuation">(</span>cron <span class="token operator">=</span> <span class="token string">&quot;0 */1 * * * ?&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token class-name">UpdateMeetStatusTaskExecute</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;修改会议状态定时任务开始..........&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//把已结束的会议排除</span>
        <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Reservation</span><span class="token punctuation">&gt;</span></span> wrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Reservation</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;status&quot;</span><span class="token punctuation">,</span> <span class="token class-name">CommonConstant</span><span class="token punctuation">.</span><span class="token constant">RESERVATION_STATUS_1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">or</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;status&quot;</span><span class="token punctuation">,</span> <span class="token class-name">CommonConstant</span><span class="token punctuation">.</span><span class="token constant">RESERVATION_STATUS_2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Reservation</span><span class="token punctuation">&gt;</span></span> reservationList <span class="token operator">=</span> reservationService<span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
        reservationList<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>item <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token comment">//获取经处理过的字符串时间格式</span>
            <span class="token class-name">String</span> beginTime <span class="token operator">=</span> <span class="token class-name">TimeStringUtils</span><span class="token punctuation">.</span><span class="token function">getBeginTime</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span><span class="token function">getBeginTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">String</span> endTime <span class="token operator">=</span> <span class="token class-name">TimeStringUtils</span><span class="token punctuation">.</span><span class="token function">getEndTime</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span><span class="token function">getBeginTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//将字符串转为LocalDateTime</span>
            <span class="token class-name">LocalDateTime</span> beginLocalDateTime <span class="token operator">=</span> <span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>beginTime<span class="token punctuation">,</span> <span class="token class-name">DateTimeFormat</span><span class="token punctuation">.</span><span class="token function">forPattern</span><span class="token punctuation">(</span><span class="token string">&quot;yyyy-MM-dd HH:mm&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">LocalDateTime</span> endLocalDateTime <span class="token operator">=</span> <span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>endTime<span class="token punctuation">,</span> <span class="token class-name">DateTimeFormat</span><span class="token punctuation">.</span><span class="token function">forPattern</span><span class="token punctuation">(</span><span class="token string">&quot;yyyy-MM-dd HH:mm&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">if</span><span class="token punctuation">(</span>endLocalDateTime<span class="token punctuation">.</span><span class="token function">isBefore</span><span class="token punctuation">(</span><span class="token class-name">JodaTimeUtils</span><span class="token punctuation">.</span><span class="token function">getCurrentDateTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token comment">//如果当前时间在会议结束时间后</span>
                <span class="token comment">//将会议状态修改为已结束</span>
                item<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span><span class="token class-name">CommonConstant</span><span class="token punctuation">.</span><span class="token constant">RESERVATION_STATUS_3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                reservationService<span class="token punctuation">.</span><span class="token function">updateById</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">//当会议结束后通过rabbitMQ去修改会议所使用的会议室状态为未预约</span>
                log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;MQ发送消息：{}&quot;</span><span class="token punctuation">,</span>item<span class="token punctuation">.</span><span class="token function">getRoomName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                rabbitService<span class="token punctuation">.</span><span class="token function">sendMessage</span><span class="token punctuation">(</span><span class="token class-name">RabbitMQConstant</span><span class="token punctuation">.</span><span class="token constant">EXCHANGE_MEET_ROOM</span><span class="token punctuation">,</span><span class="token class-name">RabbitMQConstant</span><span class="token punctuation">.</span><span class="token constant">ROUTING_MEET_ROOM</span><span class="token punctuation">,</span>item<span class="token punctuation">.</span><span class="token function">getRoomName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>beginLocalDateTime<span class="token punctuation">.</span><span class="token function">isBefore</span><span class="token punctuation">(</span><span class="token class-name">JodaTimeUtils</span><span class="token punctuation">.</span><span class="token function">getCurrentDateTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">//如果当前时间在会议开始时间后</span>
                <span class="token comment">//将会议状态修改为进行中</span>
                item<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span><span class="token class-name">CommonConstant</span><span class="token punctuation">.</span><span class="token constant">RESERVATION_STATUS_2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                reservationService<span class="token punctuation">.</span><span class="token function">updateById</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>启动类添加定时注解</li></ul><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>
 <span class="token operator">*</span>
 <span class="token operator">*</span><span class="token operator">/</span>
<span class="token annotation punctuation">@SpringBootApplication</span>
<span class="token comment">//开启定时任务</span>
<span class="token annotation punctuation">@EnableScheduling</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MeetApplication</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args <span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">UnknownHostException</span> <span class="token punctuation">{</span>
        <span class="token class-name">ConfigurableApplicationContext</span> application <span class="token operator">=</span> <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">MeetApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Environment</span> env <span class="token operator">=</span> application<span class="token punctuation">.</span><span class="token function">getEnvironment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> ip <span class="token operator">=</span> <span class="token class-name">InetAddress</span><span class="token punctuation">.</span><span class="token function">getLocalHost</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getHostAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> port <span class="token operator">=</span> env<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">&quot;server.port&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\\n----------------------------------------------------------\\n\\t&quot;</span> <span class="token operator">+</span>
                <span class="token string">&quot;会议室预约管理系统启动成功，并正在运行:\\n\\t&quot;</span> <span class="token operator">+</span>
                <span class="token string">&quot;Local: \\t\\thttp://localhost:&quot;</span> <span class="token operator">+</span> port <span class="token operator">+</span> <span class="token string">&quot;/\\n\\t&quot;</span> <span class="token operator">+</span>
                <span class="token string">&quot;External: \\thttp://&quot;</span> <span class="token operator">+</span> ip <span class="token operator">+</span> <span class="token string">&quot;:&quot;</span> <span class="token operator">+</span> port <span class="token operator">+</span> <span class="token string">&quot;/\\n\\t&quot;</span> <span class="token operator">+</span>
                <span class="token string">&quot;----------------------------------------------------------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="vue3集成echarts" tabindex="-1"><a class="header-anchor" href="#vue3集成echarts"><span>Vue3集成echarts</span></a></h4><p><mark>直接上一个例子即可</mark></p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>npm install echarts <span class="token operator">--</span>save # 安装echarts
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>直接使用</strong></p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">font-size</span><span class="token punctuation">:</span> 24px<span class="token punctuation">;</span> <span class="token property">color</span><span class="token punctuation">:</span> #000000</span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>会议统计<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>--</span> <span class="token attr-name">定义一个id--</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>--</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>reservation<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span> 680px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span> 350px</span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>引入</strong></p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> echarts <span class="token keyword">from</span> <span class="token string">&quot;echarts&quot;</span><span class="token punctuation">;</span>
<span class="token operator">&lt;</span>script setup<span class="token operator">&gt;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> onMounted <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> echarts <span class="token keyword">from</span> <span class="token string">&quot;echarts&quot;</span><span class="token punctuation">;</span>
<span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">//一定要先加载，不然数据出不来</span>
  <span class="token function">initReservation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 用户数据展示</span>
<span class="token keyword">function</span> <span class="token function">initReservation</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> option <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">xAxis</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;category&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;星期一&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;星期二&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;星期三&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;星期四&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;星期五&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;星期六&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;星期日&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">yAxis</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;value&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">series</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">[</span>
          <span class="token number">120</span><span class="token punctuation">,</span>
          <span class="token number">200</span><span class="token punctuation">,</span>
          <span class="token number">150</span><span class="token punctuation">,</span>
          <span class="token number">80</span><span class="token punctuation">,</span>
          <span class="token number">70</span><span class="token punctuation">,</span>
          <span class="token number">110</span><span class="token punctuation">,</span>
          <span class="token number">130</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;bar&quot;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> myChart <span class="token operator">=</span> echarts<span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;reservation&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  myChart<span class="token punctuation">.</span><span class="token function">setOption</span><span class="token punctuation">(</span>option<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">//随着屏幕大小调节图表</span>
  window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;resize&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    myChart<span class="token punctuation">.</span><span class="token function">resize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="使用pinia存储token" tabindex="-1"><a class="header-anchor" href="#使用pinia存储token"><span>使用pinia存储token</span></a></h4><p><mark>可以存储token，同样用户登录后返回的个人信息也可存储</mark></p><blockquote><p><strong>安装pinia</strong></p><p>npm install pinia</p></blockquote><blockquote><p><strong>在main.js中引入</strong></p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createPinia <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;pinia&#39;</span>
<span class="token keyword">const</span> pinia <span class="token operator">=</span> <span class="token function">createPinia</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">//挂载到全局</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>pinia<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>具体使用:</strong></p><p>-<mark>以存储token为例</mark></p></blockquote><p><strong>在项目中新建stores目录，其下新建token.js</strong></p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;pinia&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> useTokenStore <span class="token operator">=</span> <span class="token function">defineStore</span><span class="token punctuation">(</span><span class="token string">&#39;token&#39;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>

    <span class="token keyword">const</span> token <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>

    <span class="token keyword">const</span> <span class="token function-variable function">setToken</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">newToken</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
        token<span class="token punctuation">.</span>value <span class="token operator">=</span> newToken<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">const</span> <span class="token function-variable function">removeToken</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        token<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token punctuation">{</span>
        token<span class="token punctuation">,</span>setToken<span class="token punctuation">,</span>removeToken
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>在具体组件中使用：</strong></p><p>在Login.vue中使用</p></blockquote><p><mark>用户登录成功后存储后台返回的token值</mark></p><p><strong>导入useTokenStore</strong></p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useTokenStore<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/stores/token&#39;</span><span class="token punctuation">;</span>
<span class="token comment">//解构出tokenStore</span>
<span class="token keyword">const</span> tokenStore <span class="token operator">=</span> <span class="token function">useTokenStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//登录成功后存储token值</span>
tokenStore<span class="token punctuation">.</span><span class="token function">setToken</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>token<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>这里有一个bug，当刷新浏览器后数据就不在了，这是因为pinia是基于内存存储，我们需要使用pinia的插件persist来进行持久化存储</strong></p><blockquote><p><strong>安装persist</strong></p><p><strong>npm install pinia-persistedstate-plugin</strong></p></blockquote><blockquote><p><strong>在main.js中引入并在pinia中使用插件</strong></p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createPersistedState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;pinia-persistedstate-plugin&#39;</span>

<span class="token keyword">const</span> pinia <span class="token operator">=</span> <span class="token function">createPinia</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> persist <span class="token operator">=</span> <span class="token function">createPersistedState</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
pinia<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>persist<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>修改token.js文件</strong></p><p><strong>添加一个对象值</strong></p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;pinia&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> useTokenStore <span class="token operator">=</span> <span class="token function">defineStore</span><span class="token punctuation">(</span><span class="token string">&#39;token&#39;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>

    <span class="token keyword">const</span> token <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> <span class="token function-variable function">setToken</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">newToken</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
        token<span class="token punctuation">.</span>value <span class="token operator">=</span> newToken<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">const</span> <span class="token function-variable function">removeToken</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        token<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token punctuation">{</span>
        token<span class="token punctuation">,</span>setToken<span class="token punctuation">,</span>removeToken
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span>
    <span class="token literal-property property">persist</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token comment">//持久化存储</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>这里出现了一个小插曲，想在前置路由中通过判断token是否有值来进行路由跳转，原本是这样写的</strong></p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createWebHistory<span class="token punctuation">,</span> createRouter <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue-router&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>LoginCheck<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/utils/loginCheck&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ElMessage <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;element-plus&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useTokenStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@/stores/token&quot;</span><span class="token punctuation">;</span>
<span class="token comment">//在这里就解构出对象，这种会报错说pinia是notActive的，就是没有被激活</span>
<span class="token keyword">const</span> tokenStore <span class="token operator">=</span> <span class="token function">useTokenStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> history <span class="token operator">=</span> <span class="token function">createWebHistory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// GOOD</span>
router<span class="token punctuation">.</span><span class="token function">beforeEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> from<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// const token = localStorage.getItem(&quot;token&quot;);</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>to<span class="token punctuation">.</span>name <span class="token operator">===</span> <span class="token string">&#39;login&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>tokenStore<span class="token punctuation">.</span>token<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
    <span class="token function">ElMessage</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">showClose</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&quot;无权限，请重新登录！&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;login&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> router<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>改过之后是这样的</strong></p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createWebHistory<span class="token punctuation">,</span> createRouter <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue-router&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>LoginCheck<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/utils/loginCheck&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ElMessage <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;element-plus&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useTokenStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@/stores/token&quot;</span><span class="token punctuation">;</span> 

<span class="token keyword">const</span> history <span class="token operator">=</span> <span class="token function">createWebHistory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// GOOD</span>
router<span class="token punctuation">.</span><span class="token function">beforeEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> from<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// const token = localStorage.getItem(&quot;token&quot;);</span>
  <span class="token comment">//在前置路由中解构对象就对了</span>
  <span class="token keyword">const</span> tokenStore <span class="token operator">=</span> <span class="token function">useTokenStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>to<span class="token punctuation">.</span>name <span class="token operator">===</span> <span class="token string">&#39;login&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>tokenStore<span class="token punctuation">.</span>token<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
    <span class="token function">ElMessage</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">showClose</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&quot;无权限，请重新登录！&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;login&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> router<span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="vue3使用面包屑" tabindex="-1"><a class="header-anchor" href="#vue3使用面包屑"><span><strong>vue3使用面包屑</strong></span></a></h4><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">margin-left</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-breadcrumb</span> <span class="token attr-name">:separator-icon</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ArrowRight<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>--</span> <span class="token attr-name">--</span><span class="token punctuation">&gt;</span></span>route.matched是当前匹配到的路由<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>--</span><span class="token punctuation">&gt;</span></span>
              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-breadcrumb-item</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>(item,index) in route.matched<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>index<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">font-size</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span> <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>{{ item.meta.title }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-breadcrumb-item</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-breadcrumb</span><span class="token punctuation">&gt;</span></span>
          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>script setup<span class="token operator">&gt;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ArrowRight <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@element-plus/icons-vue&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useRoute <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue-router&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> route <span class="token operator">=</span> <span class="token function">useRoute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="前台" tabindex="-1"><a class="header-anchor" href="#前台"><span>前台</span></a></h2><blockquote><p><strong>会议室管理</strong></p></blockquote><ul><li>获取所有会议室信息</li><li>根据id获取会议室信息</li><li>crud会议室</li><li>用户预约会议室</li><li>用户取消会议室</li><li>管理员设置会议室容量</li><li>管理员设置预约时间</li></ul><blockquote><p><strong>预约管理</strong></p></blockquote><ul><li>用户预约会议室</li><li>选择开始和结束时间</li><li>查看预约状态（待确认、已确认、已完成）</li></ul><h3 id="预约功能" tabindex="-1"><a class="header-anchor" href="#预约功能"><span><mark>预约</mark>功能</span></a></h3><blockquote><p><strong>1、展示所有会议室信息，支持按条件筛选和排序。</strong></p><p><strong>2、会议室详情页：展示会议室的详细信息，包括预约情况。支持查看预约详情和进行预约和取消预约。</strong></p><p><strong>3、会议室分类：根据分类获取会议室</strong></p><p><strong>4、进行预约：选择开始和结束时间，查看预约状态（待确认、已确认、已完成）。</strong></p><p><strong>5、取消预约：用户可以在预约时间前取消预约。</strong></p><p><strong>6、查看会议室详情：用户可以查看会议室的详细信息，包括容量、可预约时间等。</strong></p><p><strong>7、日历视图：在会议室详情页提供一个日历视图，方便用户查看会议室的可预约时间段。</strong></p><p><strong>8、预订限制：为每个会议室设置预订限制，例如每天的最高预订数量、最长预订时间等。管理员可以在管理页面设置这些限制。</strong></p><p><strong>9、公告展示</strong></p></blockquote><h3 id="我的功能" tabindex="-1"><a class="header-anchor" href="#我的功能"><span><mark>我的</mark>功能</span></a></h3><blockquote><p><strong>1、用户管理页：用户可以查看自己的预约记录，取消预约等操作</strong></p><p><strong>2、取消预约：用户可以在预约时间前取消预约。</strong></p><p><strong>3、查看预约记录：用户可以查看自己的预约记录，包括已确认和已完成的预约。</strong></p><p><strong>4、系统通知：当会议室预约状态发生变化（如预约成功、预约取消等）时，向相关用户发送通知。</strong></p><p><strong>5、用户评价：用户可以对使用过的会议室进行评价，提供反馈和建议，帮助其他用户更好地选择和使用会议室。</strong></p></blockquote><h3 id="uniapp搭建" tabindex="-1"><a class="header-anchor" href="#uniapp搭建"><span>Uniapp搭建</span></a></h3><h4 id="_1、问题合集" tabindex="-1"><a class="header-anchor" href="#_1、问题合集"><span>1、问题合集</span></a></h4><h5 id="_1、tabbar底部不显示原因" tabindex="-1"><a class="header-anchor" href="#_1、tabbar底部不显示原因"><span><strong>1、tabbar底部不显示原因</strong></span></a></h5><p><mark><strong>tabbar的list里面配置的页面顺序要和pages中配置的页面顺序要一致才能显示</strong></mark></p><img src="https://pic.imgdb.cn/item/651993fbc458853aefc26d17.png" style="zoom:50%;"><img src="https://pic.imgdb.cn/item/65199471c458853aefc27ddf.png" style="zoom:50%;"><h4 id="_2、uniapp请求封装" tabindex="-1"><a class="header-anchor" href="#_2、uniapp请求封装"><span>2、Uniapp请求封装</span></a></h4><blockquote><p>1、设置请求基地址：base.js</p><p>2、封装请求和响应： request.js</p><p>3、应用在具体接口请求：index.js</p></blockquote><img src="https://pic.imgdb.cn/item/651a8cd8c458853aef09fc39.png" style="zoom:50%;"><h5 id="_1、base-js" tabindex="-1"><a class="header-anchor" href="#_1、base-js"><span><strong>1、base.js</strong></span></a></h5><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">//请求基地址</span>
<span class="token keyword">const</span> <span class="token constant">BASE_URL</span> <span class="token operator">=</span> <span class="token string">&quot;http://localhost:8600&quot;</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
	<span class="token constant">BASE_URL</span><span class="token operator">:</span> <span class="token constant">BASE_URL</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_2、request-js" tabindex="-1"><a class="header-anchor" href="#_2、request-js"><span><strong>2、request.js</strong></span></a></h5><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">//const BASE_URL = \`http://localhost:8600\`;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> <span class="token constant">BASE_URL</span><span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./base.js&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">request</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span>reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
		uni<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
			<span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token constant">BASE_URL</span> <span class="token operator">+</span> options<span class="token punctuation">.</span>url<span class="token punctuation">,</span>
			<span class="token literal-property property">method</span><span class="token operator">:</span> options<span class="token punctuation">.</span>method <span class="token operator">||</span> <span class="token string">&#39;GET&#39;</span><span class="token punctuation">,</span>
			<span class="token comment">//header: {token: uni.getStorageSync(&#39;user&#39;) ? uni.getStorageSync(&#39;user&#39;).token : &#39;&#39;},</span>
			<span class="token literal-property property">data</span><span class="token operator">:</span> options<span class="token punctuation">.</span>data <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
			<span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
				<span class="token keyword">const</span> data <span class="token operator">=</span> res<span class="token punctuation">.</span>data
				<span class="token comment">//无权限</span>
				<span class="token keyword">if</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token string">&#39;401&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
					uni<span class="token punctuation">.</span><span class="token function">navigateTo</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
						<span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;/pages/my/my&#39;</span>
					<span class="token punctuation">}</span><span class="token punctuation">)</span>
				<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>code <span class="token operator">!==</span> <span class="token string">&#39;200&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
					uni<span class="token punctuation">.</span><span class="token function">showToast</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
						<span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span>
						<span class="token literal-property property">title</span><span class="token operator">:</span> data<span class="token punctuation">.</span>message
					<span class="token punctuation">}</span><span class="token punctuation">)</span>
				<span class="token punctuation">}</span>
				<span class="token function">resolve</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
			<span class="token punctuation">}</span><span class="token punctuation">,</span>
			<span class="token function-variable function">fail</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
				uni<span class="token punctuation">.</span><span class="token function">showToast</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
					<span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span>
					<span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;系统错误！&#39;</span>
				<span class="token punctuation">}</span><span class="token punctuation">)</span>
				<span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_3、index-js" tabindex="-1"><a class="header-anchor" href="#_3、index-js"><span><strong>3、index.js</strong></span></a></h5><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>request<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/utils/request.js&#39;</span>
 
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">getImage</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">//登录</span>
	<span class="token keyword">return</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
		<span class="token literal-property property">url</span><span class="token operator">:</span><span class="token string">&#39;/api/image&#39;</span><span class="token punctuation">,</span>
		<span class="token literal-property property">method</span><span class="token operator">:</span><span class="token string">&#39;GET&#39;</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_4、具体应用在index-vue中进行请求" tabindex="-1"><a class="header-anchor" href="#_4、具体应用在index-vue中进行请求"><span><strong>4、具体应用在index.vue中进行请求</strong></span></a></h5><img src="https://pic.imgdb.cn/item/651a8dccc458853aef0a1f7a.png" style="zoom:50%;"><img src="https://pic.imgdb.cn/item/651a8e1dc458853aef0a2840.png" style="zoom:50%;"><h4 id="_3、setup语法中使用uniapp的onload生命周期函数" tabindex="-1"><a class="header-anchor" href="#_3、setup语法中使用uniapp的onload生命周期函数"><span>3、setUp语法中使用uniapp的onLoad生命周期函数</span></a></h4><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">//导入onLoad函数</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>
		onLoad
	<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@dcloudio/uni-app&quot;</span><span class="token punctuation">;</span>
	<span class="token function">onLoad</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4、文件上传" tabindex="-1"><a class="header-anchor" href="#_4、文件上传"><span>4、文件上传</span></a></h4><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onChangeAvatar<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
								<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>uni-forms-item</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>头像<span class="token punctuation">&quot;</span></span> <span class="token attr-name">required</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>avatar<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
									<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>image</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span> <span class="token property">border-radius</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span> <span class="token attr-name">mode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>aspectFill<span class="token punctuation">&quot;</span></span>
										<span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>url<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>image</span><span class="token punctuation">&gt;</span></span>
								<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>uni-forms-item</span><span class="token punctuation">&gt;</span></span>
								<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">margin-left</span><span class="token punctuation">:</span> 65px<span class="token punctuation">;</span><span class="token property">font-size</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>上传头像<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">&gt;</span></span>
							<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> url <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">function</span> <span class="token function">onChangeAvatar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">//调用小程序的接口</span>
		uni<span class="token punctuation">.</span><span class="token function">chooseMedia</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
			<span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
			<span class="token literal-property property">mediaType</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;image&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
			<span class="token function">success</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token comment">//获取本地路径</span>
				<span class="token keyword">const</span> <span class="token punctuation">{</span>
					tempFilePath
				<span class="token punctuation">}</span> <span class="token operator">=</span> res<span class="token punctuation">.</span>tempFiles<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
				<span class="token comment">//文件上传接口</span>
				uni<span class="token punctuation">.</span><span class="token function">uploadFile</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
					<span class="token comment">//文件上传请求路径</span>
					<span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;http://localhost:8600/common/upload&#39;</span><span class="token punctuation">,</span>
					<span class="token literal-property property">filePath</span><span class="token operator">:</span> tempFilePath<span class="token punctuation">,</span>
					<span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;file&#39;</span><span class="token punctuation">,</span>
					<span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
						<span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>statusCode <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
							<span class="token keyword">const</span> avatar <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span>data<span class="token punctuation">;</span>
							url<span class="token punctuation">.</span>value <span class="token operator">=</span> avatar<span class="token punctuation">;</span>
							userFormData<span class="token punctuation">.</span>value<span class="token punctuation">.</span>avatar <span class="token operator">=</span> avatar<span class="token punctuation">;</span>
						<span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
							uni<span class="token punctuation">.</span><span class="token function">showToast</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
								<span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;上传头像出现异常&quot;</span><span class="token punctuation">,</span>
								<span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token string">&#39;none&#39;</span>
							<span class="token punctuation">}</span><span class="token punctuation">)</span>
						<span class="token punctuation">}</span>
					<span class="token punctuation">}</span>
				<span class="token punctuation">}</span><span class="token punctuation">)</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_5、使用pinia作数据状态管理" tabindex="-1"><a class="header-anchor" href="#_5、使用pinia作数据状态管理"><span>5、使用Pinia作数据状态管理</span></a></h4><p><strong><mark>说明：Uniapp内置了Pinia，可以直接使用</mark></strong></p><blockquote><p><strong>具体步骤如下</strong></p></blockquote><ul><li>在项目目录中新建stores,在此目录下创建一个js文件夹，具体使用，我这里命名为user.js用来存储用户登录后返回的用户信息</li><li>在main.js文件中引入</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createSSRApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> Pinia <span class="token keyword">from</span> <span class="token string">&#39;pinia&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createSSRApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">;</span>
	app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Pinia<span class="token punctuation">.</span><span class="token function">createPinia</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token punctuation">{</span>
		app<span class="token punctuation">,</span>
		Pinia<span class="token punctuation">,</span> <span class="token comment">// 此处必须将 Pinia 返回</span>
	<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>user.js文件</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;pinia&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> userStore <span class="token operator">=</span> <span class="token function">defineStore</span><span class="token punctuation">(</span><span class="token string">&#39;user&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	<span class="token keyword">const</span> userInfo <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token punctuation">{</span> userInfo <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>在需要数据的页面引入即可：引入到login页面，保存用户登录后后台返回的用户信息，使用Pinia作全局状态管理，方便在任何一个组件中使用到用户信息。</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>
		userStore
	<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/stores/user.js&#39;</span><span class="token punctuation">;</span>
	<span class="token keyword">const</span> user <span class="token operator">=</span> <span class="token function">userStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">doLogin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		valiForm<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">validate</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">valid</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>valid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token comment">//提交预约数据</span>
				<span class="token function">login</span><span class="token punctuation">(</span>userData<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
					<span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
						<span class="token comment">//全局保存</span>
						user<span class="token punctuation">.</span>userInfo<span class="token punctuation">.</span>value <span class="token operator">=</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>user<span class="token punctuation">;</span>
					<span class="token punctuation">}</span>
					<span class="token punctuation">}</span>
				<span class="token punctuation">}</span><span class="token punctuation">)</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>在需要用到用户信息的组件中引入，然后直接取值使用即可</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>
		userStore
	<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/stores/user.js&#39;</span><span class="token punctuation">;</span>
	<span class="token comment">//引入Pinia中保存的user信息</span>
	<span class="token keyword">const</span> user <span class="token operator">=</span> <span class="token function">userStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//用户名</span>
	<span class="token keyword">const</span> name <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//头像</span>
	<span class="token keyword">const</span> avatar <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//从Pinia存储获取用户登录信息</span>
	<span class="token keyword">function</span> <span class="token function">getUserInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		name<span class="token punctuation">.</span>value <span class="token operator">=</span> user<span class="token punctuation">.</span>userInfo<span class="token punctuation">.</span>value<span class="token punctuation">.</span>name<span class="token punctuation">;</span>
		avatar<span class="token punctuation">.</span>value <span class="token operator">=</span> user<span class="token punctuation">.</span>userInfo<span class="token punctuation">.</span>value<span class="token punctuation">.</span>avatar<span class="token punctuation">;</span>
	<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="项目部署" tabindex="-1"><a class="header-anchor" href="#项目部署"><span>项目部署</span></a></h1><h2 id="使用内网穿透工具sunny-ngrok" tabindex="-1"><a class="header-anchor" href="#使用内网穿透工具sunny-ngrok"><span>使用内网穿透工具<mark>sunny-Ngrok</mark></span></a></h2>`,111),d={href:"https://www.ngrok.cc/",target:"_blank",rel:"noopener noreferrer"},v=n("p",null,"java程序运行在本地，将小程序代码打包上传进行一个体验版即可。",-1);function m(g,b){const a=o("ExternalLinkIcon");return c(),l("div",null,[u,n("p",null,[n("strong",null,[s("安装步骤："),n("a",r,[s("RabbitMQ消息队列 (sixkey-world.top)"),t(a)])])]),k,n("p",null,[n("strong",null,[s("网址："),n("a",d,[s("Sunny-Ngrok内网转发内网穿透 - 国内内网映射服务器"),t(a)])])]),v])}const h=e(i,[["render",m],["__file","智约会议管理系统.html.vue"]]),w=JSON.parse('{"path":"/posts/%E9%A1%B9%E7%9B%AE%E6%96%87%E6%A1%A3/%E6%99%BA%E7%BA%A6%E4%BC%9A%E8%AE%AE%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F.html","title":"智约会议管理系统","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2022-01-12T00:00:00.000Z","category":["项目"],"tag":["文档","项目"],"star":true,"sticky":true,"description":"智约会议管理系统 后台 项目搭建 1、导入依赖 2、配置文件 主要模块 用户管理 公告管理 日志管理 会议室管理 预约管理 功能模块： 用户管理 1、新增用户出现报错 请求体返回时一直报错？原因是响应体属性无get方法 报错：Resolved [org.springframework.web.HttpMediaTypeNotAcceptableExce...","head":[["meta",{"property":"og:url","content":"https://swx08.github.io/vuepress/posts/%E9%A1%B9%E7%9B%AE%E6%96%87%E6%A1%A3/%E6%99%BA%E7%BA%A6%E4%BC%9A%E8%AE%AE%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F.html"}],["meta",{"property":"og:site_name","content":"文学博客"}],["meta",{"property":"og:title","content":"智约会议管理系统"}],["meta",{"property":"og:description","content":"智约会议管理系统 后台 项目搭建 1、导入依赖 2、配置文件 主要模块 用户管理 公告管理 日志管理 会议室管理 预约管理 功能模块： 用户管理 1、新增用户出现报错 请求体返回时一直报错？原因是响应体属性无get方法 报错：Resolved [org.springframework.web.HttpMediaTypeNotAcceptableExce..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://pic.imgdb.cn/item/65141a56c458853aef4ccc15.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"智约会议管理系统"}],["meta",{"property":"article:author","content":"sixkey"}],["meta",{"property":"article:tag","content":"文档"}],["meta",{"property":"article:tag","content":"项目"}],["meta",{"property":"article:published_time","content":"2022-01-12T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"智约会议管理系统\\",\\"image\\":[\\"https://pic.imgdb.cn/item/65141a56c458853aef4ccc15.png\\"],\\"datePublished\\":\\"2022-01-12T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"sixkey\\",\\"url\\":\\"https://swx08.github.io\\"}]}"]]},"headers":[{"level":2,"title":"后台","slug":"后台","link":"#后台","children":[{"level":3,"title":"项目搭建","slug":"项目搭建","link":"#项目搭建","children":[{"level":4,"title":"1、导入依赖","slug":"_1、导入依赖","link":"#_1、导入依赖","children":[]},{"level":4,"title":"2、配置文件","slug":"_2、配置文件","link":"#_2、配置文件","children":[]}]},{"level":3,"title":"主要模块","slug":"主要模块","link":"#主要模块","children":[]},{"level":3,"title":"功能模块：","slug":"功能模块","link":"#功能模块","children":[{"level":4,"title":"用户管理","slug":"用户管理","link":"#用户管理","children":[{"level":5,"title":"1、新增用户出现报错","slug":"_1、新增用户出现报错","link":"#_1、新增用户出现报错","children":[]},{"level":5,"title":"2、特坑","slug":"_2、特坑","link":"#_2、特坑","children":[]},{"level":5,"title":"3、前端捕获后端异常和超时异常","slug":"_3、前端捕获后端异常和超时异常","link":"#_3、前端捕获后端异常和超时异常","children":[]}]},{"level":4,"title":"日志管理","slug":"日志管理","link":"#日志管理","children":[]},{"level":4,"title":"公告管理","slug":"公告管理","link":"#公告管理","children":[]},{"level":4,"title":"预约管理","slug":"预约管理","link":"#预约管理","children":[{"level":5,"title":"1、特坑：","slug":"_1、特坑","link":"#_1、特坑","children":[]},{"level":5,"title":"2、使用定时任务修改会议主题","slug":"_2、使用定时任务修改会议主题","link":"#_2、使用定时任务修改会议主题","children":[]}]},{"level":4,"title":"rabbitMQ异步通信","slug":"rabbitmq异步通信","link":"#rabbitmq异步通信","children":[]},{"level":4,"title":"异步发送短信","slug":"异步发送短信","link":"#异步发送短信","children":[]},{"level":4,"title":"定时修改任务","slug":"定时修改任务","link":"#定时修改任务","children":[]},{"level":4,"title":"Vue3集成echarts","slug":"vue3集成echarts","link":"#vue3集成echarts","children":[]},{"level":4,"title":"使用pinia存储token","slug":"使用pinia存储token","link":"#使用pinia存储token","children":[]},{"level":4,"title":"vue3使用面包屑","slug":"vue3使用面包屑","link":"#vue3使用面包屑","children":[]}]}]},{"level":2,"title":"前台","slug":"前台","link":"#前台","children":[{"level":3,"title":"预约功能","slug":"预约功能","link":"#预约功能","children":[]},{"level":3,"title":"我的功能","slug":"我的功能","link":"#我的功能","children":[]},{"level":3,"title":"Uniapp搭建","slug":"uniapp搭建","link":"#uniapp搭建","children":[{"level":4,"title":"1、问题合集","slug":"_1、问题合集","link":"#_1、问题合集","children":[{"level":5,"title":"1、tabbar底部不显示原因","slug":"_1、tabbar底部不显示原因","link":"#_1、tabbar底部不显示原因","children":[]}]},{"level":4,"title":"2、Uniapp请求封装","slug":"_2、uniapp请求封装","link":"#_2、uniapp请求封装","children":[{"level":5,"title":"1、base.js","slug":"_1、base-js","link":"#_1、base-js","children":[]},{"level":5,"title":"2、request.js","slug":"_2、request-js","link":"#_2、request-js","children":[]},{"level":5,"title":"3、index.js","slug":"_3、index-js","link":"#_3、index-js","children":[]},{"level":5,"title":"4、具体应用在index.vue中进行请求","slug":"_4、具体应用在index-vue中进行请求","link":"#_4、具体应用在index-vue中进行请求","children":[]}]},{"level":4,"title":"3、setUp语法中使用uniapp的onLoad生命周期函数","slug":"_3、setup语法中使用uniapp的onload生命周期函数","link":"#_3、setup语法中使用uniapp的onload生命周期函数","children":[]},{"level":4,"title":"4、文件上传","slug":"_4、文件上传","link":"#_4、文件上传","children":[]},{"level":4,"title":"5、使用Pinia作数据状态管理","slug":"_5、使用pinia作数据状态管理","link":"#_5、使用pinia作数据状态管理","children":[]}]}]},{"level":2,"title":"使用内网穿透工具sunny-Ngrok","slug":"使用内网穿透工具sunny-ngrok","link":"#使用内网穿透工具sunny-ngrok","children":[]}],"git":{},"readingTime":{"minutes":16.74,"words":5021},"filePathRelative":"posts/项目文档/智约会议管理系统.md","localizedDate":"2022年1月12日","excerpt":"\\n<h2>后台</h2>\\n<h3>项目搭建</h3>\\n<h4>1、导入依赖</h4>\\n<div class=\\"language-java\\" data-ext=\\"java\\" data-title=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token operator\\">&lt;</span>project xmlns<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"http://maven.apache.org/POM/4.0.0\\"</span> xmlns<span class=\\"token operator\\">:</span>xsi<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"http://www.w3.org/2001/XMLSchema-instance\\"</span>\\n  xsi<span class=\\"token operator\\">:</span>schemaLocation<span class=\\"token operator\\">=</span><span class=\\"token string\\">\\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\\"</span><span class=\\"token operator\\">&gt;</span>\\n  <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>modelVersion<span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token number\\">4.0</span><span class=\\"token number\\">.0</span><span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>modelVersion<span class=\\"token operator\\">&gt;</span>\\n\\n  <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>groupId<span class=\\"token punctuation\\">&gt;</span></span>com<span class=\\"token punctuation\\">.</span>sixkey<span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>groupId<span class=\\"token operator\\">&gt;</span>\\n  <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>artifactId<span class=\\"token punctuation\\">&gt;</span></span>meet<span class=\\"token operator\\">-</span>booking<span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>artifactId<span class=\\"token operator\\">&gt;</span>\\n  <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>version<span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token number\\">1.0</span><span class=\\"token operator\\">-</span><span class=\\"token constant\\">SNAPSHOT</span><span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>version<span class=\\"token operator\\">&gt;</span>\\n  <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>packaging<span class=\\"token punctuation\\">&gt;</span></span>jar<span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>packaging<span class=\\"token operator\\">&gt;</span>\\n\\n  <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>parent<span class=\\"token punctuation\\">&gt;</span></span>\\n    <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>groupId<span class=\\"token punctuation\\">&gt;</span></span>org<span class=\\"token punctuation\\">.</span>springframework<span class=\\"token punctuation\\">.</span>boot<span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>groupId<span class=\\"token operator\\">&gt;</span>\\n    <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>artifactId<span class=\\"token punctuation\\">&gt;</span></span>spring<span class=\\"token operator\\">-</span>boot<span class=\\"token operator\\">-</span>starter<span class=\\"token operator\\">-</span>parent<span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>artifactId<span class=\\"token operator\\">&gt;</span>\\n    <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>version<span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token number\\">2.7</span><span class=\\"token number\\">.5</span><span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>version<span class=\\"token operator\\">&gt;</span>\\n  <span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>parent<span class=\\"token operator\\">&gt;</span>\\n\\n  <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>properties<span class=\\"token punctuation\\">&gt;</span></span>\\n    <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>project<span class=\\"token punctuation\\">.</span>build<span class=\\"token punctuation\\">.</span>sourceEncoding<span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token constant\\">UTF</span><span class=\\"token operator\\">-</span><span class=\\"token number\\">8</span><span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>project<span class=\\"token punctuation\\">.</span>build<span class=\\"token punctuation\\">.</span>sourceEncoding<span class=\\"token operator\\">&gt;</span>\\n  <span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>properties<span class=\\"token operator\\">&gt;</span>\\n\\n  <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>dependencies<span class=\\"token punctuation\\">&gt;</span></span>\\n    <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>dependency<span class=\\"token punctuation\\">&gt;</span></span>\\n      <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>groupId<span class=\\"token punctuation\\">&gt;</span></span>org<span class=\\"token punctuation\\">.</span>springframework<span class=\\"token punctuation\\">.</span>boot<span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>groupId<span class=\\"token operator\\">&gt;</span>\\n      <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>artifactId<span class=\\"token punctuation\\">&gt;</span></span>spring<span class=\\"token operator\\">-</span>boot<span class=\\"token operator\\">-</span>starter<span class=\\"token operator\\">-</span>validation<span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>artifactId<span class=\\"token operator\\">&gt;</span>\\n    <span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>dependency<span class=\\"token operator\\">&gt;</span>\\n    <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>dependency<span class=\\"token punctuation\\">&gt;</span></span>\\n      <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>groupId<span class=\\"token punctuation\\">&gt;</span></span>org<span class=\\"token punctuation\\">.</span>springframework<span class=\\"token punctuation\\">.</span>boot<span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>groupId<span class=\\"token operator\\">&gt;</span>\\n      <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>artifactId<span class=\\"token punctuation\\">&gt;</span></span>spring<span class=\\"token operator\\">-</span>boot<span class=\\"token operator\\">-</span>starter<span class=\\"token operator\\">-</span>web<span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>artifactId<span class=\\"token operator\\">&gt;</span>\\n    <span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>dependency<span class=\\"token operator\\">&gt;</span>\\n    <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>dependency<span class=\\"token punctuation\\">&gt;</span></span>\\n      <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>groupId<span class=\\"token punctuation\\">&gt;</span></span>org<span class=\\"token punctuation\\">.</span>springframework<span class=\\"token punctuation\\">.</span>boot<span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>groupId<span class=\\"token operator\\">&gt;</span>\\n      <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>artifactId<span class=\\"token punctuation\\">&gt;</span></span>spring<span class=\\"token operator\\">-</span>boot<span class=\\"token operator\\">-</span>starter<span class=\\"token operator\\">-</span>test<span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>artifactId<span class=\\"token operator\\">&gt;</span>\\n      <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>scope<span class=\\"token punctuation\\">&gt;</span></span>test<span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>scope<span class=\\"token operator\\">&gt;</span>\\n      <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>exclusions<span class=\\"token punctuation\\">&gt;</span></span>\\n        <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>exclusion<span class=\\"token punctuation\\">&gt;</span></span>\\n          <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>groupId<span class=\\"token punctuation\\">&gt;</span></span>org<span class=\\"token punctuation\\">.</span>junit<span class=\\"token punctuation\\">.</span>vintage<span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>groupId<span class=\\"token operator\\">&gt;</span>\\n          <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>artifactId<span class=\\"token punctuation\\">&gt;</span></span>junit<span class=\\"token operator\\">-</span>vintage<span class=\\"token operator\\">-</span>engine<span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>artifactId<span class=\\"token operator\\">&gt;</span>\\n        <span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>exclusion<span class=\\"token operator\\">&gt;</span>\\n      <span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>exclusions<span class=\\"token operator\\">&gt;</span>\\n    <span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>dependency<span class=\\"token operator\\">&gt;</span>\\n    <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>dependency<span class=\\"token punctuation\\">&gt;</span></span>\\n      <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>groupId<span class=\\"token punctuation\\">&gt;</span></span>junit<span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>groupId<span class=\\"token operator\\">&gt;</span>\\n      <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>artifactId<span class=\\"token punctuation\\">&gt;</span></span>junit<span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>artifactId<span class=\\"token operator\\">&gt;</span>\\n      <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>scope<span class=\\"token punctuation\\">&gt;</span></span>test<span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>scope<span class=\\"token operator\\">&gt;</span>\\n    <span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>dependency<span class=\\"token operator\\">&gt;</span>\\n    <span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">!</span><span class=\\"token operator\\">--</span>mysql数据库驱动依赖<span class=\\"token operator\\">--</span><span class=\\"token operator\\">&gt;</span>\\n    <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>dependency<span class=\\"token punctuation\\">&gt;</span></span>\\n      <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>groupId<span class=\\"token punctuation\\">&gt;</span></span>mysql<span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>groupId<span class=\\"token operator\\">&gt;</span>\\n      <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>artifactId<span class=\\"token punctuation\\">&gt;</span></span>mysql<span class=\\"token operator\\">-</span>connector<span class=\\"token operator\\">-</span>java<span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>artifactId<span class=\\"token operator\\">&gt;</span>\\n    <span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>dependency<span class=\\"token operator\\">&gt;</span>\\n    <span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">!</span><span class=\\"token operator\\">--</span>druid连接池<span class=\\"token operator\\">--</span><span class=\\"token operator\\">&gt;</span>\\n    <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>dependency<span class=\\"token punctuation\\">&gt;</span></span>\\n      <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>groupId<span class=\\"token punctuation\\">&gt;</span></span>com<span class=\\"token punctuation\\">.</span>alibaba<span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>groupId<span class=\\"token operator\\">&gt;</span>\\n      <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>artifactId<span class=\\"token punctuation\\">&gt;</span></span>druid<span class=\\"token operator\\">-</span>spring<span class=\\"token operator\\">-</span>boot<span class=\\"token operator\\">-</span>starter<span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>artifactId<span class=\\"token operator\\">&gt;</span>\\n      <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>version<span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token number\\">1.1</span><span class=\\"token number\\">.22</span><span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>version<span class=\\"token operator\\">&gt;</span>\\n    <span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>dependency<span class=\\"token operator\\">&gt;</span>\\n    <span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">!</span><span class=\\"token operator\\">--</span>mybatis<span class=\\"token operator\\">-</span>plus依赖，已经包括了mybatis的依赖了<span class=\\"token operator\\">--</span><span class=\\"token operator\\">&gt;</span>\\n    <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>dependency<span class=\\"token punctuation\\">&gt;</span></span>\\n      <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>groupId<span class=\\"token punctuation\\">&gt;</span></span>com<span class=\\"token punctuation\\">.</span>baomidou<span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>groupId<span class=\\"token operator\\">&gt;</span>\\n      <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>artifactId<span class=\\"token punctuation\\">&gt;</span></span>mybatis<span class=\\"token operator\\">-</span>plus<span class=\\"token operator\\">-</span>boot<span class=\\"token operator\\">-</span>starter<span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>artifactId<span class=\\"token operator\\">&gt;</span>\\n      <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>version<span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token number\\">3.3</span><span class=\\"token number\\">.1</span><span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>version<span class=\\"token operator\\">&gt;</span>\\n    <span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>dependency<span class=\\"token operator\\">&gt;</span>\\n    <span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">!</span><span class=\\"token operator\\">--</span>mybatis<span class=\\"token operator\\">-</span>plus的模板引擎依赖，使用mybatis<span class=\\"token operator\\">-</span>plus必须要加这个依赖<span class=\\"token operator\\">--</span><span class=\\"token operator\\">&gt;</span>\\n    <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>dependency<span class=\\"token punctuation\\">&gt;</span></span>\\n      <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>groupId<span class=\\"token punctuation\\">&gt;</span></span>org<span class=\\"token punctuation\\">.</span>apache<span class=\\"token punctuation\\">.</span>velocity<span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>groupId<span class=\\"token operator\\">&gt;</span>\\n      <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>artifactId<span class=\\"token punctuation\\">&gt;</span></span>velocity<span class=\\"token operator\\">-</span>engine<span class=\\"token operator\\">-</span>core<span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>artifactId<span class=\\"token operator\\">&gt;</span>\\n      <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>version<span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token number\\">2.0</span><span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>version<span class=\\"token operator\\">&gt;</span>\\n    <span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>dependency<span class=\\"token operator\\">&gt;</span>\\n    <span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">!</span><span class=\\"token operator\\">--</span> 引入lombok <span class=\\"token operator\\">--</span><span class=\\"token operator\\">&gt;</span>\\n    <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>dependency<span class=\\"token punctuation\\">&gt;</span></span>\\n      <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>groupId<span class=\\"token punctuation\\">&gt;</span></span>org<span class=\\"token punctuation\\">.</span>projectlombok<span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>groupId<span class=\\"token operator\\">&gt;</span>\\n      <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>artifactId<span class=\\"token punctuation\\">&gt;</span></span>lombok<span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>artifactId<span class=\\"token operator\\">&gt;</span>\\n      <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>optional<span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token boolean\\">true</span><span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>optional<span class=\\"token operator\\">&gt;</span>\\n    <span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>dependency<span class=\\"token operator\\">&gt;</span>\\n    <span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">!</span><span class=\\"token operator\\">--</span> 引入springAop <span class=\\"token operator\\">--</span><span class=\\"token operator\\">&gt;</span>\\n    <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>dependency<span class=\\"token punctuation\\">&gt;</span></span>\\n      <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>groupId<span class=\\"token punctuation\\">&gt;</span></span>org<span class=\\"token punctuation\\">.</span>springframework<span class=\\"token punctuation\\">.</span>boot<span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>groupId<span class=\\"token operator\\">&gt;</span>\\n      <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>artifactId<span class=\\"token punctuation\\">&gt;</span></span>spring<span class=\\"token operator\\">-</span>boot<span class=\\"token operator\\">-</span>starter<span class=\\"token operator\\">-</span>aop<span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>artifactId<span class=\\"token operator\\">&gt;</span>\\n    <span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>dependency<span class=\\"token operator\\">&gt;</span>\\n    <span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">!</span><span class=\\"token operator\\">--</span> 引入fastjson <span class=\\"token operator\\">--</span><span class=\\"token operator\\">&gt;</span>\\n    <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>dependency<span class=\\"token punctuation\\">&gt;</span></span>\\n      <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>groupId<span class=\\"token punctuation\\">&gt;</span></span>com<span class=\\"token punctuation\\">.</span>alibaba<span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>groupId<span class=\\"token operator\\">&gt;</span>\\n      <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>artifactId<span class=\\"token punctuation\\">&gt;</span></span>fastjson<span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>artifactId<span class=\\"token operator\\">&gt;</span>\\n      <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>version<span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token number\\">2.0</span><span class=\\"token number\\">.7</span><span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>version<span class=\\"token operator\\">&gt;</span>\\n    <span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>dependency<span class=\\"token operator\\">&gt;</span>\\n  <span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>dependencies<span class=\\"token operator\\">&gt;</span>\\n\\n  <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>build<span class=\\"token punctuation\\">&gt;</span></span>\\n    <span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">!</span><span class=\\"token operator\\">--</span> 注：maven默认是不编译，因此加上如下resources才会生产对应的xml文件 目的：解决mybatis映射关系不对应问题  start <span class=\\"token operator\\">==</span><span class=\\"token operator\\">==</span><span class=\\"token operator\\">==</span><span class=\\"token operator\\">==</span><span class=\\"token operator\\">==</span><span class=\\"token operator\\">==</span><span class=\\"token operator\\">==</span><span class=\\"token operator\\">=</span> <span class=\\"token operator\\">--</span><span class=\\"token operator\\">&gt;</span>\\n    <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>resources<span class=\\"token punctuation\\">&gt;</span></span>\\n      <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>resource<span class=\\"token punctuation\\">&gt;</span></span>\\n        <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>directory<span class=\\"token punctuation\\">&gt;</span></span>src<span class=\\"token operator\\">/</span>main<span class=\\"token operator\\">/</span>java<span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>directory<span class=\\"token operator\\">&gt;</span>\\n        <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>includes<span class=\\"token punctuation\\">&gt;</span></span>\\n          <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>include<span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token operator\\">*</span><span class=\\"token operator\\">*</span><span class=\\"token comment\\">/*.xml&lt;/include&gt;\\n        &lt;/includes&gt;\\n        &lt;filtering&gt;false&lt;/filtering&gt;\\n      &lt;/resource&gt;\\n      &lt;resource&gt;\\n        &lt;directory&gt;src/main/resources&lt;/directory&gt;\\n      &lt;/resource&gt;\\n    &lt;/resources&gt;\\n    &lt;testResources&gt;\\n      &lt;testResource&gt;\\n        &lt;directory&gt;src/main/java&lt;/directory&gt;\\n        &lt;includes&gt;\\n          &lt;include&gt;**/</span><span class=\\"token operator\\">*</span><span class=\\"token punctuation\\">.</span>xml<span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>include<span class=\\"token operator\\">&gt;</span>\\n        <span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>includes<span class=\\"token operator\\">&gt;</span>\\n        <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>filtering<span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token boolean\\">false</span><span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>filtering<span class=\\"token operator\\">&gt;</span>\\n      <span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>testResource<span class=\\"token operator\\">&gt;</span>\\n    <span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>testResources<span class=\\"token operator\\">&gt;</span>\\n    <span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">!</span><span class=\\"token operator\\">--</span> 注：maven默认是不编译，因此加上如下resources才会生产对应的xml文件 目的：解决mybatis映射关系不对应问题  end <span class=\\"token operator\\">==</span><span class=\\"token operator\\">==</span><span class=\\"token operator\\">==</span><span class=\\"token operator\\">==</span><span class=\\"token operator\\">==</span><span class=\\"token operator\\">==</span><span class=\\"token operator\\">==</span><span class=\\"token operator\\">=</span> <span class=\\"token operator\\">--</span><span class=\\"token operator\\">&gt;</span>\\n\\n    <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>plugins<span class=\\"token punctuation\\">&gt;</span></span>\\n      <span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">!</span><span class=\\"token operator\\">--</span> maven打包插件 <span class=\\"token operator\\">-&gt;</span> 将整个工程打成一个 fatjar <span class=\\"token operator\\">--</span><span class=\\"token operator\\">&gt;</span>\\n      <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>plugin<span class=\\"token punctuation\\">&gt;</span></span>\\n        <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>groupId<span class=\\"token punctuation\\">&gt;</span></span>org<span class=\\"token punctuation\\">.</span>springframework<span class=\\"token punctuation\\">.</span>boot<span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>groupId<span class=\\"token operator\\">&gt;</span>\\n        <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>artifactId<span class=\\"token punctuation\\">&gt;</span></span>spring<span class=\\"token operator\\">-</span>boot<span class=\\"token operator\\">-</span>maven<span class=\\"token operator\\">-</span>plugin<span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>artifactId<span class=\\"token operator\\">&gt;</span>\\n        <span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">!</span><span class=\\"token operator\\">--</span> 作用<span class=\\"token operator\\">:</span>项目打成jar，同时把本地jar包也引入进去 <span class=\\"token operator\\">--</span><span class=\\"token operator\\">&gt;</span>\\n        <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>configuration<span class=\\"token punctuation\\">&gt;</span></span>\\n          <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>includeSystemScope<span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token boolean\\">true</span><span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>includeSystemScope<span class=\\"token operator\\">&gt;</span>\\n        <span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>configuration<span class=\\"token operator\\">&gt;</span>\\n      <span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>plugin<span class=\\"token operator\\">&gt;</span>\\n      <span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">!</span><span class=\\"token operator\\">--</span>添加配置跳过测试<span class=\\"token operator\\">--</span><span class=\\"token operator\\">&gt;</span>\\n      <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>plugin<span class=\\"token punctuation\\">&gt;</span></span>\\n        <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>groupId<span class=\\"token punctuation\\">&gt;</span></span>org<span class=\\"token punctuation\\">.</span>apache<span class=\\"token punctuation\\">.</span>maven<span class=\\"token punctuation\\">.</span>plugins<span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>groupId<span class=\\"token operator\\">&gt;</span>\\n        <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>artifactId<span class=\\"token punctuation\\">&gt;</span></span>maven<span class=\\"token operator\\">-</span>surefire<span class=\\"token operator\\">-</span>plugin<span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>artifactId<span class=\\"token operator\\">&gt;</span>\\n        <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>version<span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token number\\">2.22</span><span class=\\"token number\\">.1</span><span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>version<span class=\\"token operator\\">&gt;</span>\\n        <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>configuration<span class=\\"token punctuation\\">&gt;</span></span>\\n          <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>skipTests<span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token boolean\\">true</span><span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>skipTests<span class=\\"token operator\\">&gt;</span>\\n        <span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>configuration<span class=\\"token operator\\">&gt;</span>\\n      <span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>plugin<span class=\\"token operator\\">&gt;</span>\\n    <span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>plugins<span class=\\"token operator\\">&gt;</span>\\n\\n    <span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">!</span><span class=\\"token operator\\">--</span> 固定<span class=\\"token class-name\\">Jar</span>包名字 <span class=\\"token operator\\">--</span><span class=\\"token operator\\">&gt;</span>\\n    <span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span>finalName<span class=\\"token punctuation\\">&gt;</span></span>meet<span class=\\"token operator\\">-</span>booking<span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>finalName<span class=\\"token operator\\">&gt;</span>\\n  <span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>build<span class=\\"token operator\\">&gt;</span>\\n<span class=\\"token operator\\">&lt;</span><span class=\\"token operator\\">/</span>project<span class=\\"token operator\\">&gt;</span>\\n\\n</code></pre></div>","autoDesc":true}');export{h as comp,w as data};
