import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as l,o as a,c as r,b as e,e as t,d as p,a as o}from"./app-DCsLG_oX.js";const i={},d=e("h1",{id:"dubbo",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#dubbo"},[e("span",null,"Dubbo")])],-1),c=e("h2",{id:"总结",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#总结"},[e("span",null,"总结")])],-1),h=e("p",null,"Dubbo使用 需要在服务提供方和服务消费方配置各自的如下配置",-1),_={href:"https://imgse.com/i/ppH3nqx",target:"_blank",rel:"noopener noreferrer"},g=e("img",{src:"https://s1.ax1x.com/2023/04/08/ppH3nqx.md.png",alt:"ppH3nqx.md.png",tabindex:"0",loading:"lazy"},null,-1),m=e("figcaption",null,"ppH3nqx.md.png",-1),u=o('<h2 id="一、基础知识" tabindex="-1"><a class="header-anchor" href="#一、基础知识"><span>一、基础知识</span></a></h2><h3 id="_1-1-分布式概念" tabindex="-1"><a class="header-anchor" href="#_1-1-分布式概念"><span>1.1 分布式概念</span></a></h3><p><strong>分布式系统是若干个独立计算机的集合。</strong></p><p>了解序列化与反序列化：<strong>Java序列化是指把Java对象转换为字节序列的过程；而Java反序列化是指把字节序列恢复为Java对象的过程。 序列化是这个过程的第一部分，将数据分解成字节流，以便存储在文件中或在网络上传输。 ... 反序列化就是打开字节流并重构对象</strong></p><h3 id="_1-2-rpc" tabindex="-1"><a class="header-anchor" href="#_1-2-rpc"><span>1.2 RPC</span></a></h3><p>RPC俩个核心模块：<strong>通讯(Socket)、序列化</strong></p><p>RPC多个框架：<strong>dubbo、gRPC、Thirft、HSF</strong></p>',7),b={href:"https://imgse.com/i/ppHK0mT",target:"_blank",rel:"noopener noreferrer"},x=e("img",{src:"https://s1.ax1x.com/2023/04/08/ppHK0mT.md.png",alt:"ppHK0mT.md.png",loading:"lazy"},null,-1),f={href:"https://imgse.com/i/ppHKB0U",target:"_blank",rel:"noopener noreferrer"},H=e("img",{src:"https://s1.ax1x.com/2023/04/08/ppHKB0U.md.png",alt:"ppHKB0U.md.png",loading:"lazy"},null,-1),k={id:"_1-3-dubbo基本工作原理",tabindex:"-1"},v={class:"header-anchor",href:"#_1-3-dubbo基本工作原理"},y={href:"https://imgse.com/i/ppHKdXV",target:"_blank",rel:"noopener noreferrer"},z=e("img",{src:"https://s1.ax1x.com/2023/04/08/ppHKdXV.md.png",alt:"ppHKdXV.md.png",loading:"lazy"},null,-1),K=o('<h3 id="_1-4-调用关系" tabindex="-1"><a class="header-anchor" href="#_1-4-调用关系"><span>1.4 调用关系</span></a></h3><p>(1) 服务容器(Container),主要负责启动、加载、运行服务、</p><p>(2) 服务提供者(Provider)在启动时，需要向注册中心注册自己提供的服务。</p><p>(3) 服务消费者(Consumer)在启动时，向注册中心订阅自己所需要的服务。</p><p>(4) 在注册中心返回服务列表给到服务消费者，如果有变更，注册中心将基于长连接推送变更的数据。</p><p>(5) 服务消费，从提供的服务列表中，获取到对应的服务后，去调用远程服务关联的业务逻辑。</p><p>(6) 监控中心(Monitor)，将服务消费者和服务提供者在内存累计被访问和调用的次数，监控中心每一分钟进行一次统计。</p><h2 id="二、dubbo配置" tabindex="-1"><a class="header-anchor" href="#二、dubbo配置"><span>二、dubbo配置</span></a></h2><h3 id="_2-1-注册中心" tabindex="-1"><a class="header-anchor" href="#_2-1-注册中心"><span>2.1 注册中心：</span></a></h3><p><strong>Zookeeper 负责服务地址的注册服务地址的查询。</strong></p><p><strong>服务提供方和服务消费方只在启动时与注册中心进行交互，注册中心不负责具体请求的处理</strong></p><h3 id="_2-2-zookeeper下载安装" tabindex="-1"><a class="header-anchor" href="#_2-2-zookeeper下载安装"><span>2.2 Zookeeper下载安装：</span></a></h3>',12),D={href:"https://zookeeper.apache.org/releases.html#download",target:"_blank",rel:"noopener noreferrer"},E=e("p",null,[e("strong",null,"Zookeeper下载安装注意：需要在conf文件夹中的zoo_sample.cfg 复制一份 重命名为zoo.cfg,并进入bin级目录下通过cmd输入命令行zkServer.cmd启动，同时进入bin级目录下输入命令行zkCli.cmd")],-1),A=e("h3",{id:"_2-3-小案例",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_2-3-小案例"},[e("span",null,"2.3 小案例")])],-1),J=e("p",null,"特别提示：服务提供方是一个maven项目，服务消费方又是一个maven项目 没有整合springboot.",-1),R=e("h4",{id:"_2-3-1-服务提供方配置spring-xml文件",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_2-3-1-服务提供方配置spring-xml文件"},[e("span",null,"2.3.1 服务提供方配置spring.xml文件")])],-1),C={href:"https://imgse.com/i/ppHKytJ",target:"_blank",rel:"noopener noreferrer"},q=e("img",{src:"https://s1.ax1x.com/2023/04/08/ppHKytJ.md.png",alt:"ppHKytJ.md.png",tabindex:"0",loading:"lazy"},null,-1),F=e("figcaption",null,"ppHKytJ.md.png",-1),P=e("p",null,"监听器配置在web.xml下：",-1),U={href:"https://imgse.com/i/ppHKD7F",target:"_blank",rel:"noopener noreferrer"},B=e("img",{src:"https://s1.ax1x.com/2023/04/08/ppHKD7F.md.png",alt:"ppHKD7F.md.png",tabindex:"0",loading:"lazy"},null,-1),V=e("figcaption",null,"ppHKD7F.md.png",-1),N=e("h4",{id:"_2-3-2-服务消费方配置spring-xml文件",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_2-3-2-服务消费方配置spring-xml文件"},[e("span",null,"2.3.2 服务消费方配置spring.xml文件")])],-1),w={href:"https://imgse.com/i/ppH3Vz9",target:"_blank",rel:"noopener noreferrer"},T=e("img",{src:"https://s1.ax1x.com/2023/04/08/ppH3Vz9.md.png",alt:"ppH3Vz9.md.png",tabindex:"0",loading:"lazy"},null,-1),Z=e("figcaption",null,"ppH3Vz9.md.png",-1),I=e("p",null,"在web.xml文件下配置前端控制器",-1),M={href:"https://imgse.com/i/ppH3ERJ",target:"_blank",rel:"noopener noreferrer"},j=e("img",{src:"https://s1.ax1x.com/2023/04/08/ppH3ERJ.md.png",alt:"ppH3ERJ.md.png",tabindex:"0",loading:"lazy"},null,-1),G=e("figcaption",null,"ppH3ERJ.md.png",-1),S=e("p",null,"案例总结：服务提供方需要写业务层接口和实现；服务消费方需要写跟服务提供方一样的接口但不需要实现接口，还需要写Controller层。",-1),Y={href:"https://imgse.com/i/ppHKsk4",target:"_blank",rel:"noopener noreferrer"},X=e("img",{src:"https://s1.ax1x.com/2023/04/08/ppHKsk4.md.png",alt:"ppHKsk4.md.png",loading:"lazy"},null,-1),L=e("h3",{id:"_2-4配置",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_2-4配置"},[e("span",null,"2.4配置")])],-1),O=e("h4",{id:"_2-4-1-启动检查",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_2-4-1-启动检查"},[e("span",null,[p("2.4.1 "),e("strong",null,"启动检查")])])],-1),Q={href:"https://imgse.com/i/ppH3AG4",target:"_blank",rel:"noopener noreferrer"},W=e("img",{src:"https://s1.ax1x.com/2023/04/08/ppH3AG4.md.png",alt:"ppH3AG4.md.png",tabindex:"0",loading:"lazy"},null,-1),$=e("figcaption",null,"ppH3AG4.md.png",-1),ee=e("h4",{id:"_2-4-2-配置重试次数-超时时间",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_2-4-2-配置重试次数-超时时间"},[e("span",null,[p("2.4.2 "),e("strong",null,"配置重试次数&超时时间")])])],-1),ne={href:"https://imgse.com/i/ppH3kiF",target:"_blank",rel:"noopener noreferrer"},te=e("img",{src:"https://s1.ax1x.com/2023/04/08/ppH3kiF.md.png",alt:"ppH3kiF.md.png",tabindex:"0",loading:"lazy"},null,-1),pe=e("figcaption",null,"ppH3kiF.md.png",-1),oe=e("p",null,"服务端设置重试次数",-1),se={href:"https://imgse.com/i/ppH3iIU",target:"_blank",rel:"noopener noreferrer"},le=e("img",{src:"https://s1.ax1x.com/2023/04/08/ppH3iIU.md.png",alt:"ppH3iIU.md.png",tabindex:"0",loading:"lazy"},null,-1),ae=e("figcaption",null,"ppH3iIU.md.png",-1),re=e("h4",{id:"_2-4-3-配置多版本",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_2-4-3-配置多版本"},[e("span",null,[p("2.4.3 "),e("strong",null,"配置多版本")])])],-1),ie=e("p",null,"服务提供方配置：",-1),de={href:"https://imgse.com/i/ppH3ms1",target:"_blank",rel:"noopener noreferrer"},ce=e("img",{src:"https://s1.ax1x.com/2023/04/08/ppH3ms1.md.png",alt:"ppH3ms1.md.png",tabindex:"0",loading:"lazy"},null,-1),he=e("figcaption",null,"ppH3ms1.md.png",-1),_e=e("p",null,"注意：",-1),ge=e("p",null,[p("如果服务消费方配置了"),e("a",{href:"dubbo:reference"},"dubbo:reference"),p(",则Cotroller层的依赖注入注解就得使用@Autowired")],-1),me=e("p",null,"服务消费方配置：",-1),ue={href:"https://imgse.com/i/ppH3eMR",target:"_blank",rel:"noopener noreferrer"},be=e("img",{src:"https://s1.ax1x.com/2023/04/08/ppH3eMR.md.png",alt:"ppH3eMR.md.png",tabindex:"0",loading:"lazy"},null,-1),xe=e("figcaption",null,"ppH3eMR.md.png",-1),fe=e("h4",{id:"_2-4-4-本地存根-就是充当中介的角色",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_2-4-4-本地存根-就是充当中介的角色"},[e("span",null,[p("2.4.4 "),e("strong",null,"本地存根 (就是充当中介的角色)")])])],-1),He={href:"https://imgse.com/i/ppH38RH",target:"_blank",rel:"noopener noreferrer"},ke=e("img",{src:"https://s1.ax1x.com/2023/04/08/ppH38RH.md.png",alt:"ppH38RH.md.png",tabindex:"0",loading:"lazy"},null,-1),ve=e("figcaption",null,"ppH38RH.md.png",-1),ye=o(`<h2 id="三、高可用" tabindex="-1"><a class="header-anchor" href="#三、高可用"><span>三、高可用</span></a></h2><h3 id="_1、zookeeper宕机与dubbo直连" tabindex="-1"><a class="header-anchor" href="#_1、zookeeper宕机与dubbo直连"><span>1、Zookeeper宕机与Dubbo直连</span></a></h3><p>现象：zookeeper注册中心宕机，还可以消费dubbo暴露的服务。</p><p>原因：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>健壮性：
(1)监控中心宕掉不影响使用，只是丢掉部分采样数据。
(2)数据库宕掉后，注册中心仍能通过缓存提供服务列表查询，但不能注册新服务。
(3)注册中心完全宕掉后，服务提供者和服务消费者仍能通过本地缓存通讯。
(4)服务提供者无状态，任意一台宕掉后，不影响使用。
(5)服务提供者全部宕掉后，服务消费者应用将无法使用，并无限次重连等待服务提供者恢复。
高可用：通过设计，减少系统不能提供服务的时间

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-负载均衡机制" tabindex="-1"><a class="header-anchor" href="#_2-负载均衡机制"><span>2.负载均衡机制</span></a></h3><p>默认调用随机均衡机制，可通过配置修改</p><p>(1) 基于权重的随机负载均衡机制</p>`,8),ze={href:"https://imgse.com/i/ppHKJYj",target:"_blank",rel:"noopener noreferrer"},Ke=e("img",{src:"https://s1.ax1x.com/2023/04/08/ppHKJYj.md.png",alt:"ppHKJYj.md.png",tabindex:"0",loading:"lazy"},null,-1),De=e("figcaption",null,"ppHKJYj.md.png",-1),Ee=e("p",null,"(2) 基于权重的轮询负载均衡机制",-1),Ae={href:"https://imgse.com/i/ppHKNpn",target:"_blank",rel:"noopener noreferrer"},Je=e("img",{src:"https://s1.ax1x.com/2023/04/08/ppHKNpn.md.png",alt:"ppHKNpn.md.png",tabindex:"0",loading:"lazy"},null,-1),Re=e("figcaption",null,"ppHKNpn.md.png",-1),Ce=e("p",null,"(3) 最少活跃数-负载均衡机制",-1),qe={href:"https://imgse.com/i/ppHKUlq",target:"_blank",rel:"noopener noreferrer"},Fe=e("img",{src:"https://s1.ax1x.com/2023/04/08/ppHKUlq.md.png",alt:"ppHKUlq.md.png",tabindex:"0",loading:"lazy"},null,-1),Pe=e("figcaption",null,"ppHKUlq.md.png",-1),Ue=o('<p>(4) 一致性hash-负载均衡机制</p><h3 id="_3-服务降级" tabindex="-1"><a class="header-anchor" href="#_3-服务降级"><span>3.服务降级</span></a></h3><p>什么是服务降级？</p><p>当服务器压力剧增的情况下，根据实际业务情况及流量，对一些服务和也页面有策略的不处理或换种简单的方式处理，从而释放服务器资源以保证核心交易正常运作或高效运作。</p><p>具体实现：可以在消费者一方屏蔽某些服务或容错某些服务</p><p>屏蔽：不调用远程方法，直接返回空对象。</p><p>容错：调用远程方法，返回空对象。</p><ol start="4"><li>服务器容错&amp;Hystrix</li></ol><p>在集群调用失效时，Dubbo提供了多种容错方案，默认为Failover Cluster:当出现失效，重试其它服务器。</p><p>实际开发中整合hystrix:</p><p>Hystrix旨在通过控制哪些访问远程系统、服务和第三方库的节点，从而对延迟和故障提供更强大的容错能力。Hystrix具备拥有回退机制和断路器功能的线程和信号隔离，请求缓存和请求打包，以及监控和配置等功能。</p><p>(1) 配置spring-cloud-starter-netflix-hystrix.</p><p>直接在pom.xml中加入依赖</p><p>然后在启动类上加上@EnableHystrix来启用</p><p>(2) 配置Provider端</p><p>在Dubbo的Provider上加上@HystrixCommand配置，经过Hystrix代理。</p>',16);function Be(Ve,Ne){const n=l("ExternalLinkIcon");return a(),r("div",null,[d,c,h,e("figure",null,[e("a",_,[g,t(n)]),m]),u,e("p",null,[p("RPC原理："),e("a",b,[x,t(n)])]),e("p",null,[p("节点角色："),e("a",f,[H,t(n)])]),e("h3",k,[e("a",v,[e("span",null,[p("1.3 Dubbo基本工作原理："),e("a",y,[z,t(n)])])])]),K,e("p",null,[e("a",D,[p("阿帕奇动物园管理员 (apache.org)"),t(n)])]),E,A,J,R,e("figure",null,[e("a",C,[q,t(n)]),F]),P,e("figure",null,[e("a",U,[B,t(n)]),V]),N,e("figure",null,[e("a",w,[T,t(n)]),Z]),I,e("figure",null,[e("a",M,[j,t(n)]),G]),S,e("p",null,[p("注意：Controller层的依赖注入，不再使用@Autowired注解，使用dubbo提供的@Reference,原因如下："),e("a",Y,[X,t(n)])]),L,O,e("figure",null,[e("a",Q,[W,t(n)]),$]),ee,e("figure",null,[e("a",ne,[te,t(n)]),pe]),oe,e("figure",null,[e("a",se,[le,t(n)]),ae]),re,ie,e("figure",null,[e("a",de,[ce,t(n)]),he]),_e,ge,me,e("figure",null,[e("a",ue,[be,t(n)]),xe]),fe,e("figure",null,[e("a",He,[ke,t(n)]),ve]),ye,e("figure",null,[e("a",ze,[Ke,t(n)]),De]),Ee,e("figure",null,[e("a",Ae,[Je,t(n)]),Re]),Ce,e("figure",null,[e("a",qe,[Fe,t(n)]),Pe]),Ue])}const Ze=s(i,[["render",Be],["__file","Dubbo学习文档.html.vue"]]),Ie=JSON.parse('{"path":"/posts/%E5%90%8E%E7%AB%AF/%E5%BE%AE%E6%9C%8D%E5%8A%A1/Dubbo%E5%AD%A6%E4%B9%A0%E6%96%87%E6%A1%A3.html","title":"Dubbo","lang":"zh-CN","frontmatter":{"category":["后端"],"tag":["Dubbo","微服务","RPC框架"],"date":"2022-01-12T00:00:00.000Z","star":true,"sticky":true,"description":"Dubbo 总结 Dubbo使用 需要在服务提供方和服务消费方配置各自的如下配置 ppH3nqx.md.pngppH3nqx.md.png 一、基础知识 1.1 分布式概念 分布式系统是若干个独立计算机的集合。 了解序列化与反序列化：Java序列化是指把Java对象转换为字节序列的过程；而Java反序列化是指把字节序列恢复为Java对象的过程。 序列化...","head":[["meta",{"property":"og:url","content":"https://swx08.github.io/vuepress/posts/%E5%90%8E%E7%AB%AF/%E5%BE%AE%E6%9C%8D%E5%8A%A1/Dubbo%E5%AD%A6%E4%B9%A0%E6%96%87%E6%A1%A3.html"}],["meta",{"property":"og:site_name","content":"文学博客"}],["meta",{"property":"og:title","content":"Dubbo"}],["meta",{"property":"og:description","content":"Dubbo 总结 Dubbo使用 需要在服务提供方和服务消费方配置各自的如下配置 ppH3nqx.md.pngppH3nqx.md.png 一、基础知识 1.1 分布式概念 分布式系统是若干个独立计算机的集合。 了解序列化与反序列化：Java序列化是指把Java对象转换为字节序列的过程；而Java反序列化是指把字节序列恢复为Java对象的过程。 序列化..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://s1.ax1x.com/2023/04/08/ppH3nqx.md.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"Dubbo"}],["meta",{"property":"article:author","content":"sixkey"}],["meta",{"property":"article:tag","content":"Dubbo"}],["meta",{"property":"article:tag","content":"微服务"}],["meta",{"property":"article:tag","content":"RPC框架"}],["meta",{"property":"article:published_time","content":"2022-01-12T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Dubbo\\",\\"image\\":[\\"https://s1.ax1x.com/2023/04/08/ppH3nqx.md.png\\",\\"https://s1.ax1x.com/2023/04/08/ppHK0mT.md.png\\",\\"https://s1.ax1x.com/2023/04/08/ppHKB0U.md.png\\",\\"https://s1.ax1x.com/2023/04/08/ppHKdXV.md.png\\",\\"https://s1.ax1x.com/2023/04/08/ppHKytJ.md.png\\",\\"https://s1.ax1x.com/2023/04/08/ppHKD7F.md.png\\",\\"https://s1.ax1x.com/2023/04/08/ppH3Vz9.md.png\\",\\"https://s1.ax1x.com/2023/04/08/ppH3ERJ.md.png\\",\\"https://s1.ax1x.com/2023/04/08/ppHKsk4.md.png\\",\\"https://s1.ax1x.com/2023/04/08/ppH3AG4.md.png\\",\\"https://s1.ax1x.com/2023/04/08/ppH3kiF.md.png\\",\\"https://s1.ax1x.com/2023/04/08/ppH3iIU.md.png\\",\\"https://s1.ax1x.com/2023/04/08/ppH3ms1.md.png\\",\\"https://s1.ax1x.com/2023/04/08/ppH3eMR.md.png\\",\\"https://s1.ax1x.com/2023/04/08/ppH38RH.md.png\\",\\"https://s1.ax1x.com/2023/04/08/ppHKJYj.md.png\\",\\"https://s1.ax1x.com/2023/04/08/ppHKNpn.md.png\\",\\"https://s1.ax1x.com/2023/04/08/ppHKUlq.md.png\\"],\\"datePublished\\":\\"2022-01-12T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"sixkey\\",\\"url\\":\\"https://swx08.github.io\\"}]}"]]},"headers":[{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]},{"level":2,"title":"一、基础知识","slug":"一、基础知识","link":"#一、基础知识","children":[{"level":3,"title":"1.1 分布式概念","slug":"_1-1-分布式概念","link":"#_1-1-分布式概念","children":[]},{"level":3,"title":"1.2 RPC","slug":"_1-2-rpc","link":"#_1-2-rpc","children":[]},{"level":3,"title":"1.3 Dubbo基本工作原理：","slug":"_1-3-dubbo基本工作原理","link":"#_1-3-dubbo基本工作原理","children":[]},{"level":3,"title":"1.4 调用关系","slug":"_1-4-调用关系","link":"#_1-4-调用关系","children":[]}]},{"level":2,"title":"二、dubbo配置","slug":"二、dubbo配置","link":"#二、dubbo配置","children":[{"level":3,"title":"2.1 注册中心：","slug":"_2-1-注册中心","link":"#_2-1-注册中心","children":[]},{"level":3,"title":"2.2 Zookeeper下载安装：","slug":"_2-2-zookeeper下载安装","link":"#_2-2-zookeeper下载安装","children":[]},{"level":3,"title":"2.3 小案例","slug":"_2-3-小案例","link":"#_2-3-小案例","children":[{"level":4,"title":"2.3.1 服务提供方配置spring.xml文件","slug":"_2-3-1-服务提供方配置spring-xml文件","link":"#_2-3-1-服务提供方配置spring-xml文件","children":[]},{"level":4,"title":"2.3.2 服务消费方配置spring.xml文件","slug":"_2-3-2-服务消费方配置spring-xml文件","link":"#_2-3-2-服务消费方配置spring-xml文件","children":[]}]},{"level":3,"title":"2.4配置","slug":"_2-4配置","link":"#_2-4配置","children":[{"level":4,"title":"2.4.1 启动检查","slug":"_2-4-1-启动检查","link":"#_2-4-1-启动检查","children":[]},{"level":4,"title":"2.4.2 配置重试次数&超时时间","slug":"_2-4-2-配置重试次数-超时时间","link":"#_2-4-2-配置重试次数-超时时间","children":[]},{"level":4,"title":"2.4.3 配置多版本","slug":"_2-4-3-配置多版本","link":"#_2-4-3-配置多版本","children":[]},{"level":4,"title":"2.4.4 本地存根 (就是充当中介的角色)","slug":"_2-4-4-本地存根-就是充当中介的角色","link":"#_2-4-4-本地存根-就是充当中介的角色","children":[]}]}]},{"level":2,"title":"三、高可用","slug":"三、高可用","link":"#三、高可用","children":[{"level":3,"title":"1、Zookeeper宕机与Dubbo直连","slug":"_1、zookeeper宕机与dubbo直连","link":"#_1、zookeeper宕机与dubbo直连","children":[]},{"level":3,"title":"2.负载均衡机制","slug":"_2-负载均衡机制","link":"#_2-负载均衡机制","children":[]},{"level":3,"title":"3.服务降级","slug":"_3-服务降级","link":"#_3-服务降级","children":[]}]}],"git":{},"readingTime":{"minutes":5.03,"words":1508},"filePathRelative":"posts/后端/微服务/Dubbo学习文档.md","localizedDate":"2022年1月12日","excerpt":"\\n<h2>总结</h2>\\n<p>Dubbo使用 需要在服务提供方和服务消费方配置各自的如下配置</p>\\n<figure><a href=\\"https://imgse.com/i/ppH3nqx\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\"><img src=\\"https://s1.ax1x.com/2023/04/08/ppH3nqx.md.png\\" alt=\\"ppH3nqx.md.png\\" tabindex=\\"0\\" loading=\\"lazy\\"></a><figcaption>ppH3nqx.md.png</figcaption></figure>\\n<h2>一、基础知识</h2>","autoDesc":true}');export{Ze as comp,Ie as data};
