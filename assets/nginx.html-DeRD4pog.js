import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as p,o,c as l,b as n,e as a,a as e}from"./app-DCsLG_oX.js";const i={},c=e('<h1 id="nginx快速入门" tabindex="-1"><a class="header-anchor" href="#nginx快速入门"><span>Nginx快速入门</span></a></h1><h2 id="序言" tabindex="-1"><a class="header-anchor" href="#序言"><span>序言</span></a></h2><p>源码：https://trac.nginx.org/nginx/browser</p><p>官网：http://www.nginx.org/</p><p>Nginx是lgor Sysoev为俄罗斯访问量第二的 rambler.ru 站点设计开发的。从2004年发布至今，凭借开源的力量，已经接近成熟与完善。</p><p>Nginx功能丰富，可作为HTTP服务器，也可作为反向代理服务器，邮件服务器。支持FastCGI、SSL、Virtual Host、URL Rewrite、Gzip等功能。并且支持很多第三方的模块扩展。</p><p>Nginx的稳定性、功能集、示例配置文件和低系统资源的消耗让他后来居上，在全球活跃的网站中有12.18%的使用比率，大约为2220万个网站。</p><h2 id="_1、nginx常用功能" tabindex="-1"><a class="header-anchor" href="#_1、nginx常用功能"><span>1、Nginx常用功能</span></a></h2><p>1、Http代理，反向代理：作为web服务器最常用的功能之一，尤其是反向代理。</p><p>这里我给来2张图，对正向代理与反向代理做个诠释，具体细节，大家可以翻阅下资料。</p><p>正向代理：</p>',11),r={href:"https://imgse.com/i/p99d2jg",target:"_blank",rel:"noopener noreferrer"},u=n("img",{src:"https://s1.ax1x.com/2023/04/16/p99d2jg.md.jpg",alt:"正向代理",style:{zoom:"80%"}},null,-1),d=n("p",null,"反向代理：",-1),m={href:"https://imgse.com/i/p99dc38",target:"_blank",rel:"noopener noreferrer"},v=n("img",{src:"https://s1.ax1x.com/2023/04/16/p99dc38.md.jpg",alt:"反向代理",tabindex:"0",loading:"lazy"},null,-1),k=n("figcaption",null,"反向代理",-1),b=e(`<p>Nginx在做反向代理时，提供性能稳定，并且能够提供配置灵活的转发功能。Nginx可以根据不同的正则匹配，采取不同的转发策略，比如图片文件结尾的走文件服务器，动态页面走web服务器，只要你正则写的没问题，又有相对应的服务器解决方案，你就可以随心所欲的玩。并且Nginx对返回结果进行错误页跳转，异常判断等。如果被分发的服务器存在异常，他可以将请求重新转发给另外一台服务器，然后自动去除异常服务器。</p><h2 id="_2、web缓存" tabindex="-1"><a class="header-anchor" href="#_2、web缓存"><span>2、web缓存</span></a></h2><p>Nginx可以对不同的文件做不同的缓存处理，配置灵活，并且支持FastCGI_Cache，主要用于对FastCGI的动态程序进行缓存。配合着第三方的ngx_cache_purge，对制定的URL缓存内容可以的进行增删管理。</p><h2 id="_3、nginx配置文件结构" tabindex="-1"><a class="header-anchor" href="#_3、nginx配置文件结构"><span>3、Nginx配置文件结构</span></a></h2><p>如果你下载好啦，你的安装文件，不妨打开conf文件夹的nginx.conf文件，Nginx服务器的基础配置，默认的配置也存放在此。</p><p><strong>nginx.conf 由三部分组成：</strong></p><blockquote><p>第一部分 全局块 主要会设置一些影响 nginx服务器整体运行的配置指令；</p></blockquote><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>worker_processes  <span class="token number">1</span><span class="token punctuation">;</span>  值越大，可以支持的并发处理量也越多
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>第二部分 events块 主要影响Nginx服务器与用户的网络连接；</p></blockquote><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>worker_connections  1024;  支持的最大连接数
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>第三部分 http块 配置代理、缓存和日志定义等绝大多数功能和第三方模块 · 的配置都在这里;</p></blockquote><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>http <span class="token punctuation">{</span>
include       mime<span class="token punctuation">.</span>types<span class="token punctuation">;</span>
default_type  application<span class="token operator">/</span>octet<span class="token operator">-</span>stream<span class="token punctuation">;</span>

server <span class="token punctuation">{</span>
   listen       <span class="token number">80</span><span class="token punctuation">;</span>
   server_name  localhost<span class="token punctuation">;</span>

   location <span class="token operator">/</span> <span class="token punctuation">{</span>
       root   html<span class="token punctuation">;</span>
       index  index<span class="token punctuation">.</span>html index<span class="token punctuation">.</span>htm<span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>默认的 nginx 配置文件 nginx.conf 内容如下</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>#user  nobody<span class="token punctuation">;</span> 
worker_processes  <span class="token number">1</span><span class="token punctuation">;</span>

#error_log  logs<span class="token operator">/</span>error<span class="token punctuation">.</span>log<span class="token punctuation">;</span>
#error_log  logs<span class="token operator">/</span>error<span class="token punctuation">.</span>log  notice<span class="token punctuation">;</span>
#error_log  logs<span class="token operator">/</span>error<span class="token punctuation">.</span>log  info<span class="token punctuation">;</span>

#pid        logs<span class="token operator">/</span>nginx<span class="token punctuation">.</span>pid<span class="token punctuation">;</span>


events <span class="token punctuation">{</span>
worker_connections  <span class="token number">1024</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>


http <span class="token punctuation">{</span>
include       mime<span class="token punctuation">.</span>types<span class="token punctuation">;</span>
default_type  application<span class="token operator">/</span>octet<span class="token operator">-</span>stream<span class="token punctuation">;</span>

#log_format  main  &#39;$remote_addr <span class="token operator">-</span> $remote_user <span class="token punctuation">[</span>$time_local<span class="token punctuation">]</span> <span class="token string">&quot;$request&quot;</span> &#39;
#                  &#39;$status $body_bytes_sent <span class="token string">&quot;$http_referer&quot;</span> &#39;
#                  &#39;<span class="token string">&quot;$http_user_agent&quot;</span> <span class="token string">&quot;$http_x_forwarded_for&quot;</span>&#39;<span class="token punctuation">;</span>

#access_log  logs<span class="token operator">/</span>access<span class="token punctuation">.</span>log  main<span class="token punctuation">;</span>

sendfile        on<span class="token punctuation">;</span>
#tcp_nopush     on<span class="token punctuation">;</span>

#keepalive_timeout  <span class="token number">0</span><span class="token punctuation">;</span>
keepalive_timeout  <span class="token number">65</span><span class="token punctuation">;</span>

#gzip  on<span class="token punctuation">;</span>

server <span class="token punctuation">{</span>
   listen       <span class="token number">80</span><span class="token punctuation">;</span>
   server_name  localhost<span class="token punctuation">;</span>

   #charset koi8<span class="token operator">-</span>r<span class="token punctuation">;</span>

   #access_log  logs<span class="token operator">/</span>host<span class="token punctuation">.</span>access<span class="token punctuation">.</span>log  main<span class="token punctuation">;</span>

   location <span class="token operator">/</span> <span class="token punctuation">{</span>
       root   html<span class="token punctuation">;</span>
       index  index<span class="token punctuation">.</span>html index<span class="token punctuation">.</span>htm<span class="token punctuation">;</span>
   <span class="token punctuation">}</span>

   #error_page  <span class="token number">404</span>              <span class="token operator">/</span><span class="token number">404.</span>html<span class="token punctuation">;</span>

   # redirect server error pages <span class="token keyword">to</span> <span class="token namespace">the</span> <span class="token keyword">static</span> page <span class="token operator">/</span><span class="token number">50</span>x<span class="token punctuation">.</span>html
   #
   error_page   <span class="token number">500</span> <span class="token number">502</span> <span class="token number">503</span> <span class="token number">504</span>  <span class="token operator">/</span><span class="token number">50</span>x<span class="token punctuation">.</span>html<span class="token punctuation">;</span>
   location <span class="token operator">=</span> <span class="token operator">/</span><span class="token number">50</span>x<span class="token punctuation">.</span>html <span class="token punctuation">{</span>
       root   html<span class="token punctuation">;</span>
   <span class="token punctuation">}</span>

   # proxy the <span class="token constant">PHP</span> scripts <span class="token keyword">to</span> <span class="token class-name">Apache</span> listening on <span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">80</span>
   #
   #location <span class="token operator">~</span> \\<span class="token punctuation">.</span>php$ <span class="token punctuation">{</span>
   #    proxy_pass   http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token punctuation">;</span>
   #<span class="token punctuation">}</span>

   # pass the <span class="token constant">PHP</span> scripts <span class="token keyword">to</span> <span class="token class-name">FastCGI</span> server listening on <span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">9000</span>
   #
   #location <span class="token operator">~</span> \\<span class="token punctuation">.</span>php$ <span class="token punctuation">{</span>
   #    root           html<span class="token punctuation">;</span>
   #    fastcgi_pass   <span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">9000</span><span class="token punctuation">;</span>
   #    fastcgi_index  index<span class="token punctuation">.</span>php<span class="token punctuation">;</span>
   #    fastcgi_param  <span class="token constant">SCRIPT_FILENAME</span>  <span class="token operator">/</span>scripts$fastcgi_script_name<span class="token punctuation">;</span>
   #    include        fastcgi_params<span class="token punctuation">;</span>
   #<span class="token punctuation">}</span>

   # deny access <span class="token keyword">to</span> <span class="token punctuation">.</span>htaccess files<span class="token punctuation">,</span> <span class="token keyword">if</span> <span class="token class-name">Apache</span>&#39;s document root
   # concurs <span class="token keyword">with</span> <span class="token namespace">nginx</span>&#39;s one
   #
   #location <span class="token operator">~</span> <span class="token operator">/</span>\\<span class="token punctuation">.</span>ht <span class="token punctuation">{</span>
   #    deny  all<span class="token punctuation">;</span>
   #<span class="token punctuation">}</span>
<span class="token punctuation">}</span>


# another virtual host using mix of <span class="token constant">IP</span><span class="token operator">-</span><span class="token punctuation">,</span> name<span class="token operator">-</span><span class="token punctuation">,</span> and port<span class="token operator">-</span>based configuration
#
#server <span class="token punctuation">{</span>
#    listen       <span class="token number">8000</span><span class="token punctuation">;</span>
#    listen       somename<span class="token operator">:</span><span class="token number">8080</span><span class="token punctuation">;</span>
#    server_name  somename  alias  another<span class="token punctuation">.</span>alias<span class="token punctuation">;</span>

#    location <span class="token operator">/</span> <span class="token punctuation">{</span>
#        root   html<span class="token punctuation">;</span>
#        index  index<span class="token punctuation">.</span>html index<span class="token punctuation">.</span>htm<span class="token punctuation">;</span>
#    <span class="token punctuation">}</span>
#<span class="token punctuation">}</span>


# <span class="token constant">HTTPS</span> server
#
#server <span class="token punctuation">{</span>
#    listen       <span class="token number">443</span> ssl<span class="token punctuation">;</span>
#    server_name  localhost<span class="token punctuation">;</span>

#    ssl_certificate      cert<span class="token punctuation">.</span>pem<span class="token punctuation">;</span>
#    ssl_certificate_key  cert<span class="token punctuation">.</span>key<span class="token punctuation">;</span>

#    ssl_session_cache    shared<span class="token operator">:</span><span class="token constant">SSL</span><span class="token operator">:</span><span class="token number">1</span>m<span class="token punctuation">;</span>
#    ssl_session_timeout  <span class="token number">5</span>m<span class="token punctuation">;</span>

#    ssl_ciphers  <span class="token constant">HIGH</span><span class="token operator">:</span><span class="token operator">!</span>aNULL<span class="token operator">:</span><span class="token operator">!</span><span class="token constant">MD5</span><span class="token punctuation">;</span>
#    ssl_prefer_server_ciphers  on<span class="token punctuation">;</span>

#    location <span class="token operator">/</span> <span class="token punctuation">{</span>
#        root   html<span class="token punctuation">;</span>
#        index  index<span class="token punctuation">.</span>html index<span class="token punctuation">.</span>htm<span class="token punctuation">;</span>
#    <span class="token punctuation">}</span>
#<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>nginx 基础文件结构</strong></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>              #全局块

events <span class="token punctuation">{</span>         #events块
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>

http      #http块
<span class="token punctuation">{</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>   #http全局块
server        #server块
<span class="token punctuation">{</span> 
   <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>       #server全局块
   location <span class="token punctuation">[</span><span class="token constant">PATTERN</span><span class="token punctuation">]</span>   #location块
   <span class="token punctuation">{</span>
       <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
   <span class="token punctuation">}</span>
   location <span class="token punctuation">[</span><span class="token constant">PATTERN</span><span class="token punctuation">]</span> 
   <span class="token punctuation">{</span>
       <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
server
<span class="token punctuation">{</span>
 <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>     #http全局块
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>1、<strong>全局块</strong>：配置影响nginx全局的指令。一般有运行nginx服务器的用户组，nginx进程pid存放路径，日志存放路径，配置文件引入，允许生成worker process数等。</li><li>2、<strong>events块</strong>：配置影响nginx服务器或与用户的网络连接。有每个进程的最大连接数，选取哪种事件驱动模型处理连接请求，是否允许同时接受多个网路连接，开启多个网络连接序列化等。</li><li>3、<strong>http块</strong>：可以嵌套多个server，配置代理，缓存，日志定义等绝大多数功能和第三方模块的配置。如文件引入，mime-type定义，日志自定义，是否使用sendfile传输文件，连接超时时间，单连接请求数等。</li><li>4、<strong>server块</strong>：配置虚拟主机的相关参数，一个http中可以有多个server。</li><li>5、<strong>location块</strong>：配置请求的路由，以及各种页面的处理情况。</li></ul><h2 id="_4、反向代理实例" tabindex="-1"><a class="header-anchor" href="#_4、反向代理实例"><span>4、反向代理实例</span></a></h2><h4 id="_1、反向代理实例1" tabindex="-1"><a class="header-anchor" href="#_1、反向代理实例1"><span>①、反向代理实例1</span></a></h4><blockquote><p>访问过程的分析</p></blockquote>`,20),g={href:"https://imgse.com/i/p99O44s",target:"_blank",rel:"noopener noreferrer"},h=n("img",{src:"https://s1.ax1x.com/2023/04/16/p99O44s.md.jpg",alt:"分析",style:{zoom:"200%"}},null,-1),_=n("blockquote",null,[n("p",null,"配置服务器ip地址对应的域名")],-1),x=n("p",null,"注意：ip地址：8.130.108.52是我在啊里云买的服务器地址。",-1),f=n("p",null,"如果你的服务器安装了tomcat，可以通过8.130.108.52:8080访问tomcat页面",-1),y={href:"https://imgse.com/i/p99OTg0",target:"_blank",rel:"noopener noreferrer"},j=n("img",{src:"https://s1.ax1x.com/2023/04/16/p99OTg0.md.png",alt:"p99OTg0.md.png",style:{zoom:"200%"}},null,-1),w=n("p",null,"在系统盘中找到如下路径，修改hosts文件。",-1),q=n("p",null,[n("strong",null,"C:\\Windows\\System32\\drivers\\etc")],-1),N={href:"https://imgse.com/i/p99O2DS",target:"_blank",rel:"noopener noreferrer"},C=n("img",{src:"https://s1.ax1x.com/2023/04/16/p99O2DS.png",alt:"p99O2DS.png",style:{zoom:"200%"}},null,-1),O=n("p",null,"现在可以通过对应的域名+端口号访问",-1),S={href:"https://imgse.com/i/p99O7vV",target:"_blank",rel:"noopener noreferrer"},z=n("img",{src:"https://s1.ax1x.com/2023/04/16/p99O7vV.md.png",alt:"p99O7vV.md.png",style:{zoom:"200%"}},null,-1),T=n("p",null,[n("strong",null,"最终测试")],-1),$=n("p",null,"修改nginx中的nginx.conf配置，可以直接通过域名访问",-1),M={href:"https://imgse.com/i/p99OfEQ",target:"_blank",rel:"noopener noreferrer"},I=n("img",{src:"https://s1.ax1x.com/2023/04/16/p99OfEQ.png",alt:"p99OfEQ.png"},null,-1),H=n("p",null,"页面有点不一样，哈哈哈！",-1),L={href:"https://imgse.com/i/p99OhNj",target:"_blank",rel:"noopener noreferrer"},P=n("img",{src:"https://s1.ax1x.com/2023/04/16/p99OhNj.png",alt:"p99OhNj.png",tabindex:"0",loading:"lazy"},null,-1),E=n("figcaption",null,"p99OhNj.png",-1),F=n("h4",{id:"_2、反向代理实例2",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_2、反向代理实例2"},[n("span",null,"②、反向代理实例2")])],-1),R={href:"https://imgse.com/i/p99ORHg",target:"_blank",rel:"noopener noreferrer"},B=n("img",{src:"https://s1.ax1x.com/2023/04/16/p99ORHg.md.jpg",alt:"p99ORHg.md.jpg",style:{zoom:"200%"}},null,-1),Y=n("blockquote",null,[n("p",null,"准备")],-1),G=n("p",null,"服务器中安装两个tomcat,分别监听8080、8081端口；分别在tomcat中部署一个a.html页面进行测试使用。",-1),J=n("blockquote",null,[n("p",null,"实现效果")],-1),V=n("p",null,"Nginx监听端口9001：",-1),Z=n("p",null,"访问http://8.130.108.52:90001/edu/ 直接跳转到127.0.0.1:8080 能访问到a.html页面。",-1),A=n("p",null,"访问http://8.130.108.52:90001/vod/ 直接跳转到127.0.0.1:8081 能访问到a.html页面。",-1),D=n("p",null,"具体配置：添加一个server服务",-1),Q={href:"https://imgse.com/i/p99Ogu8",target:"_blank",rel:"noopener noreferrer"},X=n("img",{src:"https://s1.ax1x.com/2023/04/16/p99Ogu8.png",alt:"p99Ogu8.png",style:{zoom:"200%"}},null,-1),U=e(`<p>小提示：记得开放服务器9001、8080、8081端口哦！</p><blockquote><p>正则说明</p></blockquote><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>①、 <span class="token operator">=</span> ：用于不含正则表达式的uil前，要求请求字符串与uil严格匹配，如果匹配成功，就停止继续向下搜索并立即处理请求。
②、 <span class="token operator">~</span> <span class="token operator">:</span> 用于表示uil包含正则表达式，并且区分大小写。
③、 <span class="token operator">~</span><span class="token operator">*</span> <span class="token operator">:</span> 用于表示uil包含正则表达式，并且不区分大小写。
注意：如果uil包含正则表达式，则必须要有<span class="token operator">~</span> 或者 <span class="token operator">~</span><span class="token operator">*</span> 标识。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>总结</p></blockquote><p>实例2就像把项目部署到一台服务器上，项目中不同的请求资源路径打到不同的tomcat服务上。</p><blockquote><p>nginx.conf配置文件说明</p></blockquote><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>########### 每个指令必须有分号结束。#################
#user administrator administrators<span class="token punctuation">;</span>  #配置用户或者组，默认为nobody nobody。
#worker_processes <span class="token number">2</span><span class="token punctuation">;</span>  #允许生成的进程数，默认为<span class="token number">1</span>
#pid <span class="token operator">/</span>nginx<span class="token operator">/</span>pid<span class="token operator">/</span>nginx<span class="token punctuation">.</span>pid<span class="token punctuation">;</span>   #指定nginx进程运行文件存放地址
error_log log<span class="token operator">/</span>error<span class="token punctuation">.</span>log debug<span class="token punctuation">;</span>  #制定日志路径，级别。这个设置可以放入全局块，http块，server块，级别以此为：debug<span class="token operator">|</span>info<span class="token operator">|</span>notice<span class="token operator">|</span>warn<span class="token operator">|</span>error<span class="token operator">|</span>crit<span class="token operator">|</span>alert<span class="token operator">|</span>emerg
events <span class="token punctuation">{</span>
accept_mutex on<span class="token punctuation">;</span>   #设置网路连接序列化，防止惊群现象发生，默认为on
multi_accept on<span class="token punctuation">;</span>  #设置一个进程是否同时接受多个网络连接，默认为off
#use epoll<span class="token punctuation">;</span>      #事件驱动模型，select<span class="token operator">|</span>poll<span class="token operator">|</span>kqueue<span class="token operator">|</span>epoll<span class="token operator">|</span>resig<span class="token operator">|</span><span class="token operator">/</span>dev<span class="token operator">/</span>poll<span class="token operator">|</span>eventport
worker_connections  <span class="token number">1024</span><span class="token punctuation">;</span>    #最大连接数，默认为<span class="token number">512</span>
<span class="token punctuation">}</span>
http <span class="token punctuation">{</span>
include       mime<span class="token punctuation">.</span>types<span class="token punctuation">;</span>   #文件扩展名与文件类型映射表
default_type  application<span class="token operator">/</span>octet<span class="token operator">-</span>stream<span class="token punctuation">;</span> #默认文件类型，默认为text<span class="token operator">/</span>plain
#access_log off<span class="token punctuation">;</span> #取消服务日志    
log_format myFormat &#39;$remote_addr–$remote_user <span class="token punctuation">[</span>$time_local<span class="token punctuation">]</span> $request $status $body_bytes_sent $http_referer $http_user_agent $http_x_forwarded_for&#39;<span class="token punctuation">;</span> #自定义格式
access_log log<span class="token operator">/</span>access<span class="token punctuation">.</span>log myFormat<span class="token punctuation">;</span>  #combined为日志格式的默认值
sendfile on<span class="token punctuation">;</span>   #允许sendfile方式传输文件，默认为off，可以在http块，server块，location块。
sendfile_max_chunk <span class="token number">100</span>k<span class="token punctuation">;</span>  #每个进程每次调用传输数量不能大于设定的值，默认为<span class="token number">0</span>，即不设上限。
keepalive_timeout <span class="token number">65</span><span class="token punctuation">;</span>  #连接超时时间，默认为<span class="token number">75</span>s，可以在http，server，location块。

upstream mysvr <span class="token punctuation">{</span>   
 server <span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token operator">:</span><span class="token number">7878</span><span class="token punctuation">;</span>
 server <span class="token number">192.168</span><span class="token number">.10</span><span class="token number">.121</span><span class="token operator">:</span><span class="token number">3333</span> backup<span class="token punctuation">;</span>  #热备
<span class="token punctuation">}</span>
error_page <span class="token number">404</span> https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>www<span class="token punctuation">.</span>baidu<span class="token punctuation">.</span>com<span class="token punctuation">;</span> #错误页
server <span class="token punctuation">{</span>
   keepalive_requests <span class="token number">120</span><span class="token punctuation">;</span> #单连接请求上限次数。
   listen       <span class="token number">4545</span><span class="token punctuation">;</span>   #监听端口
   server_name  <span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token punctuation">;</span>   #监听地址       
   location  <span class="token operator">~</span><span class="token operator">*</span><span class="token operator">^</span><span class="token punctuation">.</span>+$ <span class="token punctuation">{</span>       #请求的url过滤，正则匹配，<span class="token operator">~</span>为区分大小写，<span class="token operator">~</span><span class="token operator">*</span>为不区分大小写。
      #root path<span class="token punctuation">;</span>  #根目录
      #index vv<span class="token punctuation">.</span>txt<span class="token punctuation">;</span>  #设置默认页
      proxy_pass  http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>mysvr<span class="token punctuation">;</span>  #请求转向mysvr 定义的服务器列表
      deny <span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token punctuation">;</span>  #拒绝的ip
      allow <span class="token number">172.18</span><span class="token number">.5</span><span class="token number">.54</span><span class="token punctuation">;</span> #允许的ip           
   <span class="token punctuation">}</span> 
<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5、负载均衡" tabindex="-1"><a class="header-anchor" href="#_5、负载均衡"><span>5、负载均衡</span></a></h2><h4 id="_1、介绍" tabindex="-1"><a class="header-anchor" href="#_1、介绍"><span>①、介绍</span></a></h4><p>Nginx提供的负载均衡策略有2种：内置策略和扩展策略。内置策略为轮询，加权轮询，Ip hash。扩展策略，就天马行空，只有你想不到的没有他做不到的啦，你可以参照所有的负载均衡算法，给他一一找出来做下实现。</p><p>上3个图，理解这三种负载均衡算法的实现</p><p>无负载均衡：</p><img src="https://s1.ax1x.com/2023/04/16/p99dggS.md.jpg" alt="无负载均衡" style="zoom:200%;"><p>负载均衡：</p><img src="https://s1.ax1x.com/2023/04/16/p99d69f.md.jpg" alt="负载均衡" style="zoom:150%;"><p>Ip hash算法，对客户端请求的ip进行hash操作，然后根据hash结果将同一个客户端ip的请求分发给同一台服务器进行处理，可以解决session不共享的问题。</p><img src="https://s1.ax1x.com/2023/04/15/p99Z4Rf.md.jpg" alt="p99Z4Rf.md.jpg" style="zoom:150%;"><h4 id="_2、实例" tabindex="-1"><a class="header-anchor" href="#_2、实例"><span>②、实例</span></a></h4>`,18),W={href:"https://imgse.com/i/p99Oo3q",target:"_blank",rel:"noopener noreferrer"},K=n("img",{src:"https://s1.ax1x.com/2023/04/16/p99Oo3q.md.jpg",alt:"p99Oo3q.md.jpg",style:{zoom:"200%"}},null,-1),nn=n("blockquote",null,[n("p",null,"1、实现效果："),n("p",null,"浏览器输入地址：http://8.130.108.52/edu/a.html，负载均衡效果，平均打到8080、8081端口中。"),n("p",null,"2、准备工作："),n("p",null,"（1）、准备两台tomcat服务器，一台8080，一台8081."),n("p",null,"（2）、在两台tomcat里面webapps目录中，创建名称是edu文件夹，在文件夹中准备a.html，用于测试。"),n("p",null,"3、修改Nginx配置文件")],-1),sn=n("p",null,"修改Nginx配置文件：",-1),an={href:"https://imgse.com/i/p99OICn",target:"_blank",rel:"noopener noreferrer"},en=n("img",{src:"https://s1.ax1x.com/2023/04/16/p99OICn.png",alt:"p99OICn.png",style:{zoom:"200%"}},null,-1),tn=e('<blockquote><p>总结</p></blockquote><p>当我们访问http://8.130.108.52/edu/a.html时，请求会转发到不同的tomcat上，默认是轮询</p><p>实例就像把项目部署到一台服务器上，项目中相同的请求资源路径打到不同的tomcat服务上。</p><h2 id="_6、动静分离" tabindex="-1"><a class="header-anchor" href="#_6、动静分离"><span>6、动静分离</span></a></h2><h4 id="_1、介绍-1" tabindex="-1"><a class="header-anchor" href="#_1、介绍-1"><span>①、介绍</span></a></h4><blockquote><p>什么是动静分离?</p></blockquote><p>Nginx动静分离简单来说就是把动态跟静态请求分开，不能理解成只是单纯的把动态页面和静态页面物理分离。严格意义上说应该是动态请求跟静态请求分离开，可以理解成使用Nginx处理静态页面，Tomcat处理动态页面。</p><p>在Web开发中，通常来说，动态资源其实就是指那些后台资源，而静态资源就是指HTML，JavaScript，CSS，img等文件。</p><p>动静分离，说白了，就是将网站静态资源（HTML，JavaScript，CSS，img等文件）与后台应用分开部署，提高用户访问静态代码的速度，降低对后台应用服务器的请求。后台应用服务器只负责动态数据请求。</p><p><strong>优势</strong>：分担负载，减轻web服务器的压力，适用于大负载。静态资源放置cdn，同时还可以通过配置缓存到客户浏览器中，这样极大减轻web服务器的压力。</p><p><strong>劣势</strong>：网络环境不佳时，ajax回应很慢，导致页面出现空白，出错处理会不好看。不利于网站SEO（搜索引擎优化），增加了开发复杂度。</p>',11),pn={href:"https://imgse.com/i/p9CZatI",target:"_blank",rel:"noopener noreferrer"},on=n("img",{src:"https://s1.ax1x.com/2023/04/16/p9CZatI.md.jpg",alt:"动静分离",tabindex:"0",loading:"lazy"},null,-1),ln=n("figcaption",null,"动静分离",-1),cn=n("h4",{id:"_2、实例-1",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_2、实例-1"},[n("span",null,"②、实例")])],-1),rn=n("blockquote",null,[n("p",null,"准备")],-1),un=n("p",null,"创建一个data文件夹，里面分别再创建www、image文件夹；分别存放a.html、1.jgp。",-1),dn=n("blockquote",null,[n("p",null,"修改nginx配置文件")],-1),mn={href:"https://imgse.com/i/p9CMS7F",target:"_blank",rel:"noopener noreferrer"},vn=n("img",{src:"https://s1.ax1x.com/2023/04/17/p9CMS7F.png",alt:"p9CMS7F.png",tabindex:"0",loading:"lazy"},null,-1),kn=n("figcaption",null,"p9CMS7F.png",-1),bn=n("h2",{id:"_7、高可用",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_7、高可用"},[n("span",null,"7、高可用")])],-1),gn=n("h3",{id:"_1、引言",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1、引言"},[n("span",null,"①、引言")])],-1),hn=n("blockquote",null,[n("p",null,"问题?")],-1),_n=n("p",null,"Nginx可能宕机，导致请求转发失败！",-1),xn={href:"https://imgse.com/i/p9CM9k4",target:"_blank",rel:"noopener noreferrer"},fn=n("img",{src:"https://s1.ax1x.com/2023/04/17/p9CM9k4.md.jpg",alt:"p9CM9k4.md.jpg",tabindex:"0",loading:"lazy"},null,-1),yn=n("figcaption",null,"p9CM9k4.md.jpg",-1),jn=n("blockquote",null,[n("p",null,"解决方案")],-1),wn={href:"https://imgse.com/i/p9CMCtJ",target:"_blank",rel:"noopener noreferrer"},qn=n("img",{src:"https://s1.ax1x.com/2023/04/17/p9CMCtJ.md.jpg",alt:"p9CMCtJ.md.jpg",tabindex:"0",loading:"lazy"},null,-1),Nn=n("figcaption",null,"p9CMCtJ.md.jpg",-1),Cn=e(`<blockquote><p>准备工作</p></blockquote><p>（1）、准备两台服务器8.130.108.52 、 82.157.234.124</p><p>（2）、两台服务器都安装Nginx</p><p>（3）、两台服务器都安装keepalived</p><p>安装keepalived:</p><blockquote><p>①、yum install keepalived -y</p><p>②、安装后在etc目录中生成keepalived,有keepalived.conf配置文件</p></blockquote><p><strong>高可用学习后续补充完成…….</strong></p><h2 id="_8、nginx常用命令" tabindex="-1"><a class="header-anchor" href="#_8、nginx常用命令"><span>8、Nginx常用命令</span></a></h2><h3 id="_1、linux命令" tabindex="-1"><a class="header-anchor" href="#_1、linux命令"><span>①、Linux命令</span></a></h3><blockquote><p>Linux防火墙及端口开放</p></blockquote><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code> <span class="token number">1.</span> # 开启
 <span class="token number">2.</span> service firewalld start
 <span class="token number">3.</span> # 重启
 <span class="token number">4.</span> service firewalld restart
 <span class="token number">5.</span> # 关闭
 <span class="token number">6.</span> service firewalld stop
 <span class="token number">7.</span> # 查看防火墙规则
 <span class="token number">8.</span> firewall<span class="token operator">-</span>cmd <span class="token operator">--</span>list<span class="token operator">-</span>all
 <span class="token number">9.</span> # 查询端口是否开放
<span class="token number">10.</span> firewall<span class="token operator">-</span>cmd <span class="token operator">--</span>query<span class="token operator">-</span>port<span class="token operator">=</span><span class="token number">8080</span><span class="token operator">/</span>tcp
<span class="token number">11.</span> # 开放<span class="token number">80</span>端口
<span class="token number">12.</span> firewall<span class="token operator">-</span>cmd <span class="token operator">--</span>permanent <span class="token operator">--</span>add<span class="token operator">-</span>port<span class="token operator">=</span><span class="token number">80</span><span class="token operator">/</span>tcp
<span class="token number">13.</span> #移除端口
<span class="token number">14.</span> firewall<span class="token operator">-</span>cmd <span class="token operator">--</span>permanent <span class="token operator">--</span>remove<span class="token operator">-</span>port<span class="token operator">=</span><span class="token number">8080</span><span class="token operator">/</span>tcp
<span class="token number">15.</span> # 重启防火墙<span class="token punctuation">(</span>修改配置后要重启防火墙<span class="token punctuation">)</span>
<span class="token number">16.</span> firewall<span class="token operator">-</span>cmd <span class="token operator">--</span>reload

<span class="token number">17.</span> # 参数详解
 <span class="token number">1.</span> firewall<span class="token operator">-</span>cmd <span class="token operator">:</span>是<span class="token class-name">Linux</span>提供的操作firewall的一个工具<span class="token punctuation">;</span>
 <span class="token number">2.</span> <span class="token operator">--</span>permanent <span class="token operator">:</span> 表示设置为持久 <span class="token punctuation">;</span>
 <span class="token number">3.</span> <span class="token operator">--</span>add<span class="token operator">-</span>port <span class="token operator">:</span> 标识添加的端口 <span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2、nginx命令" tabindex="-1"><a class="header-anchor" href="#_2、nginx命令"><span>②、Nginx命令</span></a></h3><blockquote><p>Nginx常用命令</p></blockquote><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token number">1.</span> cd <span class="token operator">/</span>usr<span class="token operator">/</span>local<span class="token operator">/</span>nginx<span class="token operator">/</span>sbin
<span class="token number">2.</span> <span class="token punctuation">.</span>/nginx 启动
<span class="token number">3.</span> <span class="token punctuation">.</span>/nginx <span class="token operator">-</span>s stop 停止
<span class="token number">4.</span> <span class="token punctuation">.</span>/nginx <span class="token operator">-</span>s quit 安全退出
<span class="token number">5.</span> <span class="token punctuation">.</span>/nginx <span class="token operator">-</span>s reload 重新加载配置文件
<span class="token number">6.</span> ps <span class="token operator">-</span>ef <span class="token operator">|</span> grep nginx 查看nginx进程
<span class="token number">7.</span> kill <span class="token operator">-</span><span class="token number">9</span> 进程号 杀死某进程
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_9、前后端分离部署nginx实战" tabindex="-1"><a class="header-anchor" href="#_9、前后端分离部署nginx实战"><span>9、前后端分离部署Nginx实战</span></a></h2><p>前端vue项目和后端spring boot项目都是部署在了服务器8.130.108.52。</p><h3 id="_1、前端部署准备工作" tabindex="-1"><a class="header-anchor" href="#_1、前端部署准备工作"><span>①、前端部署准备工作</span></a></h3><p>vue项目结构：</p><blockquote><p>request前端请求路径</p></blockquote>`,19),On={href:"https://imgse.com/i/p9CYXcQ",target:"_blank",rel:"noopener noreferrer"},Sn=n("img",{src:"https://s1.ax1x.com/2023/04/17/p9CYXcQ.md.png",alt:"p9CYXcQ.md.png",style:{zoom:"200%"}},null,-1),zn=n("blockquote",null,[n("p",null,"vue.config.js代理配置")],-1),Tn={href:"https://imgse.com/i/p9CYjXj",target:"_blank",rel:"noopener noreferrer"},$n=n("img",{src:"https://s1.ax1x.com/2023/04/17/p9CYjXj.md.png",alt:"p9CYjXj.md.png",style:{zoom:"200%"}},null,-1),Mn=n("h3",{id:"_2、步骤",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_2、步骤"},[n("span",null,"②、步骤")])],-1),In=n("p",null,"将vue项目打包后，生成一个dist目录。",-1),Hn=n("p",null,"将dist目录下的文件拷贝放到nginx目录下的html下。",-1),Ln=n("blockquote",null,[n("p",null,"nginx配置文件")],-1),Pn={href:"https://imgse.com/i/p9CYO1g",target:"_blank",rel:"noopener noreferrer"},En=n("img",{src:"https://s1.ax1x.com/2023/04/17/p9CYO1g.md.png",alt:"p9CYO1g.md.png",style:{zoom:"200%"}},null,-1),Fn=n("h3",{id:"_3、后端部署",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_3、后端部署"},[n("span",null,"③、后端部署")])],-1),Rn=n("p",null,"通过命令 java -jar 直接部署在8.130.108.52的后台即可。",-1);function Bn(Yn,Gn){const s=p("ExternalLinkIcon");return o(),l("div",null,[c,n("p",null,[n("a",r,[u,a(s)])]),d,n("figure",null,[n("a",m,[v,a(s)]),k]),b,n("p",null,[n("a",g,[h,a(s)])]),_,x,f,n("p",null,[n("a",y,[j,a(s)])]),w,q,n("p",null,[n("a",N,[C,a(s)])]),O,n("p",null,[n("a",S,[z,a(s)])]),T,$,n("p",null,[n("a",M,[I,a(s)])]),H,n("figure",null,[n("a",L,[P,a(s)]),E]),F,n("p",null,[n("a",R,[B,a(s)])]),Y,G,J,V,Z,A,D,n("p",null,[n("a",Q,[X,a(s)])]),U,n("p",null,[n("a",W,[K,a(s)])]),nn,sn,n("p",null,[n("a",an,[en,a(s)])]),tn,n("figure",null,[n("a",pn,[on,a(s)]),ln]),cn,rn,un,dn,n("figure",null,[n("a",mn,[vn,a(s)]),kn]),bn,gn,hn,_n,n("figure",null,[n("a",xn,[fn,a(s)]),yn]),jn,n("figure",null,[n("a",wn,[qn,a(s)]),Nn]),Cn,n("p",null,[n("a",On,[Sn,a(s)])]),zn,n("p",null,[n("a",Tn,[$n,a(s)])]),Mn,In,Hn,Ln,n("p",null,[n("a",Pn,[En,a(s)])]),Fn,Rn])}const Zn=t(i,[["render",Bn],["__file","nginx.html.vue"]]),An=JSON.parse('{"path":"/posts/%E8%BF%90%E7%BB%B4/nginx.html","title":"Nginx快速入门","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2022-01-12T00:00:00.000Z","category":["运维"],"tag":["nginx"],"star":true,"sticky":true,"description":"Nginx快速入门 序言 源码：https://trac.nginx.org/nginx/browser 官网：http://www.nginx.org/ Nginx是lgor Sysoev为俄罗斯访问量第二的 rambler.ru 站点设计开发的。从2004年发布至今，凭借开源的力量，已经接近成熟与完善。 Nginx功能丰富，可作为HTTP服务器，也...","head":[["meta",{"property":"og:url","content":"https://swx08.github.io/vuepress/posts/%E8%BF%90%E7%BB%B4/nginx.html"}],["meta",{"property":"og:site_name","content":"文学博客"}],["meta",{"property":"og:title","content":"Nginx快速入门"}],["meta",{"property":"og:description","content":"Nginx快速入门 序言 源码：https://trac.nginx.org/nginx/browser 官网：http://www.nginx.org/ Nginx是lgor Sysoev为俄罗斯访问量第二的 rambler.ru 站点设计开发的。从2004年发布至今，凭借开源的力量，已经接近成熟与完善。 Nginx功能丰富，可作为HTTP服务器，也..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://s1.ax1x.com/2023/04/16/p99dc38.md.jpg"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"Nginx快速入门"}],["meta",{"property":"article:author","content":"sixkey"}],["meta",{"property":"article:tag","content":"nginx"}],["meta",{"property":"article:published_time","content":"2022-01-12T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Nginx快速入门\\",\\"image\\":[\\"https://s1.ax1x.com/2023/04/16/p99dc38.md.jpg\\",\\"https://s1.ax1x.com/2023/04/16/p99OhNj.png\\",\\"https://s1.ax1x.com/2023/04/16/p9CZatI.md.jpg\\",\\"https://s1.ax1x.com/2023/04/17/p9CMS7F.png\\",\\"https://s1.ax1x.com/2023/04/17/p9CM9k4.md.jpg\\",\\"https://s1.ax1x.com/2023/04/17/p9CMCtJ.md.jpg\\"],\\"datePublished\\":\\"2022-01-12T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"sixkey\\",\\"url\\":\\"https://swx08.github.io\\"}]}"]]},"headers":[{"level":2,"title":"序言","slug":"序言","link":"#序言","children":[]},{"level":2,"title":"1、Nginx常用功能","slug":"_1、nginx常用功能","link":"#_1、nginx常用功能","children":[]},{"level":2,"title":"2、web缓存","slug":"_2、web缓存","link":"#_2、web缓存","children":[]},{"level":2,"title":"3、Nginx配置文件结构","slug":"_3、nginx配置文件结构","link":"#_3、nginx配置文件结构","children":[]},{"level":2,"title":"4、反向代理实例","slug":"_4、反向代理实例","link":"#_4、反向代理实例","children":[{"level":4,"title":"①、反向代理实例1","slug":"_1、反向代理实例1","link":"#_1、反向代理实例1","children":[]},{"level":4,"title":"②、反向代理实例2","slug":"_2、反向代理实例2","link":"#_2、反向代理实例2","children":[]}]},{"level":2,"title":"5、负载均衡","slug":"_5、负载均衡","link":"#_5、负载均衡","children":[{"level":4,"title":"①、介绍","slug":"_1、介绍","link":"#_1、介绍","children":[]},{"level":4,"title":"②、实例","slug":"_2、实例","link":"#_2、实例","children":[]}]},{"level":2,"title":"6、动静分离","slug":"_6、动静分离","link":"#_6、动静分离","children":[{"level":4,"title":"①、介绍","slug":"_1、介绍-1","link":"#_1、介绍-1","children":[]},{"level":4,"title":"②、实例","slug":"_2、实例-1","link":"#_2、实例-1","children":[]}]},{"level":2,"title":"7、高可用","slug":"_7、高可用","link":"#_7、高可用","children":[{"level":3,"title":"①、引言","slug":"_1、引言","link":"#_1、引言","children":[]}]},{"level":2,"title":"8、Nginx常用命令","slug":"_8、nginx常用命令","link":"#_8、nginx常用命令","children":[{"level":3,"title":"①、Linux命令","slug":"_1、linux命令","link":"#_1、linux命令","children":[]},{"level":3,"title":"②、Nginx命令","slug":"_2、nginx命令","link":"#_2、nginx命令","children":[]}]},{"level":2,"title":"9、前后端分离部署Nginx实战","slug":"_9、前后端分离部署nginx实战","link":"#_9、前后端分离部署nginx实战","children":[{"level":3,"title":"①、前端部署准备工作","slug":"_1、前端部署准备工作","link":"#_1、前端部署准备工作","children":[]},{"level":3,"title":"②、步骤","slug":"_2、步骤","link":"#_2、步骤","children":[]},{"level":3,"title":"③、后端部署","slug":"_3、后端部署","link":"#_3、后端部署","children":[]}]}],"git":{},"readingTime":{"minutes":11.36,"words":3408},"filePathRelative":"posts/运维/nginx.md","localizedDate":"2022年1月12日","excerpt":"\\n<h2>序言</h2>\\n<p>源码：https://trac.nginx.org/nginx/browser</p>\\n<p>官网：http://www.nginx.org/</p>\\n<p>Nginx是lgor Sysoev为俄罗斯访问量第二的 rambler.ru 站点设计开发的。从2004年发布至今，凭借开源的力量，已经接近成熟与完善。</p>\\n<p>Nginx功能丰富，可作为HTTP服务器，也可作为反向代理服务器，邮件服务器。支持FastCGI、SSL、Virtual Host、URL Rewrite、Gzip等功能。并且支持很多第三方的模块扩展。</p>\\n<p>Nginx的稳定性、功能集、示例配置文件和低系统资源的消耗让他后来居上，在全球活跃的网站中有12.18%的使用比率，大约为2220万个网站。</p>","autoDesc":true}');export{Zn as comp,An as data};
