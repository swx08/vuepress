import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,a as t}from"./app-DCsLG_oX.js";const p={},e=t(`<h1 id="uniapp" tabindex="-1"><a class="header-anchor" href="#uniapp"><span>Uniapp</span></a></h1><h2 id="_1、tabbar底部不显示原因" tabindex="-1"><a class="header-anchor" href="#_1、tabbar底部不显示原因"><span><strong>1、tabbar底部不显示原因</strong></span></a></h2><p><mark><strong>tabbar的list里面配置的页面顺序要和pages中配置的页面顺序要一致才能显示</strong></mark></p><img src="https://pic.imgdb.cn/item/651993fbc458853aefc26d17.png" style="zoom:50%;"><img src="https://pic.imgdb.cn/item/65199471c458853aefc27ddf.png" style="zoom:50%;"><h2 id="_2、uniapp请求封装" tabindex="-1"><a class="header-anchor" href="#_2、uniapp请求封装"><span>2、Uniapp请求封装</span></a></h2><blockquote><p>1、设置请求基地址：base.js</p><p>2、封装请求和响应： request.js</p><p>3、应用在具体接口请求：index.js</p></blockquote><img src="https://pic.imgdb.cn/item/651a8cd8c458853aef09fc39.png" style="zoom:50%;"><h3 id="_1、base-js" tabindex="-1"><a class="header-anchor" href="#_1、base-js"><span><strong>1、base.js</strong></span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">//请求基地址</span>
<span class="token keyword">const</span> <span class="token constant">BASE_URL</span> <span class="token operator">=</span> <span class="token string">&quot;http://localhost:8600&quot;</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
	<span class="token constant">BASE_URL</span><span class="token operator">:</span> <span class="token constant">BASE_URL</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2、request-js" tabindex="-1"><a class="header-anchor" href="#_2、request-js"><span><strong>2、request.js</strong></span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">//const BASE_URL = \`http://localhost:8600\`;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> <span class="token constant">BASE_URL</span><span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./base.js&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">request</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">options</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span>reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
		uni<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
			<span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token constant">BASE_URL</span> <span class="token operator">+</span> options<span class="token punctuation">.</span>url<span class="token punctuation">,</span>
			<span class="token literal-property property">method</span><span class="token operator">:</span> options<span class="token punctuation">.</span>method <span class="token operator">||</span> <span class="token string">&#39;GET&#39;</span><span class="token punctuation">,</span>
			<span class="token comment">//header: {token: uni.getStorageSync(&#39;user&#39;) ? uni.getStorageSync(&#39;user&#39;).token : &#39;&#39;},</span>
			<span class="token literal-property property">data</span><span class="token operator">:</span> options<span class="token punctuation">.</span>data <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
			<span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
				<span class="token keyword">const</span> data <span class="token operator">=</span> res<span class="token punctuation">.</span>data
				<span class="token comment">//无权限</span>
				<span class="token keyword">if</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token string">&#39;401&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
					uni<span class="token punctuation">.</span><span class="token function">navigateTo</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
						<span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;/pages/my/my&#39;</span>
					<span class="token punctuation">}</span><span class="token punctuation">)</span>
				<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>code <span class="token operator">!==</span> <span class="token string">&#39;200&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
					uni<span class="token punctuation">.</span><span class="token function">showToast</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
						<span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span>
						<span class="token literal-property property">title</span><span class="token operator">:</span> data<span class="token punctuation">.</span>message
					<span class="token punctuation">}</span><span class="token punctuation">)</span>
				<span class="token punctuation">}</span>
				<span class="token function">resolve</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
			<span class="token punctuation">}</span><span class="token punctuation">,</span>
			<span class="token function-variable function">fail</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
				uni<span class="token punctuation">.</span><span class="token function">showToast</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
					<span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span>
					<span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;系统错误！&#39;</span>
				<span class="token punctuation">}</span><span class="token punctuation">)</span>
				<span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3、index-js" tabindex="-1"><a class="header-anchor" href="#_3、index-js"><span><strong>3、index.js</strong></span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>request<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/utils/request.js&#39;</span>
 
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">getImage</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">//登录</span>
	<span class="token keyword">return</span> <span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
		<span class="token literal-property property">url</span><span class="token operator">:</span><span class="token string">&#39;/api/image&#39;</span><span class="token punctuation">,</span>
		<span class="token literal-property property">method</span><span class="token operator">:</span><span class="token string">&#39;GET&#39;</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4、具体应用在index-vue中进行请求" tabindex="-1"><a class="header-anchor" href="#_4、具体应用在index-vue中进行请求"><span><strong>4、具体应用在index.vue中进行请求</strong></span></a></h3><img src="https://pic.imgdb.cn/item/651a8dccc458853aef0a1f7a.png" style="zoom:50%;"><img src="https://pic.imgdb.cn/item/651a8e1dc458853aef0a2840.png" style="zoom:50%;"><h2 id="_3、setup语法中使用uniapp的onload生命周期函数" tabindex="-1"><a class="header-anchor" href="#_3、setup语法中使用uniapp的onload生命周期函数"><span>3、setUp语法中使用uniapp的onLoad生命周期函数</span></a></h2><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">//导入onLoad函数</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>
		onLoad
	<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@dcloudio/uni-app&quot;</span><span class="token punctuation">;</span>
	<span class="token function">onLoad</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4、文件上传" tabindex="-1"><a class="header-anchor" href="#_4、文件上传"><span>4、文件上传</span></a></h2><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onChangeAvatar<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
								<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>uni-forms-item</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>头像<span class="token punctuation">&quot;</span></span> <span class="token attr-name">required</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>avatar<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
									<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>image</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span> <span class="token property">border-radius</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span> <span class="token attr-name">mode</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>aspectFill<span class="token punctuation">&quot;</span></span>
										<span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>url<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>image</span><span class="token punctuation">&gt;</span></span>
								<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>uni-forms-item</span><span class="token punctuation">&gt;</span></span>
								<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>text</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">margin-left</span><span class="token punctuation">:</span> 65px<span class="token punctuation">;</span><span class="token property">font-size</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>上传头像<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>text</span><span class="token punctuation">&gt;</span></span>
							<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> url <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">function</span> <span class="token function">onChangeAvatar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">//调用小程序的接口</span>
		uni<span class="token punctuation">.</span><span class="token function">chooseMedia</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
			<span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
			<span class="token literal-property property">mediaType</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;image&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
			<span class="token function">success</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token comment">//获取本地路径</span>
				<span class="token keyword">const</span> <span class="token punctuation">{</span>
					tempFilePath
				<span class="token punctuation">}</span> <span class="token operator">=</span> res<span class="token punctuation">.</span>tempFiles<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
				<span class="token comment">//文件上传接口</span>
				uni<span class="token punctuation">.</span><span class="token function">uploadFile</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
					<span class="token comment">//文件上传请求路径</span>
					<span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;http://localhost:8600/common/upload&#39;</span><span class="token punctuation">,</span>
					<span class="token literal-property property">filePath</span><span class="token operator">:</span> tempFilePath<span class="token punctuation">,</span>
					<span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;file&#39;</span><span class="token punctuation">,</span>
					<span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
						<span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>statusCode <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
							<span class="token keyword">const</span> avatar <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span>data<span class="token punctuation">;</span>
							url<span class="token punctuation">.</span>value <span class="token operator">=</span> avatar<span class="token punctuation">;</span>
							userFormData<span class="token punctuation">.</span>value<span class="token punctuation">.</span>avatar <span class="token operator">=</span> avatar<span class="token punctuation">;</span>
						<span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
							uni<span class="token punctuation">.</span><span class="token function">showToast</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
								<span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;上传头像出现异常&quot;</span><span class="token punctuation">,</span>
								<span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token string">&#39;none&#39;</span>
							<span class="token punctuation">}</span><span class="token punctuation">)</span>
						<span class="token punctuation">}</span>
					<span class="token punctuation">}</span>
				<span class="token punctuation">}</span><span class="token punctuation">)</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5、使用pinia作数据状态管理" tabindex="-1"><a class="header-anchor" href="#_5、使用pinia作数据状态管理"><span>5、使用Pinia作数据状态管理</span></a></h2><p><strong><mark>说明：Uniapp内置了Pinia，可以直接使用</mark></strong></p><blockquote><p><strong>具体步骤如下</strong></p></blockquote><ul><li>在项目目录中新建stores,在此目录下创建一个js文件夹，具体使用，我这里命名为user.js用来存储用户登录后返回的用户信息</li><li>在main.js文件中引入</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createSSRApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> Pinia <span class="token keyword">from</span> <span class="token string">&#39;pinia&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">createApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createSSRApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">;</span>
	app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Pinia<span class="token punctuation">.</span><span class="token function">createPinia</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token punctuation">{</span>
		app<span class="token punctuation">,</span>
		Pinia<span class="token punctuation">,</span> <span class="token comment">// 此处必须将 Pinia 返回</span>
	<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>user.js文件</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;pinia&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> userStore <span class="token operator">=</span> <span class="token function">defineStore</span><span class="token punctuation">(</span><span class="token string">&#39;user&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	<span class="token keyword">const</span> userInfo <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token punctuation">{</span> userInfo <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>在需要数据的页面引入即可：引入到login页面，保存用户登录后后台返回的用户信息，使用Pinia作全局状态管理，方便在任何一个组件中使用到用户信息。</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>
		userStore
	<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/stores/user.js&#39;</span><span class="token punctuation">;</span>
	<span class="token keyword">const</span> user <span class="token operator">=</span> <span class="token function">userStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">doLogin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		valiForm<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">validate</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">valid</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>valid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token comment">//提交预约数据</span>
				<span class="token function">login</span><span class="token punctuation">(</span>userData<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
					<span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
						<span class="token comment">//全局保存</span>
						user<span class="token punctuation">.</span>userInfo<span class="token punctuation">.</span>value <span class="token operator">=</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>user<span class="token punctuation">;</span>
					<span class="token punctuation">}</span>
					<span class="token punctuation">}</span>
				<span class="token punctuation">}</span><span class="token punctuation">)</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>在需要用到用户信息的组件中引入，然后直接取值使用即可</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>
		userStore
	<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/stores/user.js&#39;</span><span class="token punctuation">;</span>
	<span class="token comment">//引入Pinia中保存的user信息</span>
	<span class="token keyword">const</span> user <span class="token operator">=</span> <span class="token function">userStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//用户名</span>
	<span class="token keyword">const</span> name <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//头像</span>
	<span class="token keyword">const</span> avatar <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//从Pinia存储获取用户登录信息</span>
	<span class="token keyword">function</span> <span class="token function">getUserInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		name<span class="token punctuation">.</span>value <span class="token operator">=</span> user<span class="token punctuation">.</span>userInfo<span class="token punctuation">.</span>value<span class="token punctuation">.</span>name<span class="token punctuation">;</span>
		avatar<span class="token punctuation">.</span>value <span class="token operator">=</span> user<span class="token punctuation">.</span>userInfo<span class="token punctuation">.</span>value<span class="token punctuation">.</span>avatar<span class="token punctuation">;</span>
	<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,33),o=[e];function c(i,l){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","Uniapp开发.html.vue"]]),d=JSON.parse('{"path":"/posts/%E5%89%8D%E7%AB%AF/Uniapp%E5%BC%80%E5%8F%91.html","title":"Uniapp","lang":"zh-CN","frontmatter":{"tag":["Uniapp"],"category":["前端"],"date":"2022-01-12T00:00:00.000Z","star":true,"sticky":true,"description":"Uniapp 1、tabbar底部不显示原因 tabbar的list里面配置的页面顺序要和pages中配置的页面顺序要一致才能显示 2、Uniapp请求封装 1、设置请求基地址：base.js 2、封装请求和响应： request.js 3、应用在具体接口请求：index.js 1、base.js 2、request.js 3、index.js 4、具...","head":[["meta",{"property":"og:url","content":"https://swx08.github.io/vuepress/posts/%E5%89%8D%E7%AB%AF/Uniapp%E5%BC%80%E5%8F%91.html"}],["meta",{"property":"og:site_name","content":"文学博客"}],["meta",{"property":"og:title","content":"Uniapp"}],["meta",{"property":"og:description","content":"Uniapp 1、tabbar底部不显示原因 tabbar的list里面配置的页面顺序要和pages中配置的页面顺序要一致才能显示 2、Uniapp请求封装 1、设置请求基地址：base.js 2、封装请求和响应： request.js 3、应用在具体接口请求：index.js 1、base.js 2、request.js 3、index.js 4、具..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"sixkey"}],["meta",{"property":"article:tag","content":"Uniapp"}],["meta",{"property":"article:published_time","content":"2022-01-12T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Uniapp\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-01-12T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"sixkey\\",\\"url\\":\\"https://swx08.github.io\\"}]}"]]},"headers":[{"level":2,"title":"1、tabbar底部不显示原因","slug":"_1、tabbar底部不显示原因","link":"#_1、tabbar底部不显示原因","children":[]},{"level":2,"title":"2、Uniapp请求封装","slug":"_2、uniapp请求封装","link":"#_2、uniapp请求封装","children":[{"level":3,"title":"1、base.js","slug":"_1、base-js","link":"#_1、base-js","children":[]},{"level":3,"title":"2、request.js","slug":"_2、request-js","link":"#_2、request-js","children":[]},{"level":3,"title":"3、index.js","slug":"_3、index-js","link":"#_3、index-js","children":[]},{"level":3,"title":"4、具体应用在index.vue中进行请求","slug":"_4、具体应用在index-vue中进行请求","link":"#_4、具体应用在index-vue中进行请求","children":[]}]},{"level":2,"title":"3、setUp语法中使用uniapp的onLoad生命周期函数","slug":"_3、setup语法中使用uniapp的onload生命周期函数","link":"#_3、setup语法中使用uniapp的onload生命周期函数","children":[]},{"level":2,"title":"4、文件上传","slug":"_4、文件上传","link":"#_4、文件上传","children":[]},{"level":2,"title":"5、使用Pinia作数据状态管理","slug":"_5、使用pinia作数据状态管理","link":"#_5、使用pinia作数据状态管理","children":[]}],"git":{},"readingTime":{"minutes":2.43,"words":730},"filePathRelative":"posts/前端/Uniapp开发.md","localizedDate":"2022年1月12日","excerpt":"\\n<h2><strong>1、tabbar底部不显示原因</strong></h2>\\n<p><mark><strong>tabbar的list里面配置的页面顺序要和pages中配置的页面顺序要一致才能显示</strong></mark></p>\\n<img src=\\"https://pic.imgdb.cn/item/651993fbc458853aefc26d17.png\\" style=\\"zoom: 50%;\\">\\n<img src=\\"https://pic.imgdb.cn/item/65199471c458853aefc27ddf.png\\" style=\\"zoom:50%;\\">\\n<h2>2、Uniapp请求封装</h2>","autoDesc":true}');export{k as comp,d as data};
