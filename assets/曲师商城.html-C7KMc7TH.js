import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as l,c,b as s,d as n,e,a}from"./app-DCsLG_oX.js";const i={},u=a(`<h1 id="曲师商城" tabindex="-1"><a class="header-anchor" href="#曲师商城"><span>曲师商城</span></a></h1><h2 id="_1、项目需求分析" tabindex="-1"><a class="header-anchor" href="#_1、项目需求分析"><span>1、项目需求分析</span></a></h2><h3 id="用户需求分析" tabindex="-1"><a class="header-anchor" href="#用户需求分析"><span>用户需求分析</span></a></h3><ul><li>注册和登录功能： <ul><li>用户可以通过填写注册表单完成账号注册。</li><li>用户可以使用注册的账号和密码进行登录。</li><li>提供忘记密码功能，用户可以通过邮箱或手机验证码重置密码。</li></ul></li><li>商品浏览和搜索功能： <ul><li>用户可以浏览商品列表，查看商品的基本信息、价格、图片等。</li><li>用户可以通过关键词搜索商品，系统返回相关商品的结果。</li></ul></li><li>购物车管理功能： <ul><li>用户可以将感兴趣的商品添加到购物车。</li><li>用户可以修改购物车中商品的数量。</li><li>用户可以删除购物车中的商品。</li><li>用户可以清空购物车。</li></ul></li><li>下单和支付功能： <ul><li>用户可以选择购物车中的商品完成下单。</li><li>用户需要填写配送地址和选择支付方式。</li><li>系统生成订单并显示订单详情。</li><li>用户进行支付操作，可以选择在线支付或货到付款。</li></ul></li><li>查看订单状态功能： <ul><li>用户可以查看订单的物流信息和状态，了解订单的进展情况。</li><li>用户可以查看订单的详细信息，如商品清单、收货地址等。</li></ul></li><li>取消订单功能： <ul><li>用户可以在一定条件下取消未发货的订单，如退货期未过等。</li></ul></li><li>评价和回复功能： <ul><li>用户可以对购买的商品进行评价，并选择评分和文字评论。</li><li>商家可以回复用户的评价。</li></ul></li><li>优惠券和积分功能： <ul><li>用户可以领取优惠券和积分，用于抵扣购物金额或兑换商品。</li></ul></li><li>促销活动功能： <ul><li>商家可以发布促销活动，如限时折扣、满减等。</li><li>用户可以参与促销活动，享受相应的优惠。</li></ul></li><li>客服支持功能： <ul><li>提供在线客服功能，解答用户的问题和处理售后问题。</li></ul></li><li>搜索和推荐功能： <ul><li>用户可以通过关键词搜索商品，系统根据用户的浏览和购买记录推荐相关商品。</li></ul></li><li>移动端适配功能： <ul><li>商城需要适配不同的移动设备，提供良好的移动端用户体验。</li></ul></li></ul><p><mark>商家入驻代办</mark></p><h3 id="商家需求分析" tabindex="-1"><a class="header-anchor" href="#商家需求分析"><span>商家需求分析</span></a></h3><ul><li>商户入驻功能： <ul><li>商家可以申请入驻商城，并在平台上销售自己的商品。</li><li>商家需要提供相关的营业执照、品牌授权等信息进行认证。</li></ul></li><li>商品管理功能： <ul><li>商家可以发布、修改、删除自己的商品。</li><li>商家可以设置商品的基本信息、价格、库存等。</li><li>商家可以管理商品分类和品牌信息。</li></ul></li><li>订单管理功能： <ul><li>商家可以查看自己店铺的订单列表，包括待处理订单和已完成订单。</li><li>商家可以接单、发货、退款等操作。</li></ul></li><li>物流管理功能： <ul><li>商家可以更新自己店铺的物流信息，如发货状态、快递单号等。</li></ul></li></ul><h2 id="_2、技术选型" tabindex="-1"><a class="header-anchor" href="#_2、技术选型"><span>2、技术选型</span></a></h2><p>针对曲师商城项目，考虑以下技术选型：</p><ol><li>前端开发框架：Vue主流的前端框架。</li><li>后端开发语言：Java常用的后端开发语言。</li><li>数据库：MySQL常见的关系型型数据库。</li><li>服务器端框架：Spring Boot、SpringCloud常用的后端框架，简化开发流程和提高开发效率。</li><li>缓存技术：Redis常用的缓存技术，用于提高系统性能和减轻数据库压力。</li><li>消息队列：RabbitMQ常用的消息队列技术，用于处理异步任务和解耦系统模块之间的通信。</li><li>搜索引擎：Elasticsearch用于全文搜索和数据分析的搜索引擎技术。</li><li>版本控制工具：Git作为代码版本控制工具，用于团管理代码的版本。</li><li>容器化技术：Docker用于将应用打包成容器，实现快速部署和可移植性。</li><li>云服务：根据实际需求选择合适的云服务提供商（如AWS、阿里云、腾讯云等），用于部署和托管商城系统。</li></ol><h2 id="_3、项目设计" tabindex="-1"><a class="header-anchor" href="#_3、项目设计"><span>3、项目设计</span></a></h2><h4 id="用户模块" tabindex="-1"><a class="header-anchor" href="#用户模块"><span>用户模块</span></a></h4><h5 id="系统架构设计" tabindex="-1"><a class="header-anchor" href="#系统架构设计"><span>系统架构设计：</span></a></h5><ul><li>前端采用React框架，使用Redux进行状态管理。</li><li>后端采用Node.js和Express框架，使用MongoDB作为数据库。</li><li>使用Nginx作为反向代理服务器，负载均衡和静态资源处理。</li><li>使用Redis作为缓存技术，提高系统性能。</li><li>使用RabbitMQ作为消息队列，处理异步任务和解耦系统模块之间的通信。</li></ul><h5 id="_1-功能模块设计" tabindex="-1"><a class="header-anchor" href="#_1-功能模块设计"><span>（1）功能模块设计：</span></a></h5><ul><li>用户模块：包括用户注册、登录、个人信息管理等功能。</li><li>商品模块：包括商品的添加、修改、删除、查询等功能。</li><li>订单模块：包括下单、支付、查看订单状态等功能。</li><li>物流模块：用于商家更新订单的物流信息。</li><li>评价模块：用户可以对购买的商品进行评价，商家可以回复评价。</li><li>优惠券和积分模块：用户可以领取优惠券和积分，用于抵扣购物金额或兑换商品。</li><li>促销活动模块：商家可以发布促销活动，如限时折扣、满减等。</li><li>客服支持模块：提供在线客服功能，解答用户的问题和处理售后问题。</li><li>搜索和推荐模块：用户可以通过关键词搜索商品，系统会根据用户的浏览和购买记录推荐相关商品。</li><li>数据统计和分析模块：统计商城的访问量、销售额等数据，为商家提供数据分析和决策支持。</li></ul><h5 id="_2-数据库设计" tabindex="-1"><a class="header-anchor" href="#_2-数据库设计"><span>（2）数据库设计：</span></a></h5><ul><li>用户表：存储用户的基本信息，如用户名、密码、邮箱等。</li><li>商品表：存储商品的基本信息，如商品名称、价格、库存等。</li><li>分类表：存储商品的分类信息，如服装、电子产品等。</li><li>品牌表：存储商品的品牌信息，如Nike、Apple等。</li><li>订单表：存储订单的基本信息，如订单号、下单时间、支付状态等。</li><li>物流表：存储订单的物流信息，如物流公司、运单号等。</li><li>评价表：存储用户对商品的评价信息，如评分、评论内容等。</li><li>优惠券表：存储优惠券的基本信息，如优惠码、面额等。</li><li>积分表：存储用户的积分信息，如积分余额、获取途径等。</li></ul><h5 id="_3-接口设计" tabindex="-1"><a class="header-anchor" href="#_3-接口设计"><span>（3）接口设计：</span></a></h5><ul><li>用户接口：包括注册接口、登录接口、个人信息接口等。</li><li>商品接口：包括添加商品接口、修改商品接口、删除商品接口、查询商品接口等。</li><li>订单接口：包括下单接口、支付接口、查看订单接口等。</li><li>物流接口：用于商家更新订单的物流信息接口。</li><li>评价接口：包括添加评价接口、回复评价接口等。</li><li>优惠券和积分接口：包括领取优惠券接口、使用优惠券接口、积分获取接口等。</li><li>促销活动接口：包括发布促销活动接口、参与促销活动接口等。</li><li>客服支持接口：提供在线客服功能的相关接口。</li><li>搜索和推荐接口：包括商品搜索接口、推荐商品接口等。</li></ul><h4 id="商家模块" tabindex="-1"><a class="header-anchor" href="#商家模块"><span>商家模块</span></a></h4><ol><li>商家注册与认证流程：明确商家注册的步骤和要求，如填写公司信息、上传证件等。同时，设计一个认证流程，确保商家的身份和资质真实有效。</li><li>商品管理功能：细化商品管理的界面和操作流程，包括添加商品、编辑商品信息、删除商品等功能。可以考虑提供批量操作和导入导出功能，方便商家进行大量商品的管理。</li><li>订单管理功能：细化订单管理的界面和操作流程，包括查看订单详情、接单、发货、退款等功能。可以考虑提供订单筛选和排序功能，方便商家快速找到需要处理的订单。</li><li>物流管理功能：细化物流管理的界面和操作流程，包括查询物流状态、更新物流信息等功能。可以考虑提供物流公司选择和运单号生成功能，方便商家与物流公司进行交互。</li><li>评价管理功能：细化评价管理的界面和操作流程，包括查看买家的评价、回复评价等功能。可以考虑提供评价分类和搜索功能，方便商家查找和管理评价信息。</li><li>数据统计与分析功能：细化数据统计与分析的界面和报表展示，包括销售额统计、订单量统计、用户评价统计等功能。可以考虑提供图表展示和数据导出功能，方便商家进行数据分析和决策。</li><li>营销活动支持功能：细化营销活动的设置和管理流程，包括优惠券、满减活动等。可以考虑提供活动规则设置、活动发布和推广等功能，方便商家进行营销活动的管理和执行。</li><li>客服支持功能：细化客服支持的界面和沟通方式，包括在线聊天工具、电话支持等。可以考虑提供智能客服机器人和问题解答库，提高客服效率和质量。</li></ol><h1 id="技术积累" tabindex="-1"><a class="header-anchor" href="#技术积累"><span>技术积累</span></a></h1><h2 id="后端" tabindex="-1"><a class="header-anchor" href="#后端"><span>后端</span></a></h2><h3 id="一、gateway路由路径匹配" tabindex="-1"><a class="header-anchor" href="#一、gateway路由路径匹配"><span>一、gateway路由路径匹配</span></a></h3><blockquote><p><strong>匹配多个路径</strong></p></blockquote><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code>      <span class="token key atrule">routes</span><span class="token punctuation">:</span>
        <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> service<span class="token punctuation">-</span>user
          <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//service<span class="token punctuation">-</span>user
          <span class="token key atrule">predicates</span><span class="token punctuation">:</span>
            <span class="token punctuation">-</span> Path= /common/<span class="token important">**</span><span class="token punctuation">,</span>/admin/<span class="token important">**</span>  <span class="token comment">#匹配多个路径</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="二、redis缓存" tabindex="-1"><a class="header-anchor" href="#二、redis缓存"><span><strong>二、redis缓存</strong></span></a></h3><h4 id="_1、缓存更新策略" tabindex="-1"><a class="header-anchor" href="#_1、缓存更新策略"><span><strong>1、缓存更新策略</strong></span></a></h4><table><thead><tr><th></th><th>内存淘汰</th><th>超时剔除</th><th>主动更新</th></tr></thead><tbody><tr><td>说明</td><td>不用自己维护，利用Redis的内存淘汰机制，当内存不足时自动淘汰部分数据。下次查询时更新缓存。</td><td>给缓存数据添加TTL时间，到期后自动删除缓存。下次查询时更新缓存。</td><td>编写业务逻辑，在修改数据库的同时，更新缓存。</td></tr><tr><td>一致性</td><td>差</td><td>一般</td><td>好</td></tr><tr><td>维护成本</td><td>无</td><td>低</td><td>高</td></tr></tbody></table><p><strong><mark>业务场景</mark></strong></p><ul><li>低一致性需求：使用内存淘汰机制。</li><li>高一致性需求：主动更新，并以超时剔除作为兜底方案。</li></ul><p><strong><mark>三个问题需要考虑：</mark></strong></p><p>（1）删除缓存还是更新缓存？</p><ul><li>更新缓存：每次更新数据库都更新缓存，无效写操作较多</li><li>删除缓存：更新数据库时让缓存失效，查询时再更新缓存（建议）</li></ul><p>（2）如何保证缓存与数据库的操作的同时成功或失败？</p><ul><li>单体系统：将缓存与数据库操作放在一个事务</li><li>分布式系统：利用TCC等分布式事务方案</li></ul><p>（3）先操作缓存还是先操作数据库？</p><ul><li>先删除缓存，再操作数据库</li><li>先操作数据库，再删除缓存（建议）</li></ul><p><strong><mark>本项目使用主动更新 + 删除缓存 + 先操作数据库，再删除缓存</mark></strong></p><h4 id="_2、缓存三大问题解决方案" tabindex="-1"><a class="header-anchor" href="#_2、缓存三大问题解决方案"><span><strong>2、缓存三大问题解决方案</strong></span></a></h4><blockquote><p><strong>(1)、缓存穿透</strong></p><p><strong>（2）、缓存击穿</strong></p><p><strong>（3）、缓存雪崩</strong></p></blockquote><h5 id="缓存穿透" tabindex="-1"><a class="header-anchor" href="#缓存穿透"><span><strong><mark>缓存穿透</mark></strong></span></a></h5><p><strong>简单理解：<mark>缓存穿透</mark>是指客户端请求的数据在缓存中和数据库都不存在，这样缓存永远不会生效，这些请求都会打到数据库。</strong></p><img src="https://ice.frostsky.com/2024/03/05/8f30241f4a924a734157ba22a51bc72f.png" alt="8f30241f4a924a734157ba22a51bc72f.png" style="zoom:80%;"><p><strong><mark>解决方案</mark></strong></p><p><strong><mark>（1）缓存空对象</mark></strong></p><ul><li>优点：实现简单，维护方便</li><li>缺点： <ul><li>额外的内存消耗</li><li>可能造成短期的数据不一致</li></ul></li></ul><figure><img src="https://ice.frostsky.com/2024/03/05/2ed2ad626e4cf23bb5de7a205d98b513.png" alt="2ed2ad626e4cf23bb5de7a205d98b513.png" tabindex="0" loading="lazy"><figcaption>2ed2ad626e4cf23bb5de7a205d98b513.png</figcaption></figure><p><strong><mark>（2）布隆过滤器</mark></strong></p><ul><li>优点：内存占用较少，没有多余key</li><li>缺点： <ul><li>实现复杂</li><li>存在误判可能</li></ul></li></ul><figure><img src="https://ice.frostsky.com/2024/03/05/3765c356f0617e06ec5e94b65e44dca0.png" alt="3765c356f0617e06ec5e94b65e44dca0.png" tabindex="0" loading="lazy"><figcaption>3765c356f0617e06ec5e94b65e44dca0.png</figcaption></figure><p><strong><mark>本项目采用缓存空对象解决</mark></strong></p><p><strong>代码片段</strong></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token comment">//如果数据中不存在则缓存空对象返回,两分钟后过期</span>
                redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token class-name">GoodsConstant</span><span class="token punctuation">.</span><span class="token constant">GOODS</span> <span class="token operator">+</span> userId<span class="token punctuation">,</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span><span class="token class-name">RedisConstant</span><span class="token punctuation">.</span><span class="token constant">CACHE_NULL_EXPIRE</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">MINUTES</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>其他解决方案：</strong></p><ul><li>增强id的复杂度，避免被猜测id规律</li><li>做好数据的基础格式校验</li><li>加强用户权限校验</li><li>做好热点参数的限流</li></ul><h5 id="缓存雪崩" tabindex="-1"><a class="header-anchor" href="#缓存雪崩"><span><strong><mark>缓存雪崩</mark></strong></span></a></h5><p>**简单理解：<mark>缓存雪崩</mark>**是指同一时段大量的缓存key同时失效或者Redis服务宕机，导致大量请求到达数据库，带来巨大压力。</p><img src="https://ice.frostsky.com/2024/03/05/840e066d60bc1a94ddadea5a3cc1a817.png" alt="840e066d60bc1a94ddadea5a3cc1a817.png" style="zoom:80%;"><p><strong><mark>解决方案</mark></strong></p><ul><li>给不同的key的TTL添加随机值</li><li>利用Redis集群提高服务的可用性</li><li>给缓存业务添加降级限流策略</li><li>给业务添加多级缓存</li></ul><p><strong><mark>本项目使用给不同的key的TTL添加随机值</mark></strong></p><h5 id="缓存击穿" tabindex="-1"><a class="header-anchor" href="#缓存击穿"><span><strong><mark>缓存击穿</mark></strong></span></a></h5><p><strong>简单理解：<mark>缓存击穿问题</mark>也叫热点key问题，即使也给被<mark>高并发访问</mark>并且<mark>缓存重建页较复杂</mark>的key突然失效了，无数的请求访问会在瞬间给数据库带来巨大的冲击。</strong></p><img src="https://ice.frostsky.com/2024/03/05/31e844250335c6063d24e88449660556.png" alt="31e844250335c6063d24e88449660556.png" style="zoom:67%;"><p><strong><mark>解决方案</mark></strong></p><ul><li><strong>互斥锁</strong></li><li><strong>逻辑过期</strong></li></ul><table><thead><tr><th>解决方案</th><th>优点</th><th>缺点</th></tr></thead><tbody><tr><td>互斥锁</td><td>（1）没有额外的内存消耗。（2）保证一致性。（3）实现简单</td><td>（1）线程需要等待，性能受影响。（2）可能有死锁风险</td></tr><tr><td>逻辑过期</td><td>线程不需要等待，性能较好。</td><td>（1）有额外的内存消耗。（2）不保证一致性。（3）实现复杂</td></tr></tbody></table><p><strong><mark>互斥锁</mark></strong></p><img src="https://ice.frostsky.com/2024/03/05/61b82942c04d801283e35bb2dee7a490.png" alt="61b82942c04d801283e35bb2dee7a490.png" style="zoom:67%;"><p><strong>一下是一个简单的使用互斥锁解决的流程</strong></p><img src="https://ice.frostsky.com/2024/03/05/397072438d11e859412b812ed4856a3a.png" alt="397072438d11e859412b812ed4856a3a.png" style="zoom:67%;"><p><strong>获取互斥锁方法</strong></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
     * 获取锁方法
     * <span class="token keyword">@param</span> <span class="token parameter">key</span>
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">tryLock</span><span class="token punctuation">(</span><span class="token class-name">String</span> key<span class="token punctuation">,</span><span class="token class-name">Integer</span> userId<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">//获取锁，要对锁设置一个过期时间，防止某些异常导致死锁</span>
        <span class="token class-name">Boolean</span> flag <span class="token operator">=</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setIfAbsent</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> userId<span class="token punctuation">,</span> <span class="token class-name">RedisConstant</span><span class="token punctuation">.</span><span class="token constant">CACHE_LOCK_EXPIRE</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//如果为true则说明获取到了锁，若返回false则说明前面已经有线程获取到了锁</span>
        <span class="token keyword">return</span> <span class="token class-name">BooleanUtil</span><span class="token punctuation">.</span><span class="token function">isTrue</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>释放互斥锁方法</strong></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
     * 释放锁
     * <span class="token keyword">@param</span> <span class="token parameter">key</span>
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">unLock</span><span class="token punctuation">(</span><span class="token class-name">String</span> key<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">//直接删除锁的键即可</span>
        redisTemplate<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>核心代码</strong></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">GoodsDto</span><span class="token punctuation">&gt;</span></span> <span class="token function">getList</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> userId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//先去redis中查询是否有缓存的数据</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">GoodsDto</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">GoodsDtoList</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">GoodsDto</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">GoodsConstant</span><span class="token punctuation">.</span><span class="token constant">GOODS</span> <span class="token operator">+</span> userId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">CollectionUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token class-name">GoodsDtoList</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;命中了redis中的商品缓存数据，成功进入缓存---------------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token class-name">GoodsDtoList</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
            <span class="token comment">//未命中redis中的缓存数据</span>
            <span class="token class-name">String</span> lockKey <span class="token operator">=</span> <span class="token class-name">RedisConstant</span><span class="token punctuation">.</span><span class="token constant">GOODS_LOCK</span> <span class="token operator">+</span> userId<span class="token punctuation">;</span>
            <span class="token comment">//尝试获取锁</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token keyword">boolean</span> isLock <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">tryLock</span><span class="token punctuation">(</span>lockKey<span class="token punctuation">,</span> userId<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>isLock<span class="token punctuation">)</span><span class="token punctuation">{</span>
                    <span class="token comment">//未获取到锁,休眠一段时间等待前一个线程重建缓存</span>
                    <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token class-name">RedisConstant</span><span class="token punctuation">.</span><span class="token constant">THREAD_SLEEP</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment">//重新获取,递归</span>
                    <span class="token keyword">return</span> <span class="token function">getList</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token comment">//获取到了锁</span>
                <span class="token comment">//再去redis中查询是否有缓存的数据</span>
                <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">GoodsDto</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">GoodsList</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">GoodsDto</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">GoodsConstant</span><span class="token punctuation">.</span><span class="token constant">GOODS</span> <span class="token operator">+</span> userId<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">CollectionUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token class-name">GoodsList</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;命中了双重检测redis中的商品缓存数据，成功进入缓存---------------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">return</span> <span class="token class-name">GoodsList</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token comment">//根据商户id获取商户所属的店铺</span>
                <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Store</span><span class="token punctuation">&gt;</span></span> wrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                wrapper<span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span><span class="token string">&quot;user_id&quot;</span><span class="token punctuation">,</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Store</span><span class="token punctuation">&gt;</span></span> stores <span class="token operator">=</span> storeMapper<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span>wrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name">CollectionUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>stores<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                    <span class="token comment">//如果数据中不存在则缓存空对象返回来解决redis缓存穿透,两分钟后过期</span>
                    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserDto</span><span class="token punctuation">&gt;</span></span> dtoList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    dtoList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">UserDto</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token class-name">GoodsConstant</span><span class="token punctuation">.</span><span class="token constant">GOODS</span> <span class="token operator">+</span> userId<span class="token punctuation">,</span>dtoList<span class="token punctuation">,</span><span class="token class-name">RedisConstant</span><span class="token punctuation">.</span><span class="token constant">CACHE_NULL_EXPIRE</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">MINUTES</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
                    <span class="token comment">//进行缓存重建</span>
                    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">GoodsDto</span><span class="token punctuation">&gt;</span></span> goodsDtoList <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getGoodsDtoList</span><span class="token punctuation">(</span>stores<span class="token punctuation">,</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">return</span> goodsDtoList<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ServiceException</span><span class="token punctuation">(</span><span class="token class-name">ResponseEnum</span><span class="token punctuation">.</span><span class="token constant">ERROR</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token keyword">finally</span> <span class="token punctuation">{</span>
                <span class="token comment">//释放锁</span>
                <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">unLock</span><span class="token punctuation">(</span>lockKey<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong><mark>逻辑过期</mark></strong></p><img src="https://ice.frostsky.com/2024/03/05/4a8016d4ea953c618d68b72cb2a3fa99.png" alt="4a8016d4ea953c618d68b72cb2a3fa99.png" style="zoom:67%;"><h3 id="三、防止重复提交" tabindex="-1"><a class="header-anchor" href="#三、防止重复提交"><span><strong>三、防止重复提交</strong></span></a></h3><p><strong><mark>使用redis + lua脚本保证原子性操作</mark></strong></p><blockquote><p><strong>lua脚本</strong></p></blockquote><div class="language-lua line-numbers-mode" data-ext="lua" data-title="lua"><pre class="language-lua"><code><span class="token keyword">if</span><span class="token punctuation">(</span>redis<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span> KEYS<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">==</span> ARGV<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">then</span>
<span class="token keyword">return</span> redis<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token string">&#39;del&#39;</span><span class="token punctuation">,</span> KEYS<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">else</span> <span class="token keyword">return</span> <span class="token number">0</span> <span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>核心代码</strong></p></blockquote><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">DefaultRedisScript</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Boolean</span><span class="token punctuation">&gt;</span></span> <span class="token constant">REDIS_SCRIPT</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 静态代码块中初始化lua脚本
     */</span>
    <span class="token keyword">static</span> <span class="token punctuation">{</span>
        <span class="token constant">REDIS_SCRIPT</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultRedisScript</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Boolean</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//读取项目中的lua文件</span>
        <span class="token constant">REDIS_SCRIPT</span><span class="token punctuation">.</span><span class="token function">setLocation</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ClassPathResource</span><span class="token punctuation">(</span><span class="token string">&quot;unlock.lua&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token constant">REDIS_SCRIPT</span><span class="token punctuation">.</span><span class="token function">setResultType</span><span class="token punctuation">(</span><span class="token class-name">Boolean</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">saveOrderInfo</span><span class="token punctuation">(</span><span class="token class-name">OrderDto</span> orderDto<span class="token punctuation">,</span><span class="token class-name">String</span> orderId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//TODO: 需要做防止重复提交和锁定库存操作</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>orderId<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ServiceException</span><span class="token punctuation">(</span><span class="token class-name">ResponseEnum</span><span class="token punctuation">.</span><span class="token constant">ORDER_ID_EXCEPTION</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//lua脚本保证原子性操作</span>
        <span class="token comment">//拿着orderId到redis中查询</span>
        <span class="token comment">//如果redis中有相同orderId,则说明是正常提交订单，把redis中的orderId删除，</span>
        <span class="token comment">// 这个过程要保证原子性操作，由lua脚本保证。</span>
        <span class="token class-name">Boolean</span> flag <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Boolean</span><span class="token punctuation">)</span> redisTemplate<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token constant">REDIS_SCRIPT</span><span class="token punctuation">,</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token class-name">RedisConstant</span><span class="token punctuation">.</span><span class="token constant">ORDER_ID</span> <span class="token operator">+</span> orderId<span class="token punctuation">)</span><span class="token punctuation">,</span> orderId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//如果redis中没有相同orderId,则说明是重复提交订单，不再往下进行</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>flag<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token comment">//返回false则说明是重复提交</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ServiceException</span><span class="token punctuation">(</span><span class="token class-name">ResponseEnum</span><span class="token punctuation">.</span><span class="token constant">DO_NOT_REPLACE_SUBMIT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> 
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="四-、分布式锁实现库存锁定-解决商品超卖问题" tabindex="-1"><a class="header-anchor" href="#四-、分布式锁实现库存锁定-解决商品超卖问题"><span><strong>（四）、分布式锁实现库存锁定，解决商品超卖问题</strong></span></a></h3><p><strong><mark>使用redisson实现分布式锁解决</mark></strong></p><blockquote><p><strong>maven依赖</strong></p></blockquote><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span>
      <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>org<span class="token punctuation">.</span>redisson<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>
      <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>redisson<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>
      <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">&gt;</span></span><span class="token number">3.11</span><span class="token number">.2</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>redisson配置类</strong></p></blockquote><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@Configuration</span>
<span class="token annotation punctuation">@ConfigurationProperties</span><span class="token punctuation">(</span><span class="token string">&quot;spring.redis&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RedissonConfig</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> host<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> addresses<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> password<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> port<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">int</span> timeout <span class="token operator">=</span> <span class="token number">3000</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> connectionPoolSize <span class="token operator">=</span> <span class="token number">64</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> connectionMinimumIdleSize<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> pingConnectionInterval <span class="token operator">=</span> <span class="token number">60000</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token constant">ADDRESS_PREFIX</span> <span class="token operator">=</span> <span class="token string">&quot;redis://&quot;</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 自动装配
     *
     */</span>
    <span class="token annotation punctuation">@Bean</span>
    <span class="token class-name">RedissonClient</span> <span class="token function">redissonSingle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Config</span> config <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Config</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//  判断redis 的host是否为空</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>host<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;host is  empty&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//  配置host，port等参数</span>
        <span class="token class-name">SingleServerConfig</span> serverConfig <span class="token operator">=</span> config<span class="token punctuation">.</span><span class="token function">useSingleServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token comment">//redis://127.0.0.1:7181</span>
                <span class="token punctuation">.</span><span class="token function">setAddress</span><span class="token punctuation">(</span><span class="token constant">ADDRESS_PREFIX</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>host <span class="token operator">+</span> <span class="token string">&quot;:&quot;</span> <span class="token operator">+</span> port<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>timeout<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setPingConnectionInterval</span><span class="token punctuation">(</span>pingConnectionInterval<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setConnectionPoolSize</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>connectionPoolSize<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setConnectionMinimumIdleSize</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>connectionMinimumIdleSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//  判断进入redis 是否密码</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>password<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            serverConfig<span class="token punctuation">.</span><span class="token function">setPassword</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// RedissonClient redisson = Redisson.create(config);</span>
        <span class="token keyword">return</span> <span class="token class-name">Redisson</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>核心代码</strong></p></blockquote><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code></code></pre><div class="line-numbers" aria-hidden="true"></div></div><h2 id="前端" tabindex="-1"><a class="header-anchor" href="#前端"><span>前端</span></a></h2><h3 id="一、后台-由ant-design-vue开发" tabindex="-1"><a class="header-anchor" href="#一、后台-由ant-design-vue开发"><span>一、后台：由ant design vue开发</span></a></h3><h4 id="一-、页面过渡效果" tabindex="-1"><a class="header-anchor" href="#一-、页面过渡效果"><span>（一）、页面过渡效果</span></a></h4>`,98),r={href:"https://animate.style/",target:"_blank",rel:"noopener noreferrer"},k=a(`<blockquote><p><strong>安装Animate.css</strong></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> animate.css <span class="token parameter variable">--save</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></blockquote><blockquote><p><strong>引入到路由的index.js文件中</strong></p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">createRouter</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  history<span class="token punctuation">,</span>
  <span class="token literal-property property">routes</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token comment">//登录页面</span>
      <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&quot;/login&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;Login&quot;</span><span class="token punctuation">,</span>
      <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&quot;@/views/login/Login.vue&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;登录页&quot;</span><span class="token punctuation">,</span>
          <span class="token comment">//这里的这个动画直接去Animate.css中复制即可</span>
        <span class="token literal-property property">transition</span><span class="token operator">:</span> <span class="token string">&quot;animate__bounceInRight&quot;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token comment">//后台</span>
      <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;Layout&quot;</span><span class="token punctuation">,</span>
      <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&quot;@/components/layout/Home.vue&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token literal-property property">redirect</span><span class="token operator">:</span> <span class="token string">&quot;/index&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
          <span class="token comment">//首页</span>
          <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&quot;/index&quot;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;Index&quot;</span><span class="token punctuation">,</span>
          <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&quot;@/views/index/Index.vue&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
          <span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;首页&quot;</span><span class="token punctuation">,</span>
              <span class="token comment">//这里的这个动画直接去Animate.css中复制即可</span>
            <span class="token literal-property property">transition</span><span class="token operator">:</span> <span class="token string">&quot;animate__fadeInLeftBig&quot;</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
          <span class="token comment">//首页</span>
          <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&quot;/user&quot;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;User&quot;</span><span class="token punctuation">,</span>
          <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&quot;@/views/user/User.vue&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
          <span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;用户&quot;</span><span class="token punctuation">,</span>
              <span class="token comment">//这里的这个动画直接去Animate.css中复制即可</span>
            <span class="token literal-property property">transition</span><span class="token operator">:</span> <span class="token string">&quot;animate__backInDown&quot;</span><span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&quot;/:pathMatch(.*)*&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;NotFound&quot;</span><span class="token punctuation">,</span>
      <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&quot;@/views/404/NotFound.vue&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>在App.vue中修改</strong></p></blockquote><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-view</span> <span class="token attr-name">#default</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{route,Component}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>----</span><span class="token punctuation">&gt;</span></span>一定要加这个前缀animate__animated<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>----</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>transition</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>fade<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:enter-active-class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\`animate__animated \${route.meta.transition}\`<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>component</span> <span class="token attr-name">:is</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Component<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>transition</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-view</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token comment">//要引入Animate.css的样式</span>
<span class="token keyword">import</span> <span class="token string">&#39;animate.css&#39;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="二-、ant-desgin-vue表格渲染时报错" tabindex="-1"><a class="header-anchor" href="#二-、ant-desgin-vue表格渲染时报错"><span>(二)、ant desgin vue表格渲染时报错</span></a></h4><p>当 <code>data</code> 判断为空，且 <code>horizonScroll</code> 判断为 <code>true</code> 时，<code>ResizeObserver</code> 包裹下的 <code>children</code> 的 <code>width</code> 可能会发生变化，这时候就有可能会触发 <code>ResizeObserver loop completed with undelivered notifications</code> 报错。</p>`,7),d={href:"https://link.juejin.cn?target=https%3A%2F%2Fcodesandbox.io%2Fs%2Fstoic-christian-jmhl6n%3Ffile%3D%2Fsrc%2Findex.js",target:"_blank",rel:"noopener noreferrer"},v=a(`<p>在 <code>antd</code> 版本大于等于 4.0 的时候</p><ol><li>当初始化 <code>table</code> ，<code>dataSource</code> 赋值空数组时：</li></ol><div class="language-react line-numbers-mode" data-ext="react" data-title="react"><pre class="language-react"><code>react
复制代码&lt;Table columns={[]} dataSource={[]} scroll={{ x: 100 }} /&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>控制台就会报错：<code>ResizeObserver loop limit exceeded </code> 。</p><ol><li>当初始化 <code>table</code> ，<code>dataSource</code> 赋值 <code>[{}]</code> 时：</li></ol><div class="language-react line-numbers-mode" data-ext="react" data-title="react"><pre class="language-react"><code>react
复制代码&lt;Table columns={[]} dataSource={[{}]} scroll={{ x: 100 }} /&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>控制台的报错就没了（如果想要更清楚地观察结果，可以在右侧的界面上刷新一下）。</p><p>那当 <code>antd</code> 版本小于 4.0 的时候，<code>dataSource</code> 的不同赋值会不会触发这个报错呢？</p><p>答案是：不会。</p><p>因为 antd 3.x 或以下的版本，没用上 <code>ResizeObserver</code> 这个功能。</p><h3 id="二、前台-有ant-design-vue开发" tabindex="-1"><a class="header-anchor" href="#二、前台-有ant-design-vue开发"><span>二、前台：有Ant design vue开发</span></a></h3><h4 id="一-、关于如何展示金额小数点问题解决" tabindex="-1"><a class="header-anchor" href="#一-、关于如何展示金额小数点问题解决"><span>（一）、关于如何展示金额小数点问题解决</span></a></h4><blockquote><p><strong>1、写一个函数，然后使用插值语法调用函数</strong></p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">//展示价格的小数方法</span>
<span class="token keyword">function</span> <span class="token function">towNumber</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> val<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>2、比如这个位置展示金额</strong></p></blockquote><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">font-size</span><span class="token punctuation">:</span> 18px<span class="token punctuation">;</span> <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span> <span class="token property">font-weight</span><span class="token punctuation">:</span> bold</span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>{{towNumber(item.price)}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="二-、关于vue3-0-引入-ant-design-vue-报uncaught-typeerror-cannot-read-properties-of-undefined-reading-value-的解决办法" tabindex="-1"><a class="header-anchor" href="#二-、关于vue3-0-引入-ant-design-vue-报uncaught-typeerror-cannot-read-properties-of-undefined-reading-value-的解决办法"><span>(二)、关于vue3.0 引入 ant-design-vue 报Uncaught TypeError: Cannot read properties of undefined (reading &#39;value&#39;) 的解决办法</span></a></h4><p><strong>其实很简单 就是因为版本的问题</strong></p><p>根目录执行下面这个命令就行了</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>cnpm i <span class="token operator">--</span>save ant<span class="token operator">-</span>design<span class="token operator">-</span>vue@next <span class="token operator">-</span><span class="token constant">S</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>cnpm 和 npm 都行</strong></p><h4 id="三-、验证手机号正则表达式" tabindex="-1"><a class="header-anchor" href="#三-、验证手机号正则表达式"><span>（三）、验证手机号正则表达式</span></a></h4><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">//数据校验</span>
<span class="token keyword">var</span> reg_tel <span class="token operator">=</span>
  <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^(13[0-9]|14[01456879]|15[0-35-9]|16[2567]|17[0-8]|18[0-9]|19[0-35-9])\\d{8}$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">doPhoneLogin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  PhoneFormRef<span class="token punctuation">.</span>value
    <span class="token punctuation">.</span><span class="token function">validate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">//手机号验证</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>reg_tel<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span>value<span class="token punctuation">.</span>phone<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;请输入正确的手机号&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">&quot;表单验证成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="四-、验证码倒计时设计" tabindex="-1"><a class="header-anchor" href="#四-、验证码倒计时设计"><span>（四）、验证码倒计时设计</span></a></h4><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a-form-item</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>code<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a-input-search</span>
                      <span class="token attr-name"><span class="token namespace">v-model:</span>value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>certification.code<span class="token punctuation">&quot;</span></span>
                      <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>请输入验证码<span class="token punctuation">&quot;</span></span>
                      <span class="token attr-name">@search</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onSearch<span class="token punctuation">&quot;</span></span>
                      <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span> 100%</span><span class="token punctuation">&quot;</span></span></span>
                      <span class="token attr-name">maxlength</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>6<span class="token punctuation">&quot;</span></span>
                      <span class="token attr-name">minlength</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>6<span class="token punctuation">&quot;</span></span>
                      <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>large<span class="token punctuation">&quot;</span></span>
                      <span class="token attr-name">addon-before</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>验证码<span class="token punctuation">&quot;</span></span>
                    <span class="token punctuation">&gt;</span></span>
                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#enterButton</span><span class="token punctuation">&gt;</span></span>
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a-button</span>
                          <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>getCode<span class="token punctuation">&quot;</span></span>
                          <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">color</span><span class="token punctuation">:</span> #f56c6c</span><span class="token punctuation">&quot;</span></span></span>
                          <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>20px<span class="token punctuation">&quot;</span></span>
                          <span class="token attr-name">:disabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>disabled<span class="token punctuation">&quot;</span></span>
                        <span class="token punctuation">&gt;</span></span>
                        {{ content }}
                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a-button</span><span class="token punctuation">&gt;</span></span>
                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a-input-search</span><span class="token punctuation">&gt;</span></span>
                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a-form-item</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">//获取验证码前确认是否是真实手机号</span>
<span class="token keyword">const</span> disabled <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> content <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&#39;获取验证码&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  Modal<span class="token punctuation">.</span><span class="token function">confirm</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;确认此手机号有效?&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token function">createVNode</span><span class="token punctuation">(</span>ExclamationCircleOutlined<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">content</span><span class="token operator">:</span> <span class="token string">&quot;确保您所输入的手机号真实有效，否则影响后续操作！&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">okText</span><span class="token operator">:</span> <span class="token string">&quot;确认&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">cancelText</span><span class="token operator">:</span> <span class="token string">&quot;取消&quot;</span><span class="token punctuation">,</span>
    <span class="token function">onOk</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">var</span> time <span class="token operator">=</span> <span class="token number">120</span><span class="token punctuation">;</span>
      <span class="token comment">//禁用获取验证码按钮</span>
      disabled<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
      <span class="token comment">// 开启定时器</span>
      <span class="token keyword">var</span> timer <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 判断剩余秒数</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>time <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// 清除定时器和复原按钮</span>
          <span class="token function">clearInterval</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span>
          disabled<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
          content<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">&quot;获取验证码&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          content<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>time<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">秒后重新获取</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
          time<span class="token operator">--</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">onCancel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">&quot;验证码发送失败&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="五-、悬浮阴影" tabindex="-1"><a class="header-anchor" href="#五-、悬浮阴影"><span>(五)、悬浮阴影</span></a></h4><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>address_style<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token selector">.address_style:hover</span> <span class="token punctuation">{</span>
  <span class="token property">box-shadow</span><span class="token punctuation">:</span> 10px 10px 5px #a0cfff<span class="token punctuation">,</span> 10px 10px 5px #fab6b6<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.address_style</span> <span class="token punctuation">{</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 120px<span class="token punctuation">;</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 230px<span class="token punctuation">;</span>
  <span class="token property">opacity</span><span class="token punctuation">:</span> 0.8<span class="token punctuation">;</span>
  <span class="token property">transition</span><span class="token punctuation">:</span> all 0.5s<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="六-、三种路由传参方式" tabindex="-1"><a class="header-anchor" href="#六-、三种路由传参方式"><span><strong>（六）、三种路由传参方式</strong></span></a></h4><blockquote><p><strong>(1)、传字面量</strong></p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">toDetail</span><span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;Detail&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">query</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> id <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>接收</strong></p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useRoute <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue-router&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> route <span class="token operator">=</span> <span class="token function">useRoute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
id <span class="token operator">=</span> route<span class="token punctuation">.</span>query<span class="token punctuation">.</span>id<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>(2)、传数组</strong></p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> cartIds <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">function</span> <span class="token function">toSubmitOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&quot;submitorder&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">query</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> cartIds<span class="token punctuation">.</span>value <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>接收</strong></p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useRoute <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue-router&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> route <span class="token operator">=</span> <span class="token function">useRoute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> cartIds <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
cartIds<span class="token punctuation">.</span>value <span class="token operator">=</span> route<span class="token punctuation">.</span>query<span class="token punctuation">.</span>id<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>(3)、传对象</strong></p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token function">saveOrder</span><span class="token punctuation">(</span>orderDto<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        orderInfoVo<span class="token punctuation">.</span>value <span class="token operator">=</span> res<span class="token punctuation">.</span>data<span class="token punctuation">;</span>
        message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">&quot;提交订单成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;PayFor&quot;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">query</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">item</span><span class="token operator">:</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>orderInfoVo<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><strong>接收</strong></p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useRoute <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue-router&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> route <span class="token operator">=</span> <span class="token function">useRoute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> orderInfoVo <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>route<span class="token punctuation">.</span>query<span class="token punctuation">.</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="三、小程序端-由uniapp-uview-plus开发" tabindex="-1"><a class="header-anchor" href="#三、小程序端-由uniapp-uview-plus开发"><span>三、小程序端：由uniapp + uview-plus开发</span></a></h3><h4 id="一-使用uview-plus模板开发" tabindex="-1"><a class="header-anchor" href="#一-使用uview-plus模板开发"><span><strong>（一）使用uview-plus模板开发</strong></span></a></h4><p><strong>1、引入uview-plus</strong></p><p>在uniapp插件市场搜索uview plus，选择插件后点击右边的“下载插件并导入HBuilderX”</p><p>选择创建的项目进行导入即可</p><figure><img src="https://img-blog.csdnimg.cn/528ead3156d74967946dea74752ab3e2.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>2、在项目根目录中的<code>main.js</code>中，引入并使用uview-plus</strong></p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code>// main.js
import uviewPlus from &#39;@/uni_modules/uview-plus&#39;
 
// #ifdef VUE3
import { createSSRApp } from &#39;vue&#39;
export function createApp() {
  const app = createSSRApp(App)
  app.use(uviewPlus)
  return {
    app
  }
}
// #endif
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://img-blog.csdnimg.cn/a392ec45c98b41388c6dbeaccdf5116f.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>3、在项目根目录的<code>uni.scss</code>中引入uview-plus的全局SCSS主题文件</strong></p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code>/* uni.scss */
@import &#39;@/uni_modules/uview-plus/theme.scss&#39;;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://img-blog.csdnimg.cn/b591656e4de84edfaeb5882899702789.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>4、在App.vue的style中引入uview-plus基础样式</strong></p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>scss<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
    <span class="token comment">/* 需要给style标签加入lang=&quot;scss&quot;属性 */</span>
    <span class="token atrule"><span class="token rule">@import</span> <span class="token string">&quot;@/uni_modules/uview-plus/index.scss&quot;</span><span class="token punctuation">;</span></span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://img-blog.csdnimg.cn/6ab5522dadf44bb8afc9eca6c6f7799f.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>5、在使用的页面中使用uview-plus的组件，效果展示</strong></p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code><span class="token comment">&lt;!-- index.vue --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>view</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>u-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:plain</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:hairline</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span> <span class="token attr-name">text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>细边<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>u-button</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>view</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>效果展示</strong></p><figure><img src="https://img-blog.csdnimg.cn/f24243176c6a4aaabdbf7b700664509e.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,61);function m(g,b){const t=o("ExternalLinkIcon");return l(),c("div",null,[u,s("p",null,[s("strong",null,[n("在路由文件index.js中引入具体的动画效果，推荐"),s("a",r,[n("Animate.css | A cross-browser library of CSS animations."),e(t)]),n(" Animate.css动画")])]),k,s("p",null,[n("所以，如果我们传入非空的值的话，是不是就消除这个报错了呢？我们来"),s("a",d,[n("实践"),e(t)]),n(" 一下。")]),v])}const f=p(i,[["render",m],["__file","曲师商城.html.vue"]]),q=JSON.parse(`{"path":"/posts/%E9%A1%B9%E7%9B%AE%E6%96%87%E6%A1%A3/%E6%9B%B2%E5%B8%88%E5%95%86%E5%9F%8E.html","title":"曲师商城","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2022-01-12T00:00:00.000Z","category":["项目"],"tag":["文档","项目"],"star":true,"sticky":true,"description":"曲师商城 1、项目需求分析 用户需求分析 注册和登录功能： 用户可以通过填写注册表单完成账号注册。 用户可以使用注册的账号和密码进行登录。 提供忘记密码功能，用户可以通过邮箱或手机验证码重置密码。 商品浏览和搜索功能： 用户可以浏览商品列表，查看商品的基本信息、价格、图片等。 用户可以通过关键词搜索商品，系统返回相关商品的结果。 购物车管理功能： 用户...","head":[["meta",{"property":"og:url","content":"https://swx08.github.io/vuepress/posts/%E9%A1%B9%E7%9B%AE%E6%96%87%E6%A1%A3/%E6%9B%B2%E5%B8%88%E5%95%86%E5%9F%8E.html"}],["meta",{"property":"og:site_name","content":"文学博客"}],["meta",{"property":"og:title","content":"曲师商城"}],["meta",{"property":"og:description","content":"曲师商城 1、项目需求分析 用户需求分析 注册和登录功能： 用户可以通过填写注册表单完成账号注册。 用户可以使用注册的账号和密码进行登录。 提供忘记密码功能，用户可以通过邮箱或手机验证码重置密码。 商品浏览和搜索功能： 用户可以浏览商品列表，查看商品的基本信息、价格、图片等。 用户可以通过关键词搜索商品，系统返回相关商品的结果。 购物车管理功能： 用户..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://ice.frostsky.com/2024/03/05/2ed2ad626e4cf23bb5de7a205d98b513.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"曲师商城"}],["meta",{"property":"article:author","content":"sixkey"}],["meta",{"property":"article:tag","content":"文档"}],["meta",{"property":"article:tag","content":"项目"}],["meta",{"property":"article:published_time","content":"2022-01-12T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"曲师商城\\",\\"image\\":[\\"https://ice.frostsky.com/2024/03/05/2ed2ad626e4cf23bb5de7a205d98b513.png\\",\\"https://ice.frostsky.com/2024/03/05/3765c356f0617e06ec5e94b65e44dca0.png\\",\\"https://img-blog.csdnimg.cn/528ead3156d74967946dea74752ab3e2.png\\",\\"https://img-blog.csdnimg.cn/a392ec45c98b41388c6dbeaccdf5116f.png\\",\\"https://img-blog.csdnimg.cn/b591656e4de84edfaeb5882899702789.png\\",\\"https://img-blog.csdnimg.cn/6ab5522dadf44bb8afc9eca6c6f7799f.png\\",\\"https://img-blog.csdnimg.cn/f24243176c6a4aaabdbf7b700664509e.png\\"],\\"datePublished\\":\\"2022-01-12T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"sixkey\\",\\"url\\":\\"https://swx08.github.io\\"}]}"]]},"headers":[{"level":2,"title":"1、项目需求分析","slug":"_1、项目需求分析","link":"#_1、项目需求分析","children":[{"level":3,"title":"用户需求分析","slug":"用户需求分析","link":"#用户需求分析","children":[]},{"level":3,"title":"商家需求分析","slug":"商家需求分析","link":"#商家需求分析","children":[]}]},{"level":2,"title":"2、技术选型","slug":"_2、技术选型","link":"#_2、技术选型","children":[]},{"level":2,"title":"3、项目设计","slug":"_3、项目设计","link":"#_3、项目设计","children":[{"level":4,"title":"用户模块","slug":"用户模块","link":"#用户模块","children":[{"level":5,"title":"系统架构设计：","slug":"系统架构设计","link":"#系统架构设计","children":[]},{"level":5,"title":"（1）功能模块设计：","slug":"_1-功能模块设计","link":"#_1-功能模块设计","children":[]},{"level":5,"title":"（2）数据库设计：","slug":"_2-数据库设计","link":"#_2-数据库设计","children":[]},{"level":5,"title":"（3）接口设计：","slug":"_3-接口设计","link":"#_3-接口设计","children":[]}]},{"level":4,"title":"商家模块","slug":"商家模块","link":"#商家模块","children":[]}]},{"level":2,"title":"后端","slug":"后端","link":"#后端","children":[{"level":3,"title":"一、gateway路由路径匹配","slug":"一、gateway路由路径匹配","link":"#一、gateway路由路径匹配","children":[]},{"level":3,"title":"二、redis缓存","slug":"二、redis缓存","link":"#二、redis缓存","children":[{"level":4,"title":"1、缓存更新策略","slug":"_1、缓存更新策略","link":"#_1、缓存更新策略","children":[]},{"level":4,"title":"2、缓存三大问题解决方案","slug":"_2、缓存三大问题解决方案","link":"#_2、缓存三大问题解决方案","children":[{"level":5,"title":"缓存穿透","slug":"缓存穿透","link":"#缓存穿透","children":[]},{"level":5,"title":"缓存雪崩","slug":"缓存雪崩","link":"#缓存雪崩","children":[]},{"level":5,"title":"缓存击穿","slug":"缓存击穿","link":"#缓存击穿","children":[]}]}]},{"level":3,"title":"三、防止重复提交","slug":"三、防止重复提交","link":"#三、防止重复提交","children":[]},{"level":3,"title":"（四）、分布式锁实现库存锁定，解决商品超卖问题","slug":"四-、分布式锁实现库存锁定-解决商品超卖问题","link":"#四-、分布式锁实现库存锁定-解决商品超卖问题","children":[]}]},{"level":2,"title":"前端","slug":"前端","link":"#前端","children":[{"level":3,"title":"一、后台：由ant design vue开发","slug":"一、后台-由ant-design-vue开发","link":"#一、后台-由ant-design-vue开发","children":[{"level":4,"title":"（一）、页面过渡效果","slug":"一-、页面过渡效果","link":"#一-、页面过渡效果","children":[]},{"level":4,"title":"(二)、ant desgin vue表格渲染时报错","slug":"二-、ant-desgin-vue表格渲染时报错","link":"#二-、ant-desgin-vue表格渲染时报错","children":[]}]},{"level":3,"title":"二、前台：有Ant design vue开发","slug":"二、前台-有ant-design-vue开发","link":"#二、前台-有ant-design-vue开发","children":[{"level":4,"title":"（一）、关于如何展示金额小数点问题解决","slug":"一-、关于如何展示金额小数点问题解决","link":"#一-、关于如何展示金额小数点问题解决","children":[]},{"level":4,"title":"(二)、关于vue3.0 引入 ant-design-vue 报Uncaught TypeError: Cannot read properties of undefined (reading 'value') 的解决办法","slug":"二-、关于vue3-0-引入-ant-design-vue-报uncaught-typeerror-cannot-read-properties-of-undefined-reading-value-的解决办法","link":"#二-、关于vue3-0-引入-ant-design-vue-报uncaught-typeerror-cannot-read-properties-of-undefined-reading-value-的解决办法","children":[]},{"level":4,"title":"（三）、验证手机号正则表达式","slug":"三-、验证手机号正则表达式","link":"#三-、验证手机号正则表达式","children":[]},{"level":4,"title":"（四）、验证码倒计时设计","slug":"四-、验证码倒计时设计","link":"#四-、验证码倒计时设计","children":[]},{"level":4,"title":"(五)、悬浮阴影","slug":"五-、悬浮阴影","link":"#五-、悬浮阴影","children":[]},{"level":4,"title":"（六）、三种路由传参方式","slug":"六-、三种路由传参方式","link":"#六-、三种路由传参方式","children":[]}]},{"level":3,"title":"三、小程序端：由uniapp + uview-plus开发","slug":"三、小程序端-由uniapp-uview-plus开发","link":"#三、小程序端-由uniapp-uview-plus开发","children":[{"level":4,"title":"（一）使用uview-plus模板开发","slug":"一-使用uview-plus模板开发","link":"#一-使用uview-plus模板开发","children":[]}]}]}],"git":{},"readingTime":{"minutes":18.72,"words":5617},"filePathRelative":"posts/项目文档/曲师商城.md","localizedDate":"2022年1月12日","excerpt":"\\n<h2>1、项目需求分析</h2>\\n<h3>用户需求分析</h3>\\n<ul>\\n<li>注册和登录功能：\\n<ul>\\n<li>用户可以通过填写注册表单完成账号注册。</li>\\n<li>用户可以使用注册的账号和密码进行登录。</li>\\n<li>提供忘记密码功能，用户可以通过邮箱或手机验证码重置密码。</li>\\n</ul>\\n</li>\\n<li>商品浏览和搜索功能：\\n<ul>\\n<li>用户可以浏览商品列表，查看商品的基本信息、价格、图片等。</li>\\n<li>用户可以通过关键词搜索商品，系统返回相关商品的结果。</li>\\n</ul>\\n</li>\\n<li>购物车管理功能：\\n<ul>\\n<li>用户可以将感兴趣的商品添加到购物车。</li>\\n<li>用户可以修改购物车中商品的数量。</li>\\n<li>用户可以删除购物车中的商品。</li>\\n<li>用户可以清空购物车。</li>\\n</ul>\\n</li>\\n<li>下单和支付功能：\\n<ul>\\n<li>用户可以选择购物车中的商品完成下单。</li>\\n<li>用户需要填写配送地址和选择支付方式。</li>\\n<li>系统生成订单并显示订单详情。</li>\\n<li>用户进行支付操作，可以选择在线支付或货到付款。</li>\\n</ul>\\n</li>\\n<li>查看订单状态功能：\\n<ul>\\n<li>用户可以查看订单的物流信息和状态，了解订单的进展情况。</li>\\n<li>用户可以查看订单的详细信息，如商品清单、收货地址等。</li>\\n</ul>\\n</li>\\n<li>取消订单功能：\\n<ul>\\n<li>用户可以在一定条件下取消未发货的订单，如退货期未过等。</li>\\n</ul>\\n</li>\\n<li>评价和回复功能：\\n<ul>\\n<li>用户可以对购买的商品进行评价，并选择评分和文字评论。</li>\\n<li>商家可以回复用户的评价。</li>\\n</ul>\\n</li>\\n<li>优惠券和积分功能：\\n<ul>\\n<li>用户可以领取优惠券和积分，用于抵扣购物金额或兑换商品。</li>\\n</ul>\\n</li>\\n<li>促销活动功能：\\n<ul>\\n<li>商家可以发布促销活动，如限时折扣、满减等。</li>\\n<li>用户可以参与促销活动，享受相应的优惠。</li>\\n</ul>\\n</li>\\n<li>客服支持功能：\\n<ul>\\n<li>提供在线客服功能，解答用户的问题和处理售后问题。</li>\\n</ul>\\n</li>\\n<li>搜索和推荐功能：\\n<ul>\\n<li>用户可以通过关键词搜索商品，系统根据用户的浏览和购买记录推荐相关商品。</li>\\n</ul>\\n</li>\\n<li>移动端适配功能：\\n<ul>\\n<li>商城需要适配不同的移动设备，提供良好的移动端用户体验。</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}`);export{f as comp,q as data};
