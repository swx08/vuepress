import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,a as t}from"./app-DCsLG_oX.js";const p={},e=t(`<h1 id="jwt工具类" tabindex="-1"><a class="header-anchor" href="#jwt工具类"><span>jwt工具类</span></a></h1><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>
<span class="token doc-comment comment">/**
 * jwt工具类
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JwtHelper</span> <span class="token punctuation">{</span>
    <span class="token comment">//token有效时间</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">long</span> tokenExpiration <span class="token operator">=</span> <span class="token number">365</span> <span class="token operator">*</span> <span class="token number">24</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">;</span>
    <span class="token comment">//token签名加密的密钥</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">String</span> tokenSignKey <span class="token operator">=</span> <span class="token string">&quot;123456&quot;</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 生成token
     * <span class="token keyword">@param</span> <span class="token parameter">userId</span>
     * <span class="token keyword">@param</span> <span class="token parameter">username</span>
     * <span class="token keyword">@return</span>
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">createToken</span><span class="token punctuation">(</span><span class="token class-name">Long</span> userId<span class="token punctuation">,</span> <span class="token class-name">String</span> username<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> token <span class="token operator">=</span> <span class="token class-name">Jwts</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token comment">//分类</span>
                <span class="token punctuation">.</span><span class="token function">setSubject</span><span class="token punctuation">(</span><span class="token string">&quot;AUTH-USER&quot;</span><span class="token punctuation">)</span>
                <span class="token comment">//设置token有效时长</span>
                <span class="token punctuation">.</span><span class="token function">setExpiration</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> tokenExpiration<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token comment">//设置主体部分(有效载荷)</span>
                <span class="token punctuation">.</span><span class="token function">claim</span><span class="token punctuation">(</span><span class="token string">&quot;userId&quot;</span><span class="token punctuation">,</span> userId<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">claim</span><span class="token punctuation">(</span><span class="token string">&quot;username&quot;</span><span class="token punctuation">,</span> username<span class="token punctuation">)</span>
                <span class="token comment">//签名部分</span>
                <span class="token comment">//对密钥进行加密处理</span>
                <span class="token punctuation">.</span><span class="token function">signWith</span><span class="token punctuation">(</span><span class="token class-name">SignatureAlgorithm</span><span class="token punctuation">.</span><span class="token constant">HS512</span><span class="token punctuation">,</span> tokenSignKey<span class="token punctuation">)</span>
                <span class="token comment">//对生成的token字符串进行压缩</span>
                <span class="token punctuation">.</span><span class="token function">compressWith</span><span class="token punctuation">(</span><span class="token class-name">CompressionCodecs</span><span class="token punctuation">.</span><span class="token constant">GZIP</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">compact</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> token<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 解析请求头里的token字符串的信息获取用户userId
     * <span class="token keyword">@param</span> <span class="token parameter">token</span>
     * <span class="token keyword">@return</span>
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Long</span> <span class="token function">getUserId</span><span class="token punctuation">(</span><span class="token class-name">String</span> token<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

            <span class="token class-name">Jws</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Claims</span><span class="token punctuation">&gt;</span></span> claimsJws <span class="token operator">=</span> <span class="token class-name">Jwts</span><span class="token punctuation">.</span><span class="token function">parser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setSigningKey</span><span class="token punctuation">(</span>tokenSignKey<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">parseClaimsJws</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Claims</span> claims <span class="token operator">=</span> claimsJws<span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Integer</span> userId <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">)</span> claims<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;userId&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> userId<span class="token punctuation">.</span><span class="token function">longValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 解析请求头里的token字符串的信息获取用户名userName
     * <span class="token keyword">@param</span> <span class="token parameter">token</span>
     * <span class="token keyword">@return</span>
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token class-name">String</span> token<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>

            <span class="token class-name">Jws</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Claims</span><span class="token punctuation">&gt;</span></span> claimsJws <span class="token operator">=</span> <span class="token class-name">Jwts</span><span class="token punctuation">.</span><span class="token function">parser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setSigningKey</span><span class="token punctuation">(</span>tokenSignKey<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">parseClaimsJws</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Claims</span> claims <span class="token operator">=</span> claimsJws<span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span> claims<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;username&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),o=[e];function c(l,u){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","JWT工具类.html.vue"]]),m=JSON.parse('{"path":"/posts/%E5%90%8E%E7%AB%AF/%E5%AE%9E%E6%88%98/JWT%E5%B7%A5%E5%85%B7%E7%B1%BB.html","title":"jwt工具类","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2022-01-12T00:00:00.000Z","category":["后端"],"tag":["JWT","实战"],"star":true,"sticky":true,"description":"jwt工具类","head":[["meta",{"property":"og:url","content":"https://swx08.github.io/vuepress/posts/%E5%90%8E%E7%AB%AF/%E5%AE%9E%E6%88%98/JWT%E5%B7%A5%E5%85%B7%E7%B1%BB.html"}],["meta",{"property":"og:site_name","content":"文学博客"}],["meta",{"property":"og:title","content":"jwt工具类"}],["meta",{"property":"og:description","content":"jwt工具类"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"sixkey"}],["meta",{"property":"article:tag","content":"JWT"}],["meta",{"property":"article:tag","content":"实战"}],["meta",{"property":"article:published_time","content":"2022-01-12T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"jwt工具类\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-01-12T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"sixkey\\",\\"url\\":\\"https://swx08.github.io\\"}]}"]]},"headers":[],"git":{},"readingTime":{"minutes":0.9,"words":270},"filePathRelative":"posts/后端/实战/JWT工具类.md","localizedDate":"2022年1月12日","excerpt":"\\n<div class=\\"language-java\\" data-ext=\\"java\\" data-title=\\"java\\"><pre class=\\"language-java\\"><code>\\n<span class=\\"token doc-comment comment\\">/**\\n * jwt工具类\\n */</span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">JwtHelper</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token comment\\">//token有效时间</span>\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token keyword\\">static</span> <span class=\\"token keyword\\">long</span> tokenExpiration <span class=\\"token operator\\">=</span> <span class=\\"token number\\">365</span> <span class=\\"token operator\\">*</span> <span class=\\"token number\\">24</span> <span class=\\"token operator\\">*</span> <span class=\\"token number\\">60</span> <span class=\\"token operator\\">*</span> <span class=\\"token number\\">60</span> <span class=\\"token operator\\">*</span> <span class=\\"token number\\">1000</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token comment\\">//token签名加密的密钥</span>\\n    <span class=\\"token keyword\\">private</span> <span class=\\"token keyword\\">static</span> <span class=\\"token class-name\\">String</span> tokenSignKey <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"123456\\"</span><span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token doc-comment comment\\">/**\\n     * 生成token\\n     * <span class=\\"token keyword\\">@param</span> <span class=\\"token parameter\\">userId</span>\\n     * <span class=\\"token keyword\\">@param</span> <span class=\\"token parameter\\">username</span>\\n     * <span class=\\"token keyword\\">@return</span>\\n     */</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">static</span> <span class=\\"token class-name\\">String</span> <span class=\\"token function\\">createToken</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Long</span> userId<span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">String</span> username<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token class-name\\">String</span> token <span class=\\"token operator\\">=</span> <span class=\\"token class-name\\">Jwts</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">builder</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span>\\n                <span class=\\"token comment\\">//分类</span>\\n                <span class=\\"token punctuation\\">.</span><span class=\\"token function\\">setSubject</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"AUTH-USER\\"</span><span class=\\"token punctuation\\">)</span>\\n                <span class=\\"token comment\\">//设置token有效时长</span>\\n                <span class=\\"token punctuation\\">.</span><span class=\\"token function\\">setExpiration</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Date</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">System</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">currentTimeMillis</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">+</span> tokenExpiration<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span>\\n                <span class=\\"token comment\\">//设置主体部分(有效载荷)</span>\\n                <span class=\\"token punctuation\\">.</span><span class=\\"token function\\">claim</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"userId\\"</span><span class=\\"token punctuation\\">,</span> userId<span class=\\"token punctuation\\">)</span>\\n                <span class=\\"token punctuation\\">.</span><span class=\\"token function\\">claim</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"username\\"</span><span class=\\"token punctuation\\">,</span> username<span class=\\"token punctuation\\">)</span>\\n                <span class=\\"token comment\\">//签名部分</span>\\n                <span class=\\"token comment\\">//对密钥进行加密处理</span>\\n                <span class=\\"token punctuation\\">.</span><span class=\\"token function\\">signWith</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">SignatureAlgorithm</span><span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">HS512</span><span class=\\"token punctuation\\">,</span> tokenSignKey<span class=\\"token punctuation\\">)</span>\\n                <span class=\\"token comment\\">//对生成的token字符串进行压缩</span>\\n                <span class=\\"token punctuation\\">.</span><span class=\\"token function\\">compressWith</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">CompressionCodecs</span><span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">GZIP</span><span class=\\"token punctuation\\">)</span>\\n                <span class=\\"token punctuation\\">.</span><span class=\\"token function\\">compact</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">return</span> token<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token doc-comment comment\\">/**\\n     * 解析请求头里的token字符串的信息获取用户userId\\n     * <span class=\\"token keyword\\">@param</span> <span class=\\"token parameter\\">token</span>\\n     * <span class=\\"token keyword\\">@return</span>\\n     */</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">static</span> <span class=\\"token class-name\\">Long</span> <span class=\\"token function\\">getUserId</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">String</span> token<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">try</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">StringUtils</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">isEmpty</span><span class=\\"token punctuation\\">(</span>token<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">;</span>\\n\\n            <span class=\\"token class-name\\">Jws</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">Claims</span><span class=\\"token punctuation\\">&gt;</span></span> claimsJws <span class=\\"token operator\\">=</span> <span class=\\"token class-name\\">Jwts</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">parser</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">setSigningKey</span><span class=\\"token punctuation\\">(</span>tokenSignKey<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">parseClaimsJws</span><span class=\\"token punctuation\\">(</span>token<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token class-name\\">Claims</span> claims <span class=\\"token operator\\">=</span> claimsJws<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getBody</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token class-name\\">Integer</span> userId <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Integer</span><span class=\\"token punctuation\\">)</span> claims<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">get</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"userId\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token keyword\\">return</span> userId<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">longValue</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">catch</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Exception</span> e<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            e<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">printStackTrace</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token doc-comment comment\\">/**\\n     * 解析请求头里的token字符串的信息获取用户名userName\\n     * <span class=\\"token keyword\\">@param</span> <span class=\\"token parameter\\">token</span>\\n     * <span class=\\"token keyword\\">@return</span>\\n     */</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">static</span> <span class=\\"token class-name\\">String</span> <span class=\\"token function\\">getUsername</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">String</span> token<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">try</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">StringUtils</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">isEmpty</span><span class=\\"token punctuation\\">(</span>token<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">return</span> <span class=\\"token string\\">\\"\\"</span><span class=\\"token punctuation\\">;</span>\\n\\n            <span class=\\"token class-name\\">Jws</span><span class=\\"token generics\\"><span class=\\"token punctuation\\">&lt;</span><span class=\\"token class-name\\">Claims</span><span class=\\"token punctuation\\">&gt;</span></span> claimsJws <span class=\\"token operator\\">=</span> <span class=\\"token class-name\\">Jwts</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">parser</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">setSigningKey</span><span class=\\"token punctuation\\">(</span>tokenSignKey<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">parseClaimsJws</span><span class=\\"token punctuation\\">(</span>token<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token class-name\\">Claims</span> claims <span class=\\"token operator\\">=</span> claimsJws<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getBody</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token keyword\\">return</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">String</span><span class=\\"token punctuation\\">)</span> claims<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">get</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"username\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">catch</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Exception</span> e<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            e<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">printStackTrace</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token keyword\\">return</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n</code></pre></div>","autoDesc":true}');export{r as comp,m as data};
