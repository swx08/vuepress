import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,a as t}from"./app-DCsLG_oX.js";const e={},p=t(`<h1 id="小程序服务器域名配置" tabindex="-1"><a class="header-anchor" href="#小程序服务器域名配置"><span>小程序服务器域名配置</span></a></h1><h2 id="_1、为什么要配置服务区域名呢" tabindex="-1"><a class="header-anchor" href="#_1、为什么要配置服务区域名呢"><span>1、为什么要配置服务区域名呢？</span></a></h2><p><strong>（1）这是因为我们要上线小程序时，微信官方要求要配置一个已备案过的域名，并且请求url必须是https开头的，如：https://baidu.com ，因为https是安全的，这是小程序官方要求的。</strong></p><p><strong>（2）小程序端的所有后台数据都是通过https请求的，如果不配置就会出现小程序上线了但是后台数据请求不到的情况。</strong></p><h2 id="_2、那么如何配置呢" tabindex="-1"><a class="header-anchor" href="#_2、那么如何配置呢"><span>2、那么如何配置呢？</span></a></h2><blockquote><p><strong>前提条件</strong></p><ul><li><strong>备案过的一个域名</strong></li><li><strong>获取服务器上的免费ssl证书，这里以tomcat证书为例</strong></li><li><strong>域名绑定ssl证书</strong></li></ul></blockquote><h2 id="_3、开始配置" tabindex="-1"><a class="header-anchor" href="#_3、开始配置"><span><strong>3、开始配置</strong></span></a></h2><blockquote><p><strong>步骤1</strong></p></blockquote><p><strong>下载并解压tomcat证书，解压后会有两个文件如下</strong></p><figure><img src="https://pic.imgdb.cn/item/653f9e50c458853aef331f47.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p><strong>步骤2</strong></p></blockquote><p><strong>配置springboot后端代码中，将jks类型的文件放到项目目录resources下</strong></p><figure><img src="https://pic.imgdb.cn/item/653f9e30c458853aef32bb70.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>yml文件中配置ssl</strong></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>server<span class="token operator">:</span>
  port<span class="token operator">:</span> <span class="token number">8600</span>
  ssl<span class="token operator">:</span>
    key<span class="token operator">-</span>store<span class="token operator">:</span> classpath<span class="token operator">:</span>six<span class="token punctuation">.</span>top<span class="token punctuation">.</span>jks
    key<span class="token operator">-</span>store<span class="token operator">-</span>type<span class="token operator">:</span> <span class="token constant">JKS</span>
    key<span class="token operator">-</span>store<span class="token operator">-</span>password<span class="token operator">:</span> <span class="token number">65729</span>xxxx
#    key<span class="token operator">-</span>password<span class="token operator">:</span> 配置这个tomcat回去启动报错
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>做完以上两个步骤后就说明你的域名已经绑定了ssl证书了，可以发起安全的https请求了</strong></p><p><strong>原本项目请求地址为http://www.swxlife.top:8600 , 现在可以通过https://www.swxlife.top:8600去请求了</strong>。</p><blockquote><p><strong>步骤3</strong></p></blockquote><p><strong>最后一步将配置好的这个请求地址配置到小程序管理后台的服务器域名配置即可</strong></p><figure><img src="https://pic.imgdb.cn/item/653f96f3c458853aef1c6936.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>最后小程序上线后就可以正常访问后台数据咯</strong></p><p><strong>不过在通过开发者工具上传代码到小程序后台时记得把项目配置详情中的不合法校验域名的那个选项别勾上</strong></p><h2 id="_4、扩展" tabindex="-1"><a class="header-anchor" href="#_4、扩展"><span>4、扩展</span></a></h2><p><strong>我们上面说到yml文件中配置ssl，这种有个限制就是你的https请求只能转发到8600端口，那如果我们想通过其他端口访问到8600端口怎么办呢，只需要添加一个tomcat配置类进行重定向即可</strong></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>sixkey<span class="token punctuation">.</span>config<span class="token punctuation">.</span>tomcatconfig</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span></span><span class="token class-name">Context</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>catalina<span class="token punctuation">.</span>connector<span class="token punctuation">.</span></span><span class="token class-name">Connector</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>tomcat<span class="token punctuation">.</span>util<span class="token punctuation">.</span>descriptor<span class="token punctuation">.</span>web<span class="token punctuation">.</span></span><span class="token class-name">SecurityCollection</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>tomcat<span class="token punctuation">.</span>util<span class="token punctuation">.</span>descriptor<span class="token punctuation">.</span>web<span class="token punctuation">.</span></span><span class="token class-name">SecurityConstraint</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>web<span class="token punctuation">.</span>embedded<span class="token punctuation">.</span>tomcat<span class="token punctuation">.</span></span><span class="token class-name">TomcatServletWebServerFactory</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Bean</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Configuration</span></span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/**
 * ClassName: TomcatConfig
 * Package: com.sixkey.config.tomcatconfig
 * Description:
 *
 * @Author: @weixueshi
 * @Create: 2023/10/30 - 13:15
 * @Version: v1.0
 */</span>
<span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TomcatConfig</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">TomcatServletWebServerFactory</span> <span class="token function">tomcatServletWebServerFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">TomcatServletWebServerFactory</span> factory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TomcatServletWebServerFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">postProcessContext</span><span class="token punctuation">(</span><span class="token class-name">Context</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">SecurityConstraint</span> securityConstraint <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SecurityConstraint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                securityConstraint<span class="token punctuation">.</span><span class="token function">setUserConstraint</span><span class="token punctuation">(</span><span class="token string">&quot;CONFIDENTIAL&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">SecurityCollection</span> securityCollection <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SecurityCollection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                securityCollection<span class="token punctuation">.</span><span class="token function">addPattern</span><span class="token punctuation">(</span><span class="token string">&quot;/*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                securityConstraint<span class="token punctuation">.</span><span class="token function">addCollection</span><span class="token punctuation">(</span>securityCollection<span class="token punctuation">)</span><span class="token punctuation">;</span>
                context<span class="token punctuation">.</span><span class="token function">addConstraint</span><span class="token punctuation">(</span>securityConstraint<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
        factory<span class="token punctuation">.</span><span class="token function">addAdditionalTomcatConnectors</span><span class="token punctuation">(</span><span class="token function">httpConnector</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> factory<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">Connector</span> <span class="token function">httpConnector</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Connector</span> connector <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Connector</span><span class="token punctuation">(</span><span class="token string">&quot;org.apache.coyote.http11.Http11NioProtocol&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        connector<span class="token punctuation">.</span><span class="token function">setScheme</span><span class="token punctuation">(</span><span class="token string">&quot;http&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        connector<span class="token punctuation">.</span><span class="token function">setPort</span><span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//设置80端口</span>
        connector<span class="token punctuation">.</span><span class="token function">setSecure</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        connector<span class="token punctuation">.</span><span class="token function">setRedirectPort</span><span class="token punctuation">(</span><span class="token number">8600</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//当有请求访问80端口时就会被重定向到8600端口</span>
        <span class="token keyword">return</span> connector<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>到此我们的小程序服务器域名配置就结束了</strong></p>`,26),o=[p];function c(i,l){return s(),a("div",null,o)}const k=n(e,[["render",c],["__file","小程序服务器域名配置.html.vue"]]),d=JSON.parse('{"path":"/posts/%E5%90%8E%E7%AB%AF/%E5%AE%9E%E6%88%98/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%9F%9F%E5%90%8D%E9%85%8D%E7%BD%AE.html","title":"小程序服务器域名配置","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2022-01-12T00:00:00.000Z","category":["后端"],"tag":["小程序","服务器域名配置","实战"],"star":true,"sticky":true,"description":"小程序服务器域名配置 1、为什么要配置服务区域名呢？ （1）这是因为我们要上线小程序时，微信官方要求要配置一个已备案过的域名，并且请求url必须是https开头的，如：https://baidu.com ，因为https是安全的，这是小程序官方要求的。 （2）小程序端的所有后台数据都是通过https请求的，如果不配置就会出现小程序上线了但是后台数据请求...","head":[["meta",{"property":"og:url","content":"https://swx08.github.io/vuepress/posts/%E5%90%8E%E7%AB%AF/%E5%AE%9E%E6%88%98/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%9F%9F%E5%90%8D%E9%85%8D%E7%BD%AE.html"}],["meta",{"property":"og:site_name","content":"文学博客"}],["meta",{"property":"og:title","content":"小程序服务器域名配置"}],["meta",{"property":"og:description","content":"小程序服务器域名配置 1、为什么要配置服务区域名呢？ （1）这是因为我们要上线小程序时，微信官方要求要配置一个已备案过的域名，并且请求url必须是https开头的，如：https://baidu.com ，因为https是安全的，这是小程序官方要求的。 （2）小程序端的所有后台数据都是通过https请求的，如果不配置就会出现小程序上线了但是后台数据请求..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://pic.imgdb.cn/item/653f9e50c458853aef331f47.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"小程序服务器域名配置"}],["meta",{"property":"article:author","content":"sixkey"}],["meta",{"property":"article:tag","content":"小程序"}],["meta",{"property":"article:tag","content":"服务器域名配置"}],["meta",{"property":"article:tag","content":"实战"}],["meta",{"property":"article:published_time","content":"2022-01-12T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"小程序服务器域名配置\\",\\"image\\":[\\"https://pic.imgdb.cn/item/653f9e50c458853aef331f47.png\\",\\"https://pic.imgdb.cn/item/653f9e30c458853aef32bb70.png\\",\\"https://pic.imgdb.cn/item/653f96f3c458853aef1c6936.png\\"],\\"datePublished\\":\\"2022-01-12T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"sixkey\\",\\"url\\":\\"https://swx08.github.io\\"}]}"]]},"headers":[{"level":2,"title":"1、为什么要配置服务区域名呢？","slug":"_1、为什么要配置服务区域名呢","link":"#_1、为什么要配置服务区域名呢","children":[]},{"level":2,"title":"2、那么如何配置呢？","slug":"_2、那么如何配置呢","link":"#_2、那么如何配置呢","children":[]},{"level":2,"title":"3、开始配置","slug":"_3、开始配置","link":"#_3、开始配置","children":[]},{"level":2,"title":"4、扩展","slug":"_4、扩展","link":"#_4、扩展","children":[]}],"git":{},"readingTime":{"minutes":2.28,"words":684},"filePathRelative":"posts/后端/实战/小程序服务器域名配置.md","localizedDate":"2022年1月12日","excerpt":"\\n<h2>1、为什么要配置服务区域名呢？</h2>\\n<p><strong>（1）这是因为我们要上线小程序时，微信官方要求要配置一个已备案过的域名，并且请求url必须是https开头的，如：https://baidu.com ，因为https是安全的，这是小程序官方要求的。</strong></p>\\n<p><strong>（2）小程序端的所有后台数据都是通过https请求的，如果不配置就会出现小程序上线了但是后台数据请求不到的情况。</strong></p>\\n<h2>2、那么如何配置呢？</h2>\\n<blockquote>\\n<p><strong>前提条件</strong></p>\\n<ul>\\n<li><strong>备案过的一个域名</strong></li>\\n<li><strong>获取服务器上的免费ssl证书，这里以tomcat证书为例</strong></li>\\n<li><strong>域名绑定ssl证书</strong></li>\\n</ul>\\n</blockquote>","autoDesc":true}');export{k as comp,d as data};
